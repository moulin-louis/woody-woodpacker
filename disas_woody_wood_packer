
./cmake-build-release/woody_woodpacker:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400318 <.interp>:
  400318:	2f                   	(bad)  
  400319:	6c                   	ins    BYTE PTR es:[rdi],dx
  40031a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400326:	78 2d                	js     400355 <__abi_tag-0x27>
  400328:	78 38                	js     400362 <__abi_tag-0x1a>
  40032a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000400338 <.note.gnu.property>:
  400338:	04 00                	add    al,0x0
  40033a:	00 00                	add    BYTE PTR [rax],al
  40033c:	10 00                	adc    BYTE PTR [rax],al
  40033e:	00 00                	add    BYTE PTR [rax],al
  400340:	05 00 00 00 47       	add    eax,0x47000000
  400345:	4e 55                	rex.WRX push rbp
  400347:	00 02                	add    BYTE PTR [rdx],al
  400349:	80 00 c0             	add    BYTE PTR [rax],0xc0
  40034c:	04 00                	add    al,0x0
  40034e:	00 00                	add    BYTE PTR [rax],al
  400350:	01 00                	add    DWORD PTR [rax],eax
  400352:	00 00                	add    BYTE PTR [rax],al
  400354:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400358 <.note.gnu.build-id>:
  400358:	04 00                	add    al,0x0
  40035a:	00 00                	add    BYTE PTR [rax],al
  40035c:	14 00                	adc    al,0x0
  40035e:	00 00                	add    BYTE PTR [rax],al
  400360:	03 00                	add    eax,DWORD PTR [rax]
  400362:	00 00                	add    BYTE PTR [rax],al
  400364:	47                   	rex.RXB
  400365:	4e 55                	rex.WRX push rbp
  400367:	00 49 ae             	add    BYTE PTR [rcx-0x52],cl
  40036a:	a3 1b a3 d6 73 b9 44 	movabs ds:0xa8fe44b973d6a31b,eax
  400371:	fe a8 
  400373:	c4 21 9d 9f          	(bad)
  400377:	94                   	xchg   esp,eax
  400378:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  400379:	84 da                	test   dl,bl
  40037b:	2b                   	.byte 0x2b

Disassembly of section .note.ABI-tag:

000000000040037c <__abi_tag>:
  40037c:	04 00                	add    al,0x0
  40037e:	00 00                	add    BYTE PTR [rax],al
  400380:	10 00                	adc    BYTE PTR [rax],al
  400382:	00 00                	add    BYTE PTR [rax],al
  400384:	01 00                	add    DWORD PTR [rax],eax
  400386:	00 00                	add    BYTE PTR [rax],al
  400388:	47                   	rex.RXB
  400389:	4e 55                	rex.WRX push rbp
  40038b:	00 00                	add    BYTE PTR [rax],al
  40038d:	00 00                	add    BYTE PTR [rax],al
  40038f:	00 03                	add    BYTE PTR [rbx],al
  400391:	00 00                	add    BYTE PTR [rax],al
  400393:	00 02                	add    BYTE PTR [rdx],al
  400395:	00 00                	add    BYTE PTR [rax],al
  400397:	00 00                	add    BYTE PTR [rax],al
  400399:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .hash:

00000000004003a0 <.hash>:
  4003a0:	03 00                	add    eax,DWORD PTR [rax]
  4003a2:	00 00                	add    BYTE PTR [rax],al
  4003a4:	11 00                	adc    DWORD PTR [rax],eax
  4003a6:	00 00                	add    BYTE PTR [rax],al
  4003a8:	10 00                	adc    BYTE PTR [rax],al
  4003aa:	00 00                	add    BYTE PTR [rax],al
  4003ac:	0a 00                	or     al,BYTE PTR [rax]
  4003ae:	00 00                	add    BYTE PTR [rax],al
  4003b0:	0f 00 00             	sldt   WORD PTR [rax]
	...
  4003bf:	00 01                	add    BYTE PTR [rcx],al
  4003c1:	00 00                	add    BYTE PTR [rax],al
  4003c3:	00 03                	add    BYTE PTR [rbx],al
  4003c5:	00 00                	add    BYTE PTR [rax],al
  4003c7:	00 02                	add    BYTE PTR [rdx],al
  4003c9:	00 00                	add    BYTE PTR [rax],al
  4003cb:	00 00                	add    BYTE PTR [rax],al
  4003cd:	00 00                	add    BYTE PTR [rax],al
  4003cf:	00 05 00 00 00 06    	add    BYTE PTR [rip+0x6000000],al        # 64003d5 <__TMC_END__+0x5ffb29d>
  4003d5:	00 00                	add    BYTE PTR [rax],al
  4003d7:	00 04 00             	add    BYTE PTR [rax+rax*1],al
  4003da:	00 00                	add    BYTE PTR [rax],al
  4003dc:	09 00                	or     DWORD PTR [rax],eax
  4003de:	00 00                	add    BYTE PTR [rax],al
  4003e0:	07                   	(bad)  
  4003e1:	00 00                	add    BYTE PTR [rax],al
  4003e3:	00 0b                	add    BYTE PTR [rbx],cl
  4003e5:	00 00                	add    BYTE PTR [rax],al
  4003e7:	00 08                	add    BYTE PTR [rax],cl
  4003e9:	00 00                	add    BYTE PTR [rax],al
  4003eb:	00 0d 00 00 00 0e    	add    BYTE PTR [rip+0xe000000],cl        # e4003f1 <__TMC_END__+0xdffb2b9>
  4003f1:	00 00                	add    BYTE PTR [rax],al
  4003f3:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...

Disassembly of section .gnu.hash:

00000000004003f8 <.gnu.hash>:
  4003f8:	01 00                	add    DWORD PTR [rax],eax
  4003fa:	00 00                	add    BYTE PTR [rax],al
  4003fc:	01 00                	add    DWORD PTR [rax],eax
  4003fe:	00 00                	add    BYTE PTR [rax],al
  400400:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

0000000000400418 <.dynsym>:
	...
  400430:	32 00                	xor    al,BYTE PTR [rax]
  400432:	00 00                	add    BYTE PTR [rax],al
  400434:	12 00                	adc    al,BYTE PTR [rax]
	...
  400446:	00 00                	add    BYTE PTR [rax],al
  400448:	58                   	pop    rax
  400449:	00 00                	add    BYTE PTR [rax],al
  40044b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40045d:	00 00                	add    BYTE PTR [rax],al
  40045f:	00 1b                	add    BYTE PTR [rbx],bl
  400461:	00 00                	add    BYTE PTR [rax],al
  400463:	00 12                	add    BYTE PTR [rdx],dl
	...
  400475:	00 00                	add    BYTE PTR [rax],al
  400477:	00 2d 00 00 00 12    	add    BYTE PTR [rip+0x12000000],ch        # 1240047d <__TMC_END__+0x11ffb345>
	...
  40048d:	00 00                	add    BYTE PTR [rax],al
  40048f:	00 0d 00 00 00 12    	add    BYTE PTR [rip+0x12000000],cl        # 12400495 <__TMC_END__+0x11ffb35d>
	...
  4004a5:	00 00                	add    BYTE PTR [rax],al
  4004a7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  4004aa:	00 00                	add    BYTE PTR [rax],al
  4004ac:	12 00                	adc    al,BYTE PTR [rax]
	...
  4004be:	00 00                	add    BYTE PTR [rax],al
  4004c0:	37                   	(bad)  
  4004c1:	00 00                	add    BYTE PTR [rax],al
  4004c3:	00 12                	add    BYTE PTR [rdx],dl
	...
  4004d5:	00 00                	add    BYTE PTR [rax],al
  4004d7:	00 13                	add    BYTE PTR [rbx],dl
  4004d9:	00 00                	add    BYTE PTR [rax],al
  4004db:	00 12                	add    BYTE PTR [rdx],dl
	...
  4004ed:	00 00                	add    BYTE PTR [rax],al
  4004ef:	00 01                	add    BYTE PTR [rcx],al
  4004f1:	00 00                	add    BYTE PTR [rax],al
  4004f3:	00 12                	add    BYTE PTR [rdx],dl
	...
  400505:	00 00                	add    BYTE PTR [rax],al
  400507:	00 60 00             	add    BYTE PTR [rax+0x0],ah
  40050a:	00 00                	add    BYTE PTR [rax],al
  40050c:	12 00                	adc    al,BYTE PTR [rax]
	...
  40051e:	00 00                	add    BYTE PTR [rax],al
  400520:	93                   	xchg   ebx,eax
  400521:	00 00                	add    BYTE PTR [rax],al
  400523:	00 20                	add    BYTE PTR [rax],ah
	...
  400535:	00 00                	add    BYTE PTR [rax],al
  400537:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
  40053a:	00 00                	add    BYTE PTR [rax],al
  40053c:	12 00                	adc    al,BYTE PTR [rax]
	...
  40054e:	00 00                	add    BYTE PTR [rax],al
  400550:	06                   	(bad)  
  400551:	00 00                	add    BYTE PTR [rax],al
  400553:	00 12                	add    BYTE PTR [rdx],dl
	...
  400565:	00 00                	add    BYTE PTR [rax],al
  400567:	00 42 00             	add    BYTE PTR [rdx+0x0],al
  40056a:	00 00                	add    BYTE PTR [rax],al
  40056c:	12 00                	adc    al,BYTE PTR [rax]
	...
  40057e:	00 00                	add    BYTE PTR [rax],al
  400580:	3d 00 00 00 12       	cmp    eax,0x12000000
	...
  400595:	00 00                	add    BYTE PTR [rax],al
  400597:	00 51 00             	add    BYTE PTR [rcx+0x0],dl
  40059a:	00 00                	add    BYTE PTR [rax],al
  40059c:	12 00                	adc    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

00000000004005b0 <.dynstr>:
  4005b0:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
  4005b3:	61                   	(bad)  
  4005b4:	64 00 6d 61          	add    BYTE PTR fs:[rbp+0x61],ch
  4005b8:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005b9:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4005bb:	63 00                	movsxd eax,DWORD PTR [rax]
  4005bd:	77 72                	ja     400631 <__abi_tag+0x2b5>
  4005bf:	69 74 65 00 64 70 72 	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x69727064
  4005c6:	69 
  4005c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4005c8:	74 66                	je     400630 <__abi_tag+0x2b4>
  4005ca:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  4005cd:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005ce:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  4005d5:	72 74                	jb     40064b <__abi_tag+0x2cf>
  4005d7:	5f                   	pop    rdi
  4005d8:	6d                   	ins    DWORD PTR es:[rdi],dx
  4005d9:	61                   	(bad)  
  4005da:	69 6e 00 70 75 74 73 	imul   ebp,DWORD PTR [rsi+0x0],0x73747570
  4005e1:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
  4005e4:	65 65 00 63 6c       	gs add BYTE PTR gs:[rbx+0x6c],ah
  4005e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4005ea:	73 65                	jae    400651 <__abi_tag+0x2d5>
  4005ec:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
  4005ef:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  4005f1:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
  4005f4:	61                   	(bad)  
  4005f5:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005f6:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4005f8:	63 00                	movsxd eax,DWORD PTR [rax]
  4005fa:	6d                   	ins    DWORD PTR es:[rdi],dx
  4005fb:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  4005fd:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
  400600:	00 70 65             	add    BYTE PTR [rax+0x65],dh
  400603:	72 72                	jb     400677 <__abi_tag+0x2fb>
  400605:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400606:	72 00                	jb     400608 <__abi_tag+0x28c>
  400608:	70 75                	jo     40067f <__abi_tag+0x303>
  40060a:	74 63                	je     40066f <__abi_tag+0x2f3>
  40060c:	68 61 72 00 63       	push   0x63007261
  400611:	61                   	(bad)  
  400612:	6c                   	ins    BYTE PTR es:[rdi],dx
  400613:	6c                   	ins    BYTE PTR es:[rdi],dx
  400614:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400615:	63 00                	movsxd eax,DWORD PTR [rax]
  400617:	6c                   	ins    BYTE PTR es:[rdi],dx
  400618:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
  40061f:	36 00 47 4c          	ss add BYTE PTR [rdi+0x4c],al
  400623:	49                   	rex.WB
  400624:	42                   	rex.X
  400625:	43 5f                	rex.XB pop r15
  400627:	32 2e                	xor    ch,BYTE PTR [rsi]
  400629:	31 34 00             	xor    DWORD PTR [rax+rax*1],esi
  40062c:	47                   	rex.RXB
  40062d:	4c                   	rex.WR
  40062e:	49                   	rex.WB
  40062f:	42                   	rex.X
  400630:	43 5f                	rex.XB pop r15
  400632:	32 2e                	xor    ch,BYTE PTR [rsi]
  400634:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
  400637:	47                   	rex.RXB
  400638:	4c                   	rex.WR
  400639:	49                   	rex.WB
  40063a:	42                   	rex.X
  40063b:	43 5f                	rex.XB pop r15
  40063d:	32 2e                	xor    ch,BYTE PTR [rsi]
  40063f:	32 2e                	xor    ch,BYTE PTR [rsi]
  400641:	35 00 5f 5f 67       	xor    eax,0x675f5f00
  400646:	6d                   	ins    DWORD PTR es:[rdi],dx
  400647:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400648:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400649:	5f                   	pop    rdi
  40064a:	73 74                	jae    4006c0 <__abi_tag+0x344>
  40064c:	61                   	(bad)  
  40064d:	72 74                	jb     4006c3 <__abi_tag+0x347>
  40064f:	5f                   	pop    rdi
  400650:	5f                   	pop    rdi
	...

Disassembly of section .gnu.version:

0000000000400652 <.gnu.version>:
  400652:	00 00                	add    BYTE PTR [rax],al
  400654:	02 00                	add    al,BYTE PTR [rax]
  400656:	02 00                	add    al,BYTE PTR [rax]
  400658:	03 00                	add    eax,DWORD PTR [rax]
  40065a:	02 00                	add    al,BYTE PTR [rax]
  40065c:	02 00                	add    al,BYTE PTR [rax]
  40065e:	02 00                	add    al,BYTE PTR [rax]
  400660:	02 00                	add    al,BYTE PTR [rax]
  400662:	02 00                	add    al,BYTE PTR [rax]
  400664:	02 00                	add    al,BYTE PTR [rax]
  400666:	02 00                	add    al,BYTE PTR [rax]
  400668:	01 00                	add    DWORD PTR [rax],eax
  40066a:	04 00                	add    al,0x0
  40066c:	02 00                	add    al,BYTE PTR [rax]
  40066e:	02 00                	add    al,BYTE PTR [rax]
  400670:	02 00                	add    al,BYTE PTR [rax]
  400672:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

0000000000400678 <.gnu.version_r>:
  400678:	01 00                	add    DWORD PTR [rax],eax
  40067a:	03 00                	add    eax,DWORD PTR [rax]
  40067c:	67 00 00             	add    BYTE PTR [eax],al
  40067f:	00 10                	add    BYTE PTR [rax],dl
  400681:	00 00                	add    BYTE PTR [rax],al
  400683:	00 00                	add    BYTE PTR [rax],al
  400685:	00 00                	add    BYTE PTR [rax],al
  400687:	00 94 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dl
  40068e:	04 00                	add    al,0x0
  400690:	71 00                	jno    400692 <__abi_tag+0x316>
  400692:	00 00                	add    BYTE PTR [rax],al
  400694:	10 00                	adc    BYTE PTR [rax],al
  400696:	00 00                	add    BYTE PTR [rax],al
  400698:	b4 91                	mov    ah,0x91
  40069a:	96                   	xchg   esi,eax
  40069b:	06                   	(bad)  
  40069c:	00 00                	add    BYTE PTR [rax],al
  40069e:	03 00                	add    eax,DWORD PTR [rax]
  4006a0:	7c 00                	jl     4006a2 <__abi_tag+0x326>
  4006a2:	00 00                	add    BYTE PTR [rax],al
  4006a4:	10 00                	adc    BYTE PTR [rax],al
  4006a6:	00 00                	add    BYTE PTR [rax],al
  4006a8:	75 1a                	jne    4006c4 <__abi_tag+0x348>
  4006aa:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  4006b0:	87 00                	xchg   DWORD PTR [rax],eax
  4006b2:	00 00                	add    BYTE PTR [rax],al
  4006b4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000004006b8 <.rela.dyn>:
  4006b8:	f0 4f                	lock rex.WRXB
  4006ba:	40 00 00             	rex add BYTE PTR [rax],al
  4006bd:	00 00                	add    BYTE PTR [rax],al
  4006bf:	00 06                	add    BYTE PTR [rsi],al
  4006c1:	00 00                	add    BYTE PTR [rax],al
  4006c3:	00 03                	add    BYTE PTR [rbx],al
	...
  4006cd:	00 00                	add    BYTE PTR [rax],al
  4006cf:	00 f8                	add    al,bh
  4006d1:	4f                   	rex.WRXB
  4006d2:	40 00 00             	rex add BYTE PTR [rax],al
  4006d5:	00 00                	add    BYTE PTR [rax],al
  4006d7:	00 06                	add    BYTE PTR [rsi],al
  4006d9:	00 00                	add    BYTE PTR [rax],al
  4006db:	00 0b                	add    BYTE PTR [rbx],cl
	...

Disassembly of section .rela.plt:

00000000004006e8 <.rela.plt>:
  4006e8:	18 50 40             	sbb    BYTE PTR [rax+0x40],dl
  4006eb:	00 00                	add    BYTE PTR [rax],al
  4006ed:	00 00                	add    BYTE PTR [rax],al
  4006ef:	00 07                	add    BYTE PTR [rdi],al
  4006f1:	00 00                	add    BYTE PTR [rax],al
  4006f3:	00 01                	add    BYTE PTR [rcx],al
	...
  4006fd:	00 00                	add    BYTE PTR [rax],al
  4006ff:	00 20                	add    BYTE PTR [rax],ah
  400701:	50                   	push   rax
  400702:	40 00 00             	rex add BYTE PTR [rax],al
  400705:	00 00                	add    BYTE PTR [rax],al
  400707:	00 07                	add    BYTE PTR [rdi],al
  400709:	00 00                	add    BYTE PTR [rax],al
  40070b:	00 02                	add    BYTE PTR [rdx],al
	...
  400715:	00 00                	add    BYTE PTR [rax],al
  400717:	00 28                	add    BYTE PTR [rax],ch
  400719:	50                   	push   rax
  40071a:	40 00 00             	rex add BYTE PTR [rax],al
  40071d:	00 00                	add    BYTE PTR [rax],al
  40071f:	00 07                	add    BYTE PTR [rdi],al
  400721:	00 00                	add    BYTE PTR [rax],al
  400723:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  40072e:	00 00                	add    BYTE PTR [rax],al
  400730:	30 50 40             	xor    BYTE PTR [rax+0x40],dl
  400733:	00 00                	add    BYTE PTR [rax],al
  400735:	00 00                	add    BYTE PTR [rax],al
  400737:	00 07                	add    BYTE PTR [rdi],al
  400739:	00 00                	add    BYTE PTR [rax],al
  40073b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400741 <__abi_tag+0x3c5>
  400741:	00 00                	add    BYTE PTR [rax],al
  400743:	00 00                	add    BYTE PTR [rax],al
  400745:	00 00                	add    BYTE PTR [rax],al
  400747:	00 38                	add    BYTE PTR [rax],bh
  400749:	50                   	push   rax
  40074a:	40 00 00             	rex add BYTE PTR [rax],al
  40074d:	00 00                	add    BYTE PTR [rax],al
  40074f:	00 07                	add    BYTE PTR [rdi],al
  400751:	00 00                	add    BYTE PTR [rax],al
  400753:	00 06                	add    BYTE PTR [rsi],al
	...
  40075d:	00 00                	add    BYTE PTR [rax],al
  40075f:	00 40 50             	add    BYTE PTR [rax+0x50],al
  400762:	40 00 00             	rex add BYTE PTR [rax],al
  400765:	00 00                	add    BYTE PTR [rax],al
  400767:	00 07                	add    BYTE PTR [rdi],al
  400769:	00 00                	add    BYTE PTR [rax],al
  40076b:	00 07                	add    BYTE PTR [rdi],al
	...
  400775:	00 00                	add    BYTE PTR [rax],al
  400777:	00 48 50             	add    BYTE PTR [rax+0x50],cl
  40077a:	40 00 00             	rex add BYTE PTR [rax],al
  40077d:	00 00                	add    BYTE PTR [rax],al
  40077f:	00 07                	add    BYTE PTR [rdi],al
  400781:	00 00                	add    BYTE PTR [rax],al
  400783:	00 08                	add    BYTE PTR [rax],cl
	...
  40078d:	00 00                	add    BYTE PTR [rax],al
  40078f:	00 50 50             	add    BYTE PTR [rax+0x50],dl
  400792:	40 00 00             	rex add BYTE PTR [rax],al
  400795:	00 00                	add    BYTE PTR [rax],al
  400797:	00 07                	add    BYTE PTR [rdi],al
  400799:	00 00                	add    BYTE PTR [rax],al
  40079b:	00 09                	add    BYTE PTR [rcx],cl
	...
  4007a5:	00 00                	add    BYTE PTR [rax],al
  4007a7:	00 58 50             	add    BYTE PTR [rax+0x50],bl
  4007aa:	40 00 00             	rex add BYTE PTR [rax],al
  4007ad:	00 00                	add    BYTE PTR [rax],al
  4007af:	00 07                	add    BYTE PTR [rdi],al
  4007b1:	00 00                	add    BYTE PTR [rax],al
  4007b3:	00 0a                	add    BYTE PTR [rdx],cl
	...
  4007bd:	00 00                	add    BYTE PTR [rax],al
  4007bf:	00 60 50             	add    BYTE PTR [rax+0x50],ah
  4007c2:	40 00 00             	rex add BYTE PTR [rax],al
  4007c5:	00 00                	add    BYTE PTR [rax],al
  4007c7:	00 07                	add    BYTE PTR [rdi],al
  4007c9:	00 00                	add    BYTE PTR [rax],al
  4007cb:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
  4007d6:	00 00                	add    BYTE PTR [rax],al
  4007d8:	68 50 40 00 00       	push   0x4050
  4007dd:	00 00                	add    BYTE PTR [rax],al
  4007df:	00 07                	add    BYTE PTR [rdi],al
  4007e1:	00 00                	add    BYTE PTR [rax],al
  4007e3:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 4007e9 <__abi_tag+0x46d>
  4007e9:	00 00                	add    BYTE PTR [rax],al
  4007eb:	00 00                	add    BYTE PTR [rax],al
  4007ed:	00 00                	add    BYTE PTR [rax],al
  4007ef:	00 70 50             	add    BYTE PTR [rax+0x50],dh
  4007f2:	40 00 00             	rex add BYTE PTR [rax],al
  4007f5:	00 00                	add    BYTE PTR [rax],al
  4007f7:	00 07                	add    BYTE PTR [rdi],al
  4007f9:	00 00                	add    BYTE PTR [rax],al
  4007fb:	00 0e                	add    BYTE PTR [rsi],cl
	...
  400805:	00 00                	add    BYTE PTR [rax],al
  400807:	00 78 50             	add    BYTE PTR [rax+0x50],bh
  40080a:	40 00 00             	rex add BYTE PTR [rax],al
  40080d:	00 00                	add    BYTE PTR [rax],al
  40080f:	00 07                	add    BYTE PTR [rdi],al
  400811:	00 00                	add    BYTE PTR [rax],al
  400813:	00 0f                	add    BYTE PTR [rdi],cl
	...
  40081d:	00 00                	add    BYTE PTR [rax],al
  40081f:	00 80 50 40 00 00    	add    BYTE PTR [rax+0x4050],al
  400825:	00 00                	add    BYTE PTR [rax],al
  400827:	00 07                	add    BYTE PTR [rdi],al
  400829:	00 00                	add    BYTE PTR [rax],al
  40082b:	00 10                	add    BYTE PTR [rax],dl
	...

Disassembly of section .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    rsp,0x8
  401008:	48 8b 05 e9 3f 00 00 	mov    rax,QWORD PTR [rip+0x3fe9]        # 404ff8 <__gmon_start__@Base>
  40100f:	48 85 c0             	test   rax,rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	call   rax
  401016:	48 83 c4 08          	add    rsp,0x8
  40101a:	c3                   	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	ff 35 e2 3f 00 00    	push   QWORD PTR [rip+0x3fe2]        # 405008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	ff 25 e4 3f 00 00    	jmp    QWORD PTR [rip+0x3fe4]        # 405010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	ff 25 e2 3f 00 00    	jmp    QWORD PTR [rip+0x3fe2]        # 405018 <free@GLIBC_2.2.5>
  401036:	68 00 00 00 00       	push   0x0
  40103b:	e9 e0 ff ff ff       	jmp    401020 <_init+0x20>

0000000000401040 <putchar@plt>:
  401040:	ff 25 da 3f 00 00    	jmp    QWORD PTR [rip+0x3fda]        # 405020 <putchar@GLIBC_2.2.5>
  401046:	68 01 00 00 00       	push   0x1
  40104b:	e9 d0 ff ff ff       	jmp    401020 <_init+0x20>

0000000000401050 <puts@plt>:
  401050:	ff 25 d2 3f 00 00    	jmp    QWORD PTR [rip+0x3fd2]        # 405028 <puts@GLIBC_2.2.5>
  401056:	68 02 00 00 00       	push   0x2
  40105b:	e9 c0 ff ff ff       	jmp    401020 <_init+0x20>

0000000000401060 <write@plt>:
  401060:	ff 25 ca 3f 00 00    	jmp    QWORD PTR [rip+0x3fca]        # 405030 <write@GLIBC_2.2.5>
  401066:	68 03 00 00 00       	push   0x3
  40106b:	e9 b0 ff ff ff       	jmp    401020 <_init+0x20>

0000000000401070 <printf@plt>:
  401070:	ff 25 c2 3f 00 00    	jmp    QWORD PTR [rip+0x3fc2]        # 405038 <printf@GLIBC_2.2.5>
  401076:	68 04 00 00 00       	push   0x4
  40107b:	e9 a0 ff ff ff       	jmp    401020 <_init+0x20>

0000000000401080 <close@plt>:
  401080:	ff 25 ba 3f 00 00    	jmp    QWORD PTR [rip+0x3fba]        # 405040 <close@GLIBC_2.2.5>
  401086:	68 05 00 00 00       	push   0x5
  40108b:	e9 90 ff ff ff       	jmp    401020 <_init+0x20>

0000000000401090 <dprintf@plt>:
  401090:	ff 25 b2 3f 00 00    	jmp    QWORD PTR [rip+0x3fb2]        # 405048 <dprintf@GLIBC_2.2.5>
  401096:	68 06 00 00 00       	push   0x6
  40109b:	e9 80 ff ff ff       	jmp    401020 <_init+0x20>

00000000004010a0 <read@plt>:
  4010a0:	ff 25 aa 3f 00 00    	jmp    QWORD PTR [rip+0x3faa]        # 405050 <read@GLIBC_2.2.5>
  4010a6:	68 07 00 00 00       	push   0x7
  4010ab:	e9 70 ff ff ff       	jmp    401020 <_init+0x20>

00000000004010b0 <calloc@plt>:
  4010b0:	ff 25 a2 3f 00 00    	jmp    QWORD PTR [rip+0x3fa2]        # 405058 <calloc@GLIBC_2.2.5>
  4010b6:	68 08 00 00 00       	push   0x8
  4010bb:	e9 60 ff ff ff       	jmp    401020 <_init+0x20>

00000000004010c0 <memcpy@plt>:
  4010c0:	ff 25 9a 3f 00 00    	jmp    QWORD PTR [rip+0x3f9a]        # 405060 <memcpy@GLIBC_2.14>
  4010c6:	68 09 00 00 00       	push   0x9
  4010cb:	e9 50 ff ff ff       	jmp    401020 <_init+0x20>

00000000004010d0 <malloc@plt>:
  4010d0:	ff 25 92 3f 00 00    	jmp    QWORD PTR [rip+0x3f92]        # 405068 <malloc@GLIBC_2.2.5>
  4010d6:	68 0a 00 00 00       	push   0xa
  4010db:	e9 40 ff ff ff       	jmp    401020 <_init+0x20>

00000000004010e0 <realloc@plt>:
  4010e0:	ff 25 8a 3f 00 00    	jmp    QWORD PTR [rip+0x3f8a]        # 405070 <realloc@GLIBC_2.2.5>
  4010e6:	68 0b 00 00 00       	push   0xb
  4010eb:	e9 30 ff ff ff       	jmp    401020 <_init+0x20>

00000000004010f0 <open@plt>:
  4010f0:	ff 25 82 3f 00 00    	jmp    QWORD PTR [rip+0x3f82]        # 405078 <open@GLIBC_2.2.5>
  4010f6:	68 0c 00 00 00       	push   0xc
  4010fb:	e9 20 ff ff ff       	jmp    401020 <_init+0x20>

0000000000401100 <perror@plt>:
  401100:	ff 25 7a 3f 00 00    	jmp    QWORD PTR [rip+0x3f7a]        # 405080 <perror@GLIBC_2.2.5>
  401106:	68 0d 00 00 00       	push   0xd
  40110b:	e9 10 ff ff ff       	jmp    401020 <_init+0x20>

Disassembly of section .text:

0000000000401110 <_start>:
  401110:	f3 0f 1e fa          	endbr64 
  401114:	31 ed                	xor    ebp,ebp
  401116:	49 89 d1             	mov    r9,rdx
  401119:	5e                   	pop    rsi
  40111a:	48 89 e2             	mov    rdx,rsp
  40111d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  401121:	50                   	push   rax
  401122:	54                   	push   rsp
  401123:	45 31 c0             	xor    r8d,r8d
  401126:	31 c9                	xor    ecx,ecx
  401128:	48 c7 c7 d0 12 40 00 	mov    rdi,0x4012d0
  40112f:	ff 15 bb 3e 00 00    	call   QWORD PTR [rip+0x3ebb]        # 404ff0 <__libc_start_main@GLIBC_2.34>
  401135:	f4                   	hlt    
  401136:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40113d:	00 00 00 

0000000000401140 <_dl_relocate_static_pie>:
  401140:	f3 0f 1e fa          	endbr64 
  401144:	c3                   	ret    
  401145:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40114c:	00 00 00 
  40114f:	90                   	nop

0000000000401150 <deregister_tm_clones>:
  401150:	b8 38 51 40 00       	mov    eax,0x405138
  401155:	48 3d 38 51 40 00    	cmp    rax,0x405138
  40115b:	74 13                	je     401170 <deregister_tm_clones+0x20>
  40115d:	b8 00 00 00 00       	mov    eax,0x0
  401162:	48 85 c0             	test   rax,rax
  401165:	74 09                	je     401170 <deregister_tm_clones+0x20>
  401167:	bf 38 51 40 00       	mov    edi,0x405138
  40116c:	ff e0                	jmp    rax
  40116e:	66 90                	xchg   ax,ax
  401170:	c3                   	ret    
  401171:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
  401178:	00 00 00 00 
  40117c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000401180 <register_tm_clones>:
  401180:	be 38 51 40 00       	mov    esi,0x405138
  401185:	48 81 ee 38 51 40 00 	sub    rsi,0x405138
  40118c:	48 89 f0             	mov    rax,rsi
  40118f:	48 c1 ee 3f          	shr    rsi,0x3f
  401193:	48 c1 f8 03          	sar    rax,0x3
  401197:	48 01 c6             	add    rsi,rax
  40119a:	48 d1 fe             	sar    rsi,1
  40119d:	74 11                	je     4011b0 <register_tm_clones+0x30>
  40119f:	b8 00 00 00 00       	mov    eax,0x0
  4011a4:	48 85 c0             	test   rax,rax
  4011a7:	74 07                	je     4011b0 <register_tm_clones+0x30>
  4011a9:	bf 38 51 40 00       	mov    edi,0x405138
  4011ae:	ff e0                	jmp    rax
  4011b0:	c3                   	ret    
  4011b1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
  4011b8:	00 00 00 00 
  4011bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004011c0 <__do_global_dtors_aux>:
  4011c0:	f3 0f 1e fa          	endbr64 
  4011c4:	80 3d 69 3f 00 00 00 	cmp    BYTE PTR [rip+0x3f69],0x0        # 405134 <completed.0>
  4011cb:	75 13                	jne    4011e0 <__do_global_dtors_aux+0x20>
  4011cd:	55                   	push   rbp
  4011ce:	48 89 e5             	mov    rbp,rsp
  4011d1:	e8 7a ff ff ff       	call   401150 <deregister_tm_clones>
  4011d6:	c6 05 57 3f 00 00 01 	mov    BYTE PTR [rip+0x3f57],0x1        # 405134 <completed.0>
  4011dd:	5d                   	pop    rbp
  4011de:	c3                   	ret    
  4011df:	90                   	nop
  4011e0:	c3                   	ret    
  4011e1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
  4011e8:	00 00 00 00 
  4011ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004011f0 <frame_dummy>:
  4011f0:	f3 0f 1e fa          	endbr64 
  4011f4:	eb 8a                	jmp    401180 <register_tm_clones>
  4011f6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  4011fd:	00 00 00 

0000000000401200 <init>:
  401200:	41 56                	push   r14
  401202:	53                   	push   rbx
  401203:	50                   	push   rax
  401204:	49 89 fe             	mov    r14,rdi
  401207:	48 8b 7e 08          	mov    rdi,QWORD PTR [rsi+0x8]
  40120b:	31 f6                	xor    esi,esi
  40120d:	31 c0                	xor    eax,eax
  40120f:	e8 dc fe ff ff       	call   4010f0 <open@plt>
  401214:	83 f8 ff             	cmp    eax,0xffffffff
  401217:	74 2b                	je     401244 <init+0x44>
  401219:	89 c3                	mov    ebx,eax
  40121b:	49 8d 56 08          	lea    rdx,[r14+0x8]
  40121f:	89 c7                	mov    edi,eax
  401221:	4c 89 f6             	mov    rsi,r14
  401224:	e8 07 08 00 00       	call   401a30 <read_file>
  401229:	85 c0                	test   eax,eax
  40122b:	74 2e                	je     40125b <init+0x5b>
  40122d:	bf 09 30 40 00       	mov    edi,0x403009
  401232:	e8 19 fe ff ff       	call   401050 <puts@plt>
  401237:	b8 03 00 00 00       	mov    eax,0x3
  40123c:	48 83 c4 08          	add    rsp,0x8
  401240:	5b                   	pop    rbx
  401241:	41 5e                	pop    r14
  401243:	c3                   	ret    
  401244:	bf 1c 30 40 00       	mov    edi,0x40301c
  401249:	e8 02 fe ff ff       	call   401050 <puts@plt>
  40124e:	b8 02 00 00 00       	mov    eax,0x2
  401253:	48 83 c4 08          	add    rsp,0x8
  401257:	5b                   	pop    rbx
  401258:	41 5e                	pop    r14
  40125a:	c3                   	ret    
  40125b:	89 df                	mov    edi,ebx
  40125d:	e8 1e fe ff ff       	call   401080 <close@plt>
  401262:	31 c0                	xor    eax,eax
  401264:	48 83 c4 08          	add    rsp,0x8
  401268:	5b                   	pop    rbx
  401269:	41 5e                	pop    r14
  40126b:	c3                   	ret    
  40126c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000401270 <check_elf_header>:
  401270:	50                   	push   rax
  401271:	48 89 f8             	mov    rax,rdi
  401274:	81 3f 7f 45 4c 46    	cmp    DWORD PTR [rdi],0x464c457f
  40127a:	bf 90 30 40 00       	mov    edi,0x403090
  40127f:	75 35                	jne    4012b6 <check_elf_header+0x46>
  401281:	bf 7e 30 40 00       	mov    edi,0x40307e
  401286:	83 78 14 01          	cmp    DWORD PTR [rax+0x14],0x1
  40128a:	75 2a                	jne    4012b6 <check_elf_header+0x46>
  40128c:	bf 67 30 40 00       	mov    edi,0x403067
  401291:	80 78 04 02          	cmp    BYTE PTR [rax+0x4],0x2
  401295:	75 1f                	jne    4012b6 <check_elf_header+0x46>
  401297:	bf 4a 30 40 00       	mov    edi,0x40304a
  40129c:	80 78 05 01          	cmp    BYTE PTR [rax+0x5],0x1
  4012a0:	75 14                	jne    4012b6 <check_elf_header+0x46>
  4012a2:	0f b7 48 10          	movzx  ecx,WORD PTR [rax+0x10]
  4012a6:	83 e1 fe             	and    ecx,0xfffffffe
  4012a9:	bf 2f 30 40 00       	mov    edi,0x40302f
  4012ae:	31 c0                	xor    eax,eax
  4012b0:	66 83 f9 02          	cmp    cx,0x2
  4012b4:	74 0a                	je     4012c0 <check_elf_header+0x50>
  4012b6:	e8 95 fd ff ff       	call   401050 <puts@plt>
  4012bb:	b8 01 00 00 00       	mov    eax,0x1
  4012c0:	59                   	pop    rcx
  4012c1:	c3                   	ret    
  4012c2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  4012c9:	00 00 00 
  4012cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004012d0 <main>:
  4012d0:	53                   	push   rbx
  4012d1:	48 83 ec 40          	sub    rsp,0x40
  4012d5:	0f 57 c0             	xorps  xmm0,xmm0
  4012d8:	0f 29 44 24 30       	movaps XMMWORD PTR [rsp+0x30],xmm0
  4012dd:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
  4012e2:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
  4012e7:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
  4012eb:	83 ff 02             	cmp    edi,0x2
  4012ee:	75 2e                	jne    40131e <main+0x4e>
  4012f0:	48 8b 7e 08          	mov    rdi,QWORD PTR [rsi+0x8]
  4012f4:	31 f6                	xor    esi,esi
  4012f6:	31 c0                	xor    eax,eax
  4012f8:	e8 f3 fd ff ff       	call   4010f0 <open@plt>
  4012fd:	83 f8 ff             	cmp    eax,0xffffffff
  401300:	74 23                	je     401325 <main+0x55>
  401302:	89 c3                	mov    ebx,eax
  401304:	48 8d 54 24 08       	lea    rdx,[rsp+0x8]
  401309:	48 89 e6             	mov    rsi,rsp
  40130c:	89 c7                	mov    edi,eax
  40130e:	e8 1d 07 00 00       	call   401a30 <read_file>
  401313:	85 c0                	test   eax,eax
  401315:	74 2d                	je     401344 <main+0x74>
  401317:	bf 09 30 40 00       	mov    edi,0x403009
  40131c:	eb 0c                	jmp    40132a <main+0x5a>
  40131e:	bf 21 31 40 00       	mov    edi,0x403121
  401323:	eb 0f                	jmp    401334 <main+0x64>
  401325:	bf 1c 30 40 00       	mov    edi,0x40301c
  40132a:	e8 21 fd ff ff       	call   401050 <puts@plt>
  40132f:	bf 16 31 40 00       	mov    edi,0x403116
  401334:	e8 17 fd ff ff       	call   401050 <puts@plt>
  401339:	b8 01 00 00 00       	mov    eax,0x1
  40133e:	48 83 c4 40          	add    rsp,0x40
  401342:	5b                   	pop    rbx
  401343:	c3                   	ret    
  401344:	89 df                	mov    edi,ebx
  401346:	e8 35 fd ff ff       	call   401080 <close@plt>
  40134b:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
  40134f:	48 89 7c 24 30       	mov    QWORD PTR [rsp+0x30],rdi
  401354:	e8 17 ff ff ff       	call   401270 <check_elf_header>
  401359:	85 c0                	test   eax,eax
  40135b:	74 07                	je     401364 <main+0x94>
  40135d:	bf fc 30 40 00       	mov    edi,0x4030fc
  401362:	eb d0                	jmp    401334 <main+0x64>
  401364:	48 89 e7             	mov    rdi,rsp
  401367:	e8 34 05 00 00       	call   4018a0 <parse_program_headers>
  40136c:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
  401371:	be b0 19 40 00       	mov    esi,0x4019b0
  401376:	e8 e5 05 00 00       	call   401960 <get_segment>
  40137b:	48 85 c0             	test   rax,rax
  40137e:	74 13                	je     401393 <main+0xc3>
  401380:	48 89 e7             	mov    rdi,rsp
  401383:	e8 18 01 00 00       	call   4014a0 <encryption>
  401388:	85 c0                	test   eax,eax
  40138a:	74 0e                	je     40139a <main+0xca>
  40138c:	bf d5 30 40 00       	mov    edi,0x4030d5
  401391:	eb a1                	jmp    401334 <main+0x64>
  401393:	bf e6 30 40 00       	mov    edi,0x4030e6
  401398:	eb 9a                	jmp    401334 <main+0x64>
  40139a:	48 89 e7             	mov    rdi,rsp
  40139d:	e8 9e 0d 00 00       	call   402140 <craft_payload>
  4013a2:	85 c0                	test   eax,eax
  4013a4:	74 07                	je     4013ad <main+0xdd>
  4013a6:	bf be 30 40 00       	mov    edi,0x4030be
  4013ab:	eb 87                	jmp    401334 <main+0x64>
  4013ad:	48 89 e3             	mov    rbx,rsp
  4013b0:	48 89 df             	mov    rdi,rbx
  4013b3:	e8 08 03 00 00       	call   4016c0 <find_code_cave>
  4013b8:	48 89 df             	mov    rdi,rbx
  4013bb:	e8 10 06 00 00       	call   4019d0 <save_new_file>
  4013c0:	85 c0                	test   eax,eax
  4013c2:	74 0a                	je     4013ce <main+0xfe>
  4013c4:	bf a8 30 40 00       	mov    edi,0x4030a8
  4013c9:	e9 66 ff ff ff       	jmp    401334 <main+0x64>
  4013ce:	31 c0                	xor    eax,eax
  4013d0:	48 83 c4 40          	add    rsp,0x40
  4013d4:	5b                   	pop    rbx
  4013d5:	c3                   	ret    
  4013d6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  4013dd:	00 00 00 

00000000004013e0 <xor_encrypt>:
  4013e0:	48 85 f6             	test   rsi,rsi
  4013e3:	0f 84 ac 00 00 00    	je     401495 <xor_encrypt+0xb5>
  4013e9:	49 89 d0             	mov    r8,rdx
  4013ec:	48 83 fe 01          	cmp    rsi,0x1
  4013f0:	75 23                	jne    401415 <xor_encrypt+0x35>
  4013f2:	45 31 c9             	xor    r9d,r9d
  4013f5:	40 f6 c6 01          	test   sil,0x1
  4013f9:	0f 84 96 00 00 00    	je     401495 <xor_encrypt+0xb5>
  4013ff:	4c 89 c8             	mov    rax,r9
  401402:	48 09 c8             	or     rax,rcx
  401405:	48 c1 e8 20          	shr    rax,0x20
  401409:	74 7b                	je     401486 <xor_encrypt+0xa6>
  40140b:	4c 89 c8             	mov    rax,r9
  40140e:	31 d2                	xor    edx,edx
  401410:	48 f7 f1             	div    rcx
  401413:	eb 78                	jmp    40148d <xor_encrypt+0xad>
  401415:	49 89 f2             	mov    r10,rsi
  401418:	49 83 e2 fe          	and    r10,0xfffffffffffffffe
  40141c:	45 31 c9             	xor    r9d,r9d
  40141f:	eb 27                	jmp    401448 <xor_encrypt+0x68>
  401421:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  401428:	00 00 00 
  40142b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	31 d2                	xor    edx,edx
  401432:	48 f7 f1             	div    rcx
  401435:	41 0f b6 04 10       	movzx  eax,BYTE PTR [r8+rdx*1]
  40143a:	42 30 44 0f 01       	xor    BYTE PTR [rdi+r9*1+0x1],al
  40143f:	49 83 c1 02          	add    r9,0x2
  401443:	4d 39 ca             	cmp    r10,r9
  401446:	74 ad                	je     4013f5 <xor_encrypt+0x15>
  401448:	4c 89 c8             	mov    rax,r9
  40144b:	48 09 c8             	or     rax,rcx
  40144e:	48 c1 e8 20          	shr    rax,0x20
  401452:	74 0c                	je     401460 <xor_encrypt+0x80>
  401454:	4c 89 c8             	mov    rax,r9
  401457:	31 d2                	xor    edx,edx
  401459:	48 f7 f1             	div    rcx
  40145c:	eb 09                	jmp    401467 <xor_encrypt+0x87>
  40145e:	66 90                	xchg   ax,ax
  401460:	44 89 c8             	mov    eax,r9d
  401463:	31 d2                	xor    edx,edx
  401465:	f7 f1                	div    ecx
  401467:	41 0f b6 04 10       	movzx  eax,BYTE PTR [r8+rdx*1]
  40146c:	42 30 04 0f          	xor    BYTE PTR [rdi+r9*1],al
  401470:	49 8d 41 01          	lea    rax,[r9+0x1]
  401474:	48 89 c2             	mov    rdx,rax
  401477:	48 09 ca             	or     rdx,rcx
  40147a:	48 c1 ea 20          	shr    rdx,0x20
  40147e:	75 b0                	jne    401430 <xor_encrypt+0x50>
  401480:	31 d2                	xor    edx,edx
  401482:	f7 f1                	div    ecx
  401484:	eb af                	jmp    401435 <xor_encrypt+0x55>
  401486:	44 89 c8             	mov    eax,r9d
  401489:	31 d2                	xor    edx,edx
  40148b:	f7 f1                	div    ecx
  40148d:	41 8a 04 10          	mov    al,BYTE PTR [r8+rdx*1]
  401491:	42 30 04 0f          	xor    BYTE PTR [rdi+r9*1],al
  401495:	c3                   	ret    
  401496:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40149d:	00 00 00 

00000000004014a0 <encryption>:
  4014a0:	41 57                	push   r15
  4014a2:	41 56                	push   r14
  4014a4:	53                   	push   rbx
  4014a5:	48 89 fb             	mov    rbx,rdi
  4014a8:	48 8b 7f 38          	mov    rdi,QWORD PTR [rdi+0x38]
  4014ac:	be b0 19 40 00       	mov    esi,0x4019b0
  4014b1:	e8 aa 04 00 00       	call   401960 <get_segment>
  4014b6:	49 89 c7             	mov    r15,rax
  4014b9:	bf 01 00 00 00       	mov    edi,0x1
  4014be:	be 20 00 00 00       	mov    esi,0x20
  4014c3:	e8 e8 fb ff ff       	call   4010b0 <calloc@plt>
  4014c8:	48 89 43 20          	mov    QWORD PTR [rbx+0x20],rax
  4014cc:	48 c7 43 28 20 00 00 	mov    QWORD PTR [rbx+0x28],0x20
  4014d3:	00 
  4014d4:	48 89 c7             	mov    rdi,rax
  4014d7:	e8 04 06 00 00       	call   401ae0 <get_key>
  4014dc:	85 c0                	test   eax,eax
  4014de:	74 20                	je     401500 <encryption+0x60>
  4014e0:	be 2d 31 40 00       	mov    esi,0x40312d
  4014e5:	bf 02 00 00 00       	mov    edi,0x2
  4014ea:	31 c0                	xor    eax,eax
  4014ec:	e8 9f fb ff ff       	call   401090 <dprintf@plt>
  4014f1:	41 be 01 00 00 00    	mov    r14d,0x1
  4014f7:	44 89 f0             	mov    eax,r14d
  4014fa:	5b                   	pop    rbx
  4014fb:	41 5e                	pop    r14
  4014fd:	41 5f                	pop    r15
  4014ff:	c3                   	ret    
  401500:	45 31 f6             	xor    r14d,r14d
  401503:	bf 56 36 40 00       	mov    edi,0x403656
  401508:	31 c0                	xor    eax,eax
  40150a:	e8 61 fb ff ff       	call   401070 <printf@plt>
  40150f:	48 8b 7b 20          	mov    rdi,QWORD PTR [rbx+0x20]
  401513:	48 8b 73 28          	mov    rsi,QWORD PTR [rbx+0x28]
  401517:	31 d2                	xor    edx,edx
  401519:	e8 32 06 00 00       	call   401b50 <hexdump>
  40151e:	4d 8b 57 20          	mov    r10,QWORD PTR [r15+0x20]
  401522:	4d 85 d2             	test   r10,r10
  401525:	74 d0                	je     4014f7 <encryption+0x57>
  401527:	4c 8b 03             	mov    r8,QWORD PTR [rbx]
  40152a:	48 8b 7b 20          	mov    rdi,QWORD PTR [rbx+0x20]
  40152e:	4d 8b 4f 08          	mov    r9,QWORD PTR [r15+0x8]
  401532:	48 8b 5b 28          	mov    rbx,QWORD PTR [rbx+0x28]
  401536:	45 31 f6             	xor    r14d,r14d
  401539:	49 83 fa 01          	cmp    r10,0x1
  40153d:	75 21                	jne    401560 <encryption+0xc0>
  40153f:	31 c9                	xor    ecx,ecx
  401541:	41 f6 c2 01          	test   r10b,0x1
  401545:	74 b0                	je     4014f7 <encryption+0x57>
  401547:	4d 01 c8             	add    r8,r9
  40154a:	48 89 c8             	mov    rax,rcx
  40154d:	48 09 d8             	or     rax,rbx
  401550:	48 c1 e8 20          	shr    rax,0x20
  401554:	74 7e                	je     4015d4 <encryption+0x134>
  401556:	48 89 c8             	mov    rax,rcx
  401559:	31 d2                	xor    edx,edx
  40155b:	48 f7 f3             	div    rbx
  40155e:	eb 7a                	jmp    4015da <encryption+0x13a>
  401560:	4d 89 d3             	mov    r11,r10
  401563:	49 83 e3 fe          	and    r11,0xfffffffffffffffe
  401567:	4b 8d 34 01          	lea    rsi,[r9+r8*1]
  40156b:	48 83 c6 01          	add    rsi,0x1
  40156f:	31 c9                	xor    ecx,ecx
  401571:	eb 22                	jmp    401595 <encryption+0xf5>
  401573:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40157a:	00 00 00 
  40157d:	0f 1f 00             	nop    DWORD PTR [rax]
  401580:	31 d2                	xor    edx,edx
  401582:	48 f7 f3             	div    rbx
  401585:	0f b6 04 17          	movzx  eax,BYTE PTR [rdi+rdx*1]
  401589:	30 04 0e             	xor    BYTE PTR [rsi+rcx*1],al
  40158c:	48 83 c1 02          	add    rcx,0x2
  401590:	49 39 cb             	cmp    r11,rcx
  401593:	74 ac                	je     401541 <encryption+0xa1>
  401595:	48 89 c8             	mov    rax,rcx
  401598:	48 09 d8             	or     rax,rbx
  40159b:	48 c1 e8 20          	shr    rax,0x20
  40159f:	74 0f                	je     4015b0 <encryption+0x110>
  4015a1:	48 89 c8             	mov    rax,rcx
  4015a4:	31 d2                	xor    edx,edx
  4015a6:	48 f7 f3             	div    rbx
  4015a9:	eb 0b                	jmp    4015b6 <encryption+0x116>
  4015ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  4015b0:	89 c8                	mov    eax,ecx
  4015b2:	31 d2                	xor    edx,edx
  4015b4:	f7 f3                	div    ebx
  4015b6:	0f b6 04 17          	movzx  eax,BYTE PTR [rdi+rdx*1]
  4015ba:	30 44 0e ff          	xor    BYTE PTR [rsi+rcx*1-0x1],al
  4015be:	48 8d 41 01          	lea    rax,[rcx+0x1]
  4015c2:	48 89 c2             	mov    rdx,rax
  4015c5:	48 09 da             	or     rdx,rbx
  4015c8:	48 c1 ea 20          	shr    rdx,0x20
  4015cc:	75 b2                	jne    401580 <encryption+0xe0>
  4015ce:	31 d2                	xor    edx,edx
  4015d0:	f7 f3                	div    ebx
  4015d2:	eb b1                	jmp    401585 <encryption+0xe5>
  4015d4:	89 c8                	mov    eax,ecx
  4015d6:	31 d2                	xor    edx,edx
  4015d8:	f7 f3                	div    ebx
  4015da:	8a 04 17             	mov    al,BYTE PTR [rdi+rdx*1]
  4015dd:	41 30 04 08          	xor    BYTE PTR [r8+rcx*1],al
  4015e1:	e9 11 ff ff ff       	jmp    4014f7 <encryption+0x57>
  4015e6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  4015ed:	00 00 00 

00000000004015f0 <cave_too_small>:
  4015f0:	48 8b 47 38          	mov    rax,QWORD PTR [rdi+0x38]
  4015f4:	eb 0e                	jmp    401604 <cave_too_small+0x14>
  4015f6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  4015fd:	00 00 00 
  401600:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  401604:	48 85 c0             	test   rax,rax
  401607:	74 1f                	je     401628 <cave_too_small+0x38>
  401609:	48 8b 08             	mov    rcx,QWORD PTR [rax]
  40160c:	83 39 01             	cmp    DWORD PTR [rcx],0x1
  40160f:	75 ef                	jne    401600 <cave_too_small+0x10>
  401611:	48 8b 49 08          	mov    rcx,QWORD PTR [rcx+0x8]
  401615:	48 39 f1             	cmp    rcx,rsi
  401618:	72 e6                	jb     401600 <cave_too_small+0x10>
  40161a:	48 03 77 18          	add    rsi,QWORD PTR [rdi+0x18]
  40161e:	31 c0                	xor    eax,eax
  401620:	48 29 ce             	sub    rsi,rcx
  401623:	48 0f 43 c6          	cmovae rax,rsi
  401627:	c3                   	ret    
  401628:	48 03 77 18          	add    rsi,QWORD PTR [rdi+0x18]
  40162c:	31 c0                	xor    eax,eax
  40162e:	48 2b 77 08          	sub    rsi,QWORD PTR [rdi+0x8]
  401632:	48 0f 43 c6          	cmovae rax,rsi
  401636:	c3                   	ret    
  401637:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40163e:	00 00 

0000000000401640 <resize_file>:
  401640:	41 57                	push   r15
  401642:	41 56                	push   r14
  401644:	41 55                	push   r13
  401646:	41 54                	push   r12
  401648:	53                   	push   rbx
  401649:	49 89 d6             	mov    r14,rdx
  40164c:	49 89 f7             	mov    r15,rsi
  40164f:	49 89 fc             	mov    r12,rdi
  401652:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
  401655:	49 8b 74 24 08       	mov    rsi,QWORD PTR [r12+0x8]
  40165a:	48 01 d6             	add    rsi,rdx
  40165d:	e8 7e fa ff ff       	call   4010e0 <realloc@plt>
  401662:	48 85 c0             	test   rax,rax
  401665:	74 47                	je     4016ae <resize_file+0x6e>
  401667:	48 89 c3             	mov    rbx,rax
  40166a:	49 89 04 24          	mov    QWORD PTR [r12],rax
  40166e:	4c 01 fb             	add    rbx,r15
  401671:	4a 8d 3c 33          	lea    rdi,[rbx+r14*1]
  401675:	4d 8b 6c 24 08       	mov    r13,QWORD PTR [r12+0x8]
  40167a:	4c 89 ea             	mov    rdx,r13
  40167d:	4c 29 fa             	sub    rdx,r15
  401680:	48 89 de             	mov    rsi,rbx
  401683:	e8 38 fa ff ff       	call   4010c0 <memcpy@plt>
  401688:	49 8b 74 24 10       	mov    rsi,QWORD PTR [r12+0x10]
  40168d:	49 8b 54 24 18       	mov    rdx,QWORD PTR [r12+0x18]
  401692:	48 89 df             	mov    rdi,rbx
  401695:	e8 26 fa ff ff       	call   4010c0 <memcpy@plt>
  40169a:	4d 01 f5             	add    r13,r14
  40169d:	4d 89 6c 24 08       	mov    QWORD PTR [r12+0x8],r13
  4016a2:	31 c0                	xor    eax,eax
  4016a4:	5b                   	pop    rbx
  4016a5:	41 5c                	pop    r12
  4016a7:	41 5d                	pop    r13
  4016a9:	41 5e                	pop    r14
  4016ab:	41 5f                	pop    r15
  4016ad:	c3                   	ret    
  4016ae:	bf 40 31 40 00       	mov    edi,0x403140
  4016b3:	e8 48 fa ff ff       	call   401100 <perror@plt>
  4016b8:	b8 01 00 00 00       	mov    eax,0x1
  4016bd:	eb e5                	jmp    4016a4 <resize_file+0x64>
  4016bf:	90                   	nop

00000000004016c0 <find_code_cave>:
  4016c0:	55                   	push   rbp
  4016c1:	41 57                	push   r15
  4016c3:	41 56                	push   r14
  4016c5:	41 55                	push   r13
  4016c7:	41 54                	push   r12
  4016c9:	53                   	push   rbx
  4016ca:	48 83 ec 18          	sub    rsp,0x18
  4016ce:	48 89 fb             	mov    rbx,rdi
  4016d1:	4c 8b 67 30          	mov    r12,QWORD PTR [rdi+0x30]
  4016d5:	48 8b 7f 38          	mov    rdi,QWORD PTR [rdi+0x38]
  4016d9:	be b0 19 40 00       	mov    esi,0x4019b0
  4016de:	e8 7d 02 00 00       	call   401960 <get_segment>
  4016e3:	48 89 c5             	mov    rbp,rax
  4016e6:	48 8b 78 08          	mov    rdi,QWORD PTR [rax+0x8]
  4016ea:	48 8b 40 20          	mov    rax,QWORD PTR [rax+0x20]
  4016ee:	48 8d 0c 38          	lea    rcx,[rax+rdi*1]
  4016f2:	48 8b 53 38          	mov    rdx,QWORD PTR [rbx+0x38]
  4016f6:	eb 0c                	jmp    401704 <find_code_cave+0x44>
  4016f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  4016ff:	00 
  401700:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
  401704:	48 85 d2             	test   rdx,rdx
  401707:	74 33                	je     40173c <find_code_cave+0x7c>
  401709:	48 8b 32             	mov    rsi,QWORD PTR [rdx]
  40170c:	83 3e 01             	cmp    DWORD PTR [rsi],0x1
  40170f:	75 ef                	jne    401700 <find_code_cave+0x40>
  401711:	48 8b 76 08          	mov    rsi,QWORD PTR [rsi+0x8]
  401715:	48 39 ce             	cmp    rsi,rcx
  401718:	72 e6                	jb     401700 <find_code_cave+0x40>
  40171a:	48 8b 53 18          	mov    rdx,QWORD PTR [rbx+0x18]
  40171e:	48 01 d1             	add    rcx,rdx
  401721:	45 31 ed             	xor    r13d,r13d
  401724:	48 29 f1             	sub    rcx,rsi
  401727:	4c 0f 43 e9          	cmovae r13,rcx
  40172b:	4d 85 ed             	test   r13,r13
  40172e:	75 23                	jne    401753 <find_code_cave+0x93>
  401730:	48 8b 0b             	mov    rcx,QWORD PTR [rbx]
  401733:	48 8b 73 10          	mov    rsi,QWORD PTR [rbx+0x10]
  401737:	e9 ad 00 00 00       	jmp    4017e9 <find_code_cave+0x129>
  40173c:	48 8b 53 18          	mov    rdx,QWORD PTR [rbx+0x18]
  401740:	48 01 d1             	add    rcx,rdx
  401743:	45 31 ed             	xor    r13d,r13d
  401746:	48 2b 4b 08          	sub    rcx,QWORD PTR [rbx+0x8]
  40174a:	4c 0f 43 e9          	cmovae r13,rcx
  40174e:	4d 85 ed             	test   r13,r13
  401751:	74 dd                	je     401730 <find_code_cave+0x70>
  401753:	bf 48 31 40 00       	mov    edi,0x403148
  401758:	e8 f3 f8 ff ff       	call   401050 <puts@plt>
  40175d:	4c 8b 7d 20          	mov    r15,QWORD PTR [rbp+0x20]
  401761:	4c 03 7d 08          	add    r15,QWORD PTR [rbp+0x8]
  401765:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
  401768:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
  40176c:	4c 01 ee             	add    rsi,r13
  40176f:	e8 6c f9 ff ff       	call   4010e0 <realloc@plt>
  401774:	48 85 c0             	test   rax,rax
  401777:	0f 84 b0 00 00 00    	je     40182d <find_code_cave+0x16d>
  40177d:	48 89 03             	mov    QWORD PTR [rbx],rax
  401780:	48 89 04 24          	mov    QWORD PTR [rsp],rax
  401784:	48 89 6c 24 08       	mov    QWORD PTR [rsp+0x8],rbp
  401789:	48 8b 2c 24          	mov    rbp,QWORD PTR [rsp]
  40178d:	4c 01 fd             	add    rbp,r15
  401790:	48 89 ef             	mov    rdi,rbp
  401793:	4c 01 ef             	add    rdi,r13
  401796:	4c 89 64 24 10       	mov    QWORD PTR [rsp+0x10],r12
  40179b:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
  40179f:	4c 89 e2             	mov    rdx,r12
  4017a2:	4c 29 fa             	sub    rdx,r15
  4017a5:	48 89 ee             	mov    rsi,rbp
  4017a8:	e8 13 f9 ff ff       	call   4010c0 <memcpy@plt>
  4017ad:	4c 8b 7b 10          	mov    r15,QWORD PTR [rbx+0x10]
  4017b1:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
  4017b5:	48 89 ef             	mov    rdi,rbp
  4017b8:	48 8b 2c 24          	mov    rbp,QWORD PTR [rsp]
  4017bc:	4c 89 fe             	mov    rsi,r15
  4017bf:	4c 89 f2             	mov    rdx,r14
  4017c2:	e8 f9 f8 ff ff       	call   4010c0 <memcpy@plt>
  4017c7:	48 89 e9             	mov    rcx,rbp
  4017ca:	4c 89 f2             	mov    rdx,r14
  4017cd:	4c 89 fe             	mov    rsi,r15
  4017d0:	4d 01 ec             	add    r12,r13
  4017d3:	4c 89 63 08          	mov    QWORD PTR [rbx+0x8],r12
  4017d7:	4c 8b 64 24 10       	mov    r12,QWORD PTR [rsp+0x10]
  4017dc:	48 8b 6c 24 08       	mov    rbp,QWORD PTR [rsp+0x8]
  4017e1:	48 8b 7d 08          	mov    rdi,QWORD PTR [rbp+0x8]
  4017e5:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
  4017e9:	48 01 cf             	add    rdi,rcx
  4017ec:	48 01 c7             	add    rdi,rax
  4017ef:	e8 cc f8 ff ff       	call   4010c0 <memcpy@plt>
  4017f4:	48 8b 45 28          	mov    rax,QWORD PTR [rbp+0x28]
  4017f8:	49 8b 4c 24 18       	mov    rcx,QWORD PTR [r12+0x18]
  4017fd:	48 01 c1             	add    rcx,rax
  401800:	48 83 c1 0f          	add    rcx,0xf
  401804:	49 89 4c 24 18       	mov    QWORD PTR [r12+0x18],rcx
  401809:	80 4d 04 02          	or     BYTE PTR [rbp+0x4],0x2
  40180d:	48 8b 4b 18          	mov    rcx,QWORD PTR [rbx+0x18]
  401811:	48 01 4d 20          	add    QWORD PTR [rbp+0x20],rcx
  401815:	48 01 c1             	add    rcx,rax
  401818:	48 89 4d 28          	mov    QWORD PTR [rbp+0x28],rcx
  40181c:	31 c0                	xor    eax,eax
  40181e:	48 83 c4 18          	add    rsp,0x18
  401822:	5b                   	pop    rbx
  401823:	41 5c                	pop    r12
  401825:	41 5d                	pop    r13
  401827:	41 5e                	pop    r14
  401829:	41 5f                	pop    r15
  40182b:	5d                   	pop    rbp
  40182c:	c3                   	ret    
  40182d:	bf 40 31 40 00       	mov    edi,0x403140
  401832:	e8 c9 f8 ff ff       	call   401100 <perror@plt>
  401837:	bf 57 31 40 00       	mov    edi,0x403157
  40183c:	e8 0f f8 ff ff       	call   401050 <puts@plt>
  401841:	eb d9                	jmp    40181c <find_code_cave+0x15c>
  401843:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40184a:	00 00 00 
  40184d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000401850 <push_back_phdrs>:
  401850:	41 56                	push   r14
  401852:	53                   	push   rbx
  401853:	50                   	push   rax
  401854:	49 89 f6             	mov    r14,rsi
  401857:	48 89 fb             	mov    rbx,rdi
  40185a:	bf 10 00 00 00       	mov    edi,0x10
  40185f:	be 01 00 00 00       	mov    esi,0x1
  401864:	e8 47 f8 ff ff       	call   4010b0 <calloc@plt>
  401869:	4c 89 30             	mov    QWORD PTR [rax],r14
  40186c:	48 8b 0b             	mov    rcx,QWORD PTR [rbx]
  40186f:	48 85 c9             	test   rcx,rcx
  401872:	74 1c                	je     401890 <push_back_phdrs+0x40>
  401874:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40187b:	00 00 00 
  40187e:	66 90                	xchg   ax,ax
  401880:	48 89 cb             	mov    rbx,rcx
  401883:	48 8b 49 08          	mov    rcx,QWORD PTR [rcx+0x8]
  401887:	48 85 c9             	test   rcx,rcx
  40188a:	75 f4                	jne    401880 <push_back_phdrs+0x30>
  40188c:	48 83 c3 08          	add    rbx,0x8
  401890:	48 89 03             	mov    QWORD PTR [rbx],rax
  401893:	48 83 c4 08          	add    rsp,0x8
  401897:	5b                   	pop    rbx
  401898:	41 5e                	pop    r14
  40189a:	c3                   	ret    
  40189b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000004018a0 <parse_program_headers>:
  4018a0:	55                   	push   rbp
  4018a1:	41 57                	push   r15
  4018a3:	41 56                	push   r14
  4018a5:	41 55                	push   r13
  4018a7:	41 54                	push   r12
  4018a9:	53                   	push   rbx
  4018aa:	50                   	push   rax
  4018ab:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
  4018af:	66 83 78 36 38       	cmp    WORD PTR [rax+0x36],0x38
  4018b4:	75 7c                	jne    401932 <parse_program_headers+0x92>
  4018b6:	44 0f b7 70 38       	movzx  r14d,WORD PTR [rax+0x38]
  4018bb:	66 45 85 f6          	test   r14w,r14w
  4018bf:	0f 84 7e 00 00 00    	je     401943 <parse_program_headers+0xa3>
  4018c5:	49 89 fc             	mov    r12,rdi
  4018c8:	48 8b 68 20          	mov    rbp,QWORD PTR [rax+0x20]
  4018cc:	4c 8b 3f             	mov    r15,QWORD PTR [rdi]
  4018cf:	49 83 c4 38          	add    r12,0x38
  4018d3:	31 db                	xor    ebx,ebx
  4018d5:	eb 19                	jmp    4018f0 <parse_program_headers+0x50>
  4018d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  4018de:	00 00 
  4018e0:	48 83 c5 38          	add    rbp,0x38
  4018e4:	48 89 01             	mov    QWORD PTR [rcx],rax
  4018e7:	83 c3 01             	add    ebx,0x1
  4018ea:	66 44 39 f3          	cmp    bx,r14w
  4018ee:	74 53                	je     401943 <parse_program_headers+0xa3>
  4018f0:	4d 8d 2c 2f          	lea    r13,[r15+rbp*1]
  4018f4:	49 83 c5 38          	add    r13,0x38
  4018f8:	bf 10 00 00 00       	mov    edi,0x10
  4018fd:	be 01 00 00 00       	mov    esi,0x1
  401902:	e8 a9 f7 ff ff       	call   4010b0 <calloc@plt>
  401907:	4c 89 28             	mov    QWORD PTR [rax],r13
  40190a:	49 8b 14 24          	mov    rdx,QWORD PTR [r12]
  40190e:	4c 89 e1             	mov    rcx,r12
  401911:	48 85 d2             	test   rdx,rdx
  401914:	74 ca                	je     4018e0 <parse_program_headers+0x40>
  401916:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40191d:	00 00 00 
  401920:	48 89 d1             	mov    rcx,rdx
  401923:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
  401927:	48 85 d2             	test   rdx,rdx
  40192a:	75 f4                	jne    401920 <parse_program_headers+0x80>
  40192c:	48 83 c1 08          	add    rcx,0x8
  401930:	eb ae                	jmp    4018e0 <parse_program_headers+0x40>
  401932:	bf 71 31 40 00       	mov    edi,0x403171
  401937:	e8 14 f7 ff ff       	call   401050 <puts@plt>
  40193c:	b8 01 00 00 00       	mov    eax,0x1
  401941:	eb 02                	jmp    401945 <parse_program_headers+0xa5>
  401943:	31 c0                	xor    eax,eax
  401945:	48 83 c4 08          	add    rsp,0x8
  401949:	5b                   	pop    rbx
  40194a:	41 5c                	pop    r12
  40194c:	41 5d                	pop    r13
  40194e:	41 5e                	pop    r14
  401950:	41 5f                	pop    r15
  401952:	5d                   	pop    rbp
  401953:	c3                   	ret    
  401954:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40195b:	00 00 00 
  40195e:	66 90                	xchg   ax,ax

0000000000401960 <get_segment>:
  401960:	41 57                	push   r15
  401962:	41 56                	push   r14
  401964:	53                   	push   rbx
  401965:	48 85 ff             	test   rdi,rdi
  401968:	74 2b                	je     401995 <get_segment+0x35>
  40196a:	49 89 f7             	mov    r15,rsi
  40196d:	48 89 fb             	mov    rbx,rdi
  401970:	45 31 f6             	xor    r14d,r14d
  401973:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40197a:	00 00 00 
  40197d:	0f 1f 00             	nop    DWORD PTR [rax]
  401980:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
  401983:	41 ff d7             	call   r15
  401986:	85 c0                	test   eax,eax
  401988:	75 10                	jne    40199a <get_segment+0x3a>
  40198a:	48 8b 5b 08          	mov    rbx,QWORD PTR [rbx+0x8]
  40198e:	48 85 db             	test   rbx,rbx
  401991:	75 ed                	jne    401980 <get_segment+0x20>
  401993:	eb 08                	jmp    40199d <get_segment+0x3d>
  401995:	45 31 f6             	xor    r14d,r14d
  401998:	eb 03                	jmp    40199d <get_segment+0x3d>
  40199a:	4c 8b 33             	mov    r14,QWORD PTR [rbx]
  40199d:	4c 89 f0             	mov    rax,r14
  4019a0:	5b                   	pop    rbx
  4019a1:	41 5e                	pop    r14
  4019a3:	41 5f                	pop    r15
  4019a5:	c3                   	ret    
  4019a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  4019ad:	00 00 00 

00000000004019b0 <is_text_segment_64>:
  4019b0:	83 3f 01             	cmp    DWORD PTR [rdi],0x1
  4019b3:	75 0b                	jne    4019c0 <is_text_segment_64+0x10>
  4019b5:	b8 01 00 00 00       	mov    eax,0x1
  4019ba:	f6 47 04 01          	test   BYTE PTR [rdi+0x4],0x1
  4019be:	75 02                	jne    4019c2 <is_text_segment_64+0x12>
  4019c0:	31 c0                	xor    eax,eax
  4019c2:	c3                   	ret    
  4019c3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  4019ca:	00 00 00 
  4019cd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000004019d0 <save_new_file>:
  4019d0:	55                   	push   rbp
  4019d1:	41 56                	push   r14
  4019d3:	53                   	push   rbx
  4019d4:	48 89 fb             	mov    rbx,rdi
  4019d7:	45 31 f6             	xor    r14d,r14d
  4019da:	bf 95 31 40 00       	mov    edi,0x403195
  4019df:	be 41 00 00 00       	mov    esi,0x41
  4019e4:	ba ff 01 00 00       	mov    edx,0x1ff
  4019e9:	31 c0                	xor    eax,eax
  4019eb:	e8 00 f7 ff ff       	call   4010f0 <open@plt>
  4019f0:	83 f8 ff             	cmp    eax,0xffffffff
  4019f3:	74 19                	je     401a0e <save_new_file+0x3e>
  4019f5:	89 c5                	mov    ebp,eax
  4019f7:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
  4019fa:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
  4019fe:	89 c7                	mov    edi,eax
  401a00:	e8 5b f6 ff ff       	call   401060 <write@plt>
  401a05:	89 ef                	mov    edi,ebp
  401a07:	e8 74 f6 ff ff       	call   401080 <close@plt>
  401a0c:	eb 10                	jmp    401a1e <save_new_file+0x4e>
  401a0e:	bf 1c 30 40 00       	mov    edi,0x40301c
  401a13:	e8 38 f6 ff ff       	call   401050 <puts@plt>
  401a18:	41 be 01 00 00 00    	mov    r14d,0x1
  401a1e:	44 89 f0             	mov    eax,r14d
  401a21:	5b                   	pop    rbx
  401a22:	41 5e                	pop    r14
  401a24:	5d                   	pop    rbp
  401a25:	c3                   	ret    
  401a26:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  401a2d:	00 00 00 

0000000000401a30 <read_file>:
  401a30:	55                   	push   rbp
  401a31:	41 57                	push   r15
  401a33:	41 56                	push   r14
  401a35:	41 55                	push   r13
  401a37:	41 54                	push   r12
  401a39:	53                   	push   rbx
  401a3a:	48 81 ec 08 20 00 00 	sub    rsp,0x2008
  401a41:	49 89 d5             	mov    r13,rdx
  401a44:	49 89 f6             	mov    r14,rsi
  401a47:	41 89 fc             	mov    r12d,edi
  401a4a:	49 89 e7             	mov    r15,rsp
  401a4d:	0f 1f 00             	nop    DWORD PTR [rax]
  401a50:	ba 00 20 00 00       	mov    edx,0x2000
  401a55:	44 89 e7             	mov    edi,r12d
  401a58:	4c 89 fe             	mov    rsi,r15
  401a5b:	e8 40 f6 ff ff       	call   4010a0 <read@plt>
  401a60:	48 85 c0             	test   rax,rax
  401a63:	74 3e                	je     401aa3 <read_file+0x73>
  401a65:	48 89 c5             	mov    rbp,rax
  401a68:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
  401a6c:	74 39                	je     401aa7 <read_file+0x77>
  401a6e:	49 8b 3e             	mov    rdi,QWORD PTR [r14]
  401a71:	49 8b 75 00          	mov    rsi,QWORD PTR [r13+0x0]
  401a75:	48 01 ee             	add    rsi,rbp
  401a78:	e8 63 f6 ff ff       	call   4010e0 <realloc@plt>
  401a7d:	48 85 c0             	test   rax,rax
  401a80:	74 2f                	je     401ab1 <read_file+0x81>
  401a82:	49 89 06             	mov    QWORD PTR [r14],rax
  401a85:	49 8b 5d 00          	mov    rbx,QWORD PTR [r13+0x0]
  401a89:	48 01 d8             	add    rax,rbx
  401a8c:	48 89 c7             	mov    rdi,rax
  401a8f:	4c 89 fe             	mov    rsi,r15
  401a92:	48 89 ea             	mov    rdx,rbp
  401a95:	e8 26 f6 ff ff       	call   4010c0 <memcpy@plt>
  401a9a:	48 01 dd             	add    rbp,rbx
  401a9d:	49 89 6d 00          	mov    QWORD PTR [r13+0x0],rbp
  401aa1:	eb ad                	jmp    401a50 <read_file+0x20>
  401aa3:	31 db                	xor    ebx,ebx
  401aa5:	eb 17                	jmp    401abe <read_file+0x8e>
  401aa7:	4d 8b 36             	mov    r14,QWORD PTR [r14]
  401aaa:	bb 03 00 00 00       	mov    ebx,0x3
  401aaf:	eb 05                	jmp    401ab6 <read_file+0x86>
  401ab1:	bb 04 00 00 00       	mov    ebx,0x4
  401ab6:	4c 89 f7             	mov    rdi,r14
  401ab9:	e8 72 f5 ff ff       	call   401030 <free@plt>
  401abe:	89 d8                	mov    eax,ebx
  401ac0:	48 81 c4 08 20 00 00 	add    rsp,0x2008
  401ac7:	5b                   	pop    rbx
  401ac8:	41 5c                	pop    r12
  401aca:	41 5d                	pop    r13
  401acc:	41 5e                	pop    r14
  401ace:	41 5f                	pop    r15
  401ad0:	5d                   	pop    rbp
  401ad1:	c3                   	ret    
  401ad2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  401ad9:	00 00 00 
  401adc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000401ae0 <get_key>:
  401ae0:	55                   	push   rbp
  401ae1:	53                   	push   rbx
  401ae2:	50                   	push   rax
  401ae3:	48 89 fb             	mov    rbx,rdi
  401ae6:	bf 9d 31 40 00       	mov    edi,0x40319d
  401aeb:	31 f6                	xor    esi,esi
  401aed:	31 c0                	xor    eax,eax
  401aef:	e8 fc f5 ff ff       	call   4010f0 <open@plt>
  401af4:	83 f8 ff             	cmp    eax,0xffffffff
  401af7:	74 27                	je     401b20 <get_key+0x40>
  401af9:	89 c5                	mov    ebp,eax
  401afb:	ba 20 00 00 00       	mov    edx,0x20
  401b00:	89 c7                	mov    edi,eax
  401b02:	48 89 de             	mov    rsi,rbx
  401b05:	e8 96 f5 ff ff       	call   4010a0 <read@plt>
  401b0a:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
  401b0e:	74 17                	je     401b27 <get_key+0x47>
  401b10:	89 ef                	mov    edi,ebp
  401b12:	e8 69 f5 ff ff       	call   401080 <close@plt>
  401b17:	31 c0                	xor    eax,eax
  401b19:	48 83 c4 08          	add    rsp,0x8
  401b1d:	5b                   	pop    rbx
  401b1e:	5d                   	pop    rbp
  401b1f:	c3                   	ret    
  401b20:	be aa 31 40 00       	mov    esi,0x4031aa
  401b25:	eb 05                	jmp    401b2c <get_key+0x4c>
  401b27:	be c7 31 40 00       	mov    esi,0x4031c7
  401b2c:	bf 02 00 00 00       	mov    edi,0x2
  401b31:	31 c0                	xor    eax,eax
  401b33:	e8 58 f5 ff ff       	call   401090 <dprintf@plt>
  401b38:	b8 01 00 00 00       	mov    eax,0x1
  401b3d:	48 83 c4 08          	add    rsp,0x8
  401b41:	5b                   	pop    rbx
  401b42:	5d                   	pop    rbp
  401b43:	c3                   	ret    
  401b44:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  401b4b:	00 00 00 
  401b4e:	66 90                	xchg   ax,ax

0000000000401b50 <hexdump>:
  401b50:	55                   	push   rbp
  401b51:	41 57                	push   r15
  401b53:	41 56                	push   r14
  401b55:	41 55                	push   r13
  401b57:	41 54                	push   r12
  401b59:	53                   	push   rbx
  401b5a:	50                   	push   rax
  401b5b:	49 89 f5             	mov    r13,rsi
  401b5e:	49 89 fe             	mov    r14,rdi
  401b61:	85 d2                	test   edx,edx
  401b63:	74 60                	je     401bc5 <hexdump+0x75>
  401b65:	4d 85 ed             	test   r13,r13
  401b68:	0f 84 7c 00 00 00    	je     401bea <hexdump+0x9a>
  401b6e:	4c 63 fa             	movsxd r15,edx
  401b71:	41 bc 01 00 00 00    	mov    r12d,0x1
  401b77:	31 db                	xor    ebx,ebx
  401b79:	eb 17                	jmp    401b92 <hexdump+0x42>
  401b7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  401b80:	bf 0a 00 00 00       	mov    edi,0xa
  401b85:	e8 b6 f4 ff ff       	call   401040 <putchar@plt>
  401b8a:	4d 01 fc             	add    r12,r15
  401b8d:	4c 39 eb             	cmp    rbx,r13
  401b90:	73 58                	jae    401bea <hexdump+0x9a>
  401b92:	48 89 d8             	mov    rax,rbx
  401b95:	4c 01 fb             	add    rbx,r15
  401b98:	48 39 d8             	cmp    rax,rbx
  401b9b:	73 e3                	jae    401b80 <hexdump+0x30>
  401b9d:	4c 89 e5             	mov    rbp,r12
  401ba0:	41 0f b6 74 2e ff    	movzx  esi,BYTE PTR [r14+rbp*1-0x1]
  401ba6:	bf b8 32 40 00       	mov    edi,0x4032b8
  401bab:	31 c0                	xor    eax,eax
  401bad:	e8 be f4 ff ff       	call   401070 <printf@plt>
  401bb2:	48 39 dd             	cmp    rbp,rbx
  401bb5:	73 c9                	jae    401b80 <hexdump+0x30>
  401bb7:	48 8d 45 01          	lea    rax,[rbp+0x1]
  401bbb:	49 39 ed             	cmp    r13,rbp
  401bbe:	48 89 c5             	mov    rbp,rax
  401bc1:	75 dd                	jne    401ba0 <hexdump+0x50>
  401bc3:	eb bb                	jmp    401b80 <hexdump+0x30>
  401bc5:	4d 85 ed             	test   r13,r13
  401bc8:	74 20                	je     401bea <hexdump+0x9a>
  401bca:	31 db                	xor    ebx,ebx
  401bcc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  401bd0:	41 0f b6 34 1e       	movzx  esi,BYTE PTR [r14+rbx*1]
  401bd5:	bf b8 32 40 00       	mov    edi,0x4032b8
  401bda:	31 c0                	xor    eax,eax
  401bdc:	e8 8f f4 ff ff       	call   401070 <printf@plt>
  401be1:	48 83 c3 01          	add    rbx,0x1
  401be5:	49 39 dd             	cmp    r13,rbx
  401be8:	75 e6                	jne    401bd0 <hexdump+0x80>
  401bea:	bf 0a 00 00 00       	mov    edi,0xa
  401bef:	48 83 c4 08          	add    rsp,0x8
  401bf3:	5b                   	pop    rbx
  401bf4:	41 5c                	pop    r12
  401bf6:	41 5d                	pop    r13
  401bf8:	41 5e                	pop    r14
  401bfa:	41 5f                	pop    r15
  401bfc:	5d                   	pop    rbp
  401bfd:	e9 3e f4 ff ff       	jmp    401040 <putchar@plt>
  401c02:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  401c09:	00 00 00 
  401c0c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000401c10 <asciidump>:
  401c10:	55                   	push   rbp
  401c11:	41 57                	push   r15
  401c13:	41 56                	push   r14
  401c15:	41 55                	push   r13
  401c17:	41 54                	push   r12
  401c19:	53                   	push   rbx
  401c1a:	50                   	push   rax
  401c1b:	49 89 f5             	mov    r13,rsi
  401c1e:	49 89 fe             	mov    r14,rdi
  401c21:	85 d2                	test   edx,edx
  401c23:	0f 84 9e 00 00 00    	je     401cc7 <asciidump+0xb7>
  401c29:	4d 85 ed             	test   r13,r13
  401c2c:	0f 84 de 00 00 00    	je     401d10 <asciidump+0x100>
  401c32:	41 89 d7             	mov    r15d,edx
  401c35:	41 bc 01 00 00 00    	mov    r12d,0x1
  401c3b:	31 db                	xor    ebx,ebx
  401c3d:	eb 1e                	jmp    401c5d <asciidump+0x4d>
  401c3f:	90                   	nop
  401c40:	be e2 31 40 00       	mov    esi,0x4031e2
  401c45:	bf 01 00 00 00       	mov    edi,0x1
  401c4a:	31 c0                	xor    eax,eax
  401c4c:	e8 3f f4 ff ff       	call   401090 <dprintf@plt>
  401c51:	4d 01 fc             	add    r12,r15
  401c54:	4c 39 eb             	cmp    rbx,r13
  401c57:	0f 83 b3 00 00 00    	jae    401d10 <asciidump+0x100>
  401c5d:	48 89 d8             	mov    rax,rbx
  401c60:	4c 01 fb             	add    rbx,r15
  401c63:	48 39 d8             	cmp    rax,rbx
  401c66:	73 d8                	jae    401c40 <asciidump+0x30>
  401c68:	4c 89 e5             	mov    rbp,r12
  401c6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  401c70:	41 0f b6 54 2e ff    	movzx  edx,BYTE PTR [r14+rbp*1-0x1]
  401c76:	8d 42 e0             	lea    eax,[rdx-0x20]
  401c79:	3c 5e                	cmp    al,0x5e
  401c7b:	77 23                	ja     401ca0 <asciidump+0x90>
  401c7d:	be be 32 40 00       	mov    esi,0x4032be
  401c82:	bf 01 00 00 00       	mov    edi,0x1
  401c87:	31 c0                	xor    eax,eax
  401c89:	e8 02 f4 ff ff       	call   401090 <dprintf@plt>
  401c8e:	48 39 dd             	cmp    rbp,rbx
  401c91:	72 23                	jb     401cb6 <asciidump+0xa6>
  401c93:	eb ab                	jmp    401c40 <asciidump+0x30>
  401c95:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  401c9c:	00 00 00 
  401c9f:	90                   	nop
  401ca0:	be c1 32 40 00       	mov    esi,0x4032c1
  401ca5:	bf 01 00 00 00       	mov    edi,0x1
  401caa:	31 c0                	xor    eax,eax
  401cac:	e8 df f3 ff ff       	call   401090 <dprintf@plt>
  401cb1:	48 39 dd             	cmp    rbp,rbx
  401cb4:	73 8a                	jae    401c40 <asciidump+0x30>
  401cb6:	48 8d 45 01          	lea    rax,[rbp+0x1]
  401cba:	49 39 ed             	cmp    r13,rbp
  401cbd:	48 89 c5             	mov    rbp,rax
  401cc0:	75 ae                	jne    401c70 <asciidump+0x60>
  401cc2:	e9 79 ff ff ff       	jmp    401c40 <asciidump+0x30>
  401cc7:	4d 85 ed             	test   r13,r13
  401cca:	74 44                	je     401d10 <asciidump+0x100>
  401ccc:	31 db                	xor    ebx,ebx
  401cce:	eb 1a                	jmp    401cea <asciidump+0xda>
  401cd0:	be c1 32 40 00       	mov    esi,0x4032c1
  401cd5:	bf 01 00 00 00       	mov    edi,0x1
  401cda:	31 c0                	xor    eax,eax
  401cdc:	e8 af f3 ff ff       	call   401090 <dprintf@plt>
  401ce1:	48 83 c3 01          	add    rbx,0x1
  401ce5:	49 39 dd             	cmp    r13,rbx
  401ce8:	74 26                	je     401d10 <asciidump+0x100>
  401cea:	41 0f b6 14 1e       	movzx  edx,BYTE PTR [r14+rbx*1]
  401cef:	8d 42 e0             	lea    eax,[rdx-0x20]
  401cf2:	3c 5e                	cmp    al,0x5e
  401cf4:	77 da                	ja     401cd0 <asciidump+0xc0>
  401cf6:	be be 32 40 00       	mov    esi,0x4032be
  401cfb:	bf 01 00 00 00       	mov    edi,0x1
  401d00:	31 c0                	xor    eax,eax
  401d02:	e8 89 f3 ff ff       	call   401090 <dprintf@plt>
  401d07:	48 83 c3 01          	add    rbx,0x1
  401d0b:	49 39 dd             	cmp    r13,rbx
  401d0e:	75 da                	jne    401cea <asciidump+0xda>
  401d10:	be e2 31 40 00       	mov    esi,0x4031e2
  401d15:	bf 01 00 00 00       	mov    edi,0x1
  401d1a:	31 c0                	xor    eax,eax
  401d1c:	48 83 c4 08          	add    rsp,0x8
  401d20:	5b                   	pop    rbx
  401d21:	41 5c                	pop    r12
  401d23:	41 5d                	pop    r13
  401d25:	41 5e                	pop    r14
  401d27:	41 5f                	pop    r15
  401d29:	5d                   	pop    rbp
  401d2a:	e9 61 f3 ff ff       	jmp    401090 <dprintf@plt>
  401d2f:	90                   	nop

0000000000401d30 <print_elf_header>:
  401d30:	41 56                	push   r14
  401d32:	53                   	push   rbx
  401d33:	50                   	push   rax
  401d34:	48 89 fb             	mov    rbx,rdi
  401d37:	0f b6 37             	movzx  esi,BYTE PTR [rdi]
  401d3a:	0f b6 57 01          	movzx  edx,BYTE PTR [rdi+0x1]
  401d3e:	0f b6 4f 02          	movzx  ecx,BYTE PTR [rdi+0x2]
  401d42:	44 0f b6 47 03       	movzx  r8d,BYTE PTR [rdi+0x3]
  401d47:	bf c3 32 40 00       	mov    edi,0x4032c3
  401d4c:	31 c0                	xor    eax,eax
  401d4e:	e8 1d f3 ff ff       	call   401070 <printf@plt>
  401d53:	0f b6 73 04          	movzx  esi,BYTE PTR [rbx+0x4]
  401d57:	bf e1 32 40 00       	mov    edi,0x4032e1
  401d5c:	31 c0                	xor    eax,eax
  401d5e:	e8 0d f3 ff ff       	call   401070 <printf@plt>
  401d63:	8a 43 04             	mov    al,BYTE PTR [rbx+0x4]
  401d66:	3c 02                	cmp    al,0x2
  401d68:	b9 99 35 40 00       	mov    ecx,0x403599
  401d6d:	41 be ca 35 40 00    	mov    r14d,0x4035ca
  401d73:	49 0f 45 ce          	cmovne rcx,r14
  401d77:	3c 01                	cmp    al,0x1
  401d79:	bf c2 35 40 00       	mov    edi,0x4035c2
  401d7e:	48 0f 45 f9          	cmovne rdi,rcx
  401d82:	e8 c9 f2 ff ff       	call   401050 <puts@plt>
  401d87:	0f b6 73 05          	movzx  esi,BYTE PTR [rbx+0x5]
  401d8b:	bf f2 32 40 00       	mov    edi,0x4032f2
  401d90:	31 c0                	xor    eax,eax
  401d92:	e8 d9 f2 ff ff       	call   401070 <printf@plt>
  401d97:	8a 43 05             	mov    al,BYTE PTR [rbx+0x5]
  401d9a:	3c 02                	cmp    al,0x2
  401d9c:	b9 a1 35 40 00       	mov    ecx,0x4035a1
  401da1:	49 0f 45 ce          	cmovne rcx,r14
  401da5:	3c 01                	cmp    al,0x1
  401da7:	bf b0 35 40 00       	mov    edi,0x4035b0
  401dac:	48 0f 45 f9          	cmovne rdi,rcx
  401db0:	e8 9b f2 ff ff       	call   401050 <puts@plt>
  401db5:	8b 73 14             	mov    esi,DWORD PTR [rbx+0x14]
  401db8:	bf 04 33 40 00       	mov    edi,0x403304
  401dbd:	31 c0                	xor    eax,eax
  401dbf:	e8 ac f2 ff ff       	call   401070 <printf@plt>
  401dc4:	0f b6 73 07          	movzx  esi,BYTE PTR [rbx+0x7]
  401dc8:	bf 15 33 40 00       	mov    edi,0x403315
  401dcd:	31 c0                	xor    eax,eax
  401dcf:	e8 9c f2 ff ff       	call   401070 <printf@plt>
  401dd4:	0f b7 73 10          	movzx  esi,WORD PTR [rbx+0x10]
  401dd8:	bf 25 33 40 00       	mov    edi,0x403325
  401ddd:	31 c0                	xor    eax,eax
  401ddf:	e8 8c f2 ff ff       	call   401070 <printf@plt>
  401de4:	0f b7 73 12          	movzx  esi,WORD PTR [rbx+0x12]
  401de8:	bf 33 33 40 00       	mov    edi,0x403333
  401ded:	31 c0                	xor    eax,eax
  401def:	e8 7c f2 ff ff       	call   401070 <printf@plt>
  401df4:	8b 73 14             	mov    esi,DWORD PTR [rbx+0x14]
  401df7:	bf 44 33 40 00       	mov    edi,0x403344
  401dfc:	31 c0                	xor    eax,eax
  401dfe:	e8 6d f2 ff ff       	call   401070 <printf@plt>
  401e03:	48 8b 73 18          	mov    rsi,QWORD PTR [rbx+0x18]
  401e07:	bf 55 33 40 00       	mov    edi,0x403355
  401e0c:	31 c0                	xor    eax,eax
  401e0e:	e8 5d f2 ff ff       	call   401070 <printf@plt>
  401e13:	48 8b 73 20          	mov    rsi,QWORD PTR [rbx+0x20]
  401e17:	bf 6c 33 40 00       	mov    edi,0x40336c
  401e1c:	31 c0                	xor    eax,eax
  401e1e:	e8 4d f2 ff ff       	call   401070 <printf@plt>
  401e23:	48 8b 73 28          	mov    rsi,QWORD PTR [rbx+0x28]
  401e27:	bf 8b 33 40 00       	mov    edi,0x40338b
  401e2c:	31 c0                	xor    eax,eax
  401e2e:	e8 3d f2 ff ff       	call   401070 <printf@plt>
  401e33:	8b 73 30             	mov    esi,DWORD PTR [rbx+0x30]
  401e36:	bf ac 33 40 00       	mov    edi,0x4033ac
  401e3b:	31 c0                	xor    eax,eax
  401e3d:	e8 2e f2 ff ff       	call   401070 <printf@plt>
  401e42:	0f b7 73 34          	movzx  esi,WORD PTR [rbx+0x34]
  401e46:	bf bb 33 40 00       	mov    edi,0x4033bb
  401e4b:	31 c0                	xor    eax,eax
  401e4d:	e8 1e f2 ff ff       	call   401070 <printf@plt>
  401e52:	0f b7 73 36          	movzx  esi,WORD PTR [rbx+0x36]
  401e56:	bf d0 33 40 00       	mov    edi,0x4033d0
  401e5b:	31 c0                	xor    eax,eax
  401e5d:	e8 0e f2 ff ff       	call   401070 <printf@plt>
  401e62:	0f b7 73 38          	movzx  esi,WORD PTR [rbx+0x38]
  401e66:	bf eb 33 40 00       	mov    edi,0x4033eb
  401e6b:	31 c0                	xor    eax,eax
  401e6d:	e8 fe f1 ff ff       	call   401070 <printf@plt>
  401e72:	0f b7 73 3a          	movzx  esi,WORD PTR [rbx+0x3a]
  401e76:	bf 07 34 40 00       	mov    edi,0x403407
  401e7b:	31 c0                	xor    eax,eax
  401e7d:	e8 ee f1 ff ff       	call   401070 <printf@plt>
  401e82:	0f b7 73 3c          	movzx  esi,WORD PTR [rbx+0x3c]
  401e86:	bf 23 34 40 00       	mov    edi,0x403423
  401e8b:	31 c0                	xor    eax,eax
  401e8d:	e8 de f1 ff ff       	call   401070 <printf@plt>
  401e92:	0f b7 73 3e          	movzx  esi,WORD PTR [rbx+0x3e]
  401e96:	bf 40 34 40 00       	mov    edi,0x403440
  401e9b:	31 c0                	xor    eax,eax
  401e9d:	48 83 c4 08          	add    rsp,0x8
  401ea1:	5b                   	pop    rbx
  401ea2:	41 5e                	pop    r14
  401ea4:	e9 c7 f1 ff ff       	jmp    401070 <printf@plt>
  401ea9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000401eb0 <hangup>:
  401eb0:	50                   	push   rax
  401eb1:	48 8d 74 24 07       	lea    rsi,[rsp+0x7]
  401eb6:	ba 01 00 00 00       	mov    edx,0x1
  401ebb:	bf 01 00 00 00       	mov    edi,0x1
  401ec0:	e8 db f1 ff ff       	call   4010a0 <read@plt>
  401ec5:	58                   	pop    rax
  401ec6:	c3                   	ret    
  401ec7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  401ece:	00 00 

0000000000401ed0 <type_program_to_str>:
  401ed0:	83 ff 08             	cmp    edi,0x8
  401ed3:	77 14                	ja     401ee9 <type_program_to_str+0x19>
  401ed5:	b8 5d 34 40 00       	mov    eax,0x40345d
  401eda:	89 f9                	mov    ecx,edi
  401edc:	ff 24 cd e8 31 40 00 	jmp    QWORD PTR [rcx*8+0x4031e8]
  401ee3:	b8 65 34 40 00       	mov    eax,0x403465
  401ee8:	c3                   	ret    
  401ee9:	8d 87 b0 1a 8b 9b    	lea    eax,[rdi-0x6474e550]
  401eef:	83 f8 03             	cmp    eax,0x3
  401ef2:	77 0d                	ja     401f01 <type_program_to_str+0x31>
  401ef4:	ff 24 c5 30 32 40 00 	jmp    QWORD PTR [rax*8+0x403230]
  401efb:	b8 b1 34 40 00       	mov    eax,0x4034b1
  401f00:	c3                   	ret    
  401f01:	81 ff 00 00 00 60    	cmp    edi,0x60000000
  401f07:	75 42                	jne    401f4b <type_program_to_str+0x7b>
  401f09:	b8 a9 34 40 00       	mov    eax,0x4034a9
  401f0e:	c3                   	ret    
  401f0f:	b8 6d 34 40 00       	mov    eax,0x40346d
  401f14:	c3                   	ret    
  401f15:	b8 78 34 40 00       	mov    eax,0x403478
  401f1a:	c3                   	ret    
  401f1b:	b8 82 34 40 00       	mov    eax,0x403482
  401f20:	c3                   	ret    
  401f21:	b8 8a 34 40 00       	mov    eax,0x40348a
  401f26:	c3                   	ret    
  401f27:	b8 93 34 40 00       	mov    eax,0x403493
  401f2c:	c3                   	ret    
  401f2d:	b8 9b 34 40 00       	mov    eax,0x40349b
  401f32:	c3                   	ret    
  401f33:	b8 a2 34 40 00       	mov    eax,0x4034a2
  401f38:	c3                   	ret    
  401f39:	b8 c1 34 40 00       	mov    eax,0x4034c1
  401f3e:	c3                   	ret    
  401f3f:	b8 ce 34 40 00       	mov    eax,0x4034ce
  401f44:	c3                   	ret    
  401f45:	b8 db 34 40 00       	mov    eax,0x4034db
  401f4a:	c3                   	ret    
  401f4b:	b8 e5 34 40 00       	mov    eax,0x4034e5
  401f50:	c3                   	ret    
  401f51:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  401f58:	00 00 00 
  401f5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401f60 <print_program_headers>:
  401f60:	53                   	push   rbx
  401f61:	48 85 ff             	test   rdi,rdi
  401f64:	0f 84 c7 01 00 00    	je     402131 <print_program_headers+0x1d1>
  401f6a:	48 89 fb             	mov    rbx,rdi
  401f6d:	e9 8e 00 00 00       	jmp    402000 <print_program_headers+0xa0>
  401f72:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  401f79:	00 00 00 
  401f7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  401f80:	bf 0a 00 00 00       	mov    edi,0xa
  401f85:	e8 b6 f0 ff ff       	call   401040 <putchar@plt>
  401f8a:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  401f8d:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
  401f91:	bf 25 35 40 00       	mov    edi,0x403525
  401f96:	31 c0                	xor    eax,eax
  401f98:	e8 d3 f0 ff ff       	call   401070 <printf@plt>
  401f9d:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  401fa0:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
  401fa4:	bf 37 35 40 00       	mov    edi,0x403537
  401fa9:	31 c0                	xor    eax,eax
  401fab:	e8 c0 f0 ff ff       	call   401070 <printf@plt>
  401fb0:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  401fb3:	48 8b 70 20          	mov    rsi,QWORD PTR [rax+0x20]
  401fb7:	bf 52 35 40 00       	mov    edi,0x403552
  401fbc:	31 c0                	xor    eax,eax
  401fbe:	e8 ad f0 ff ff       	call   401070 <printf@plt>
  401fc3:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  401fc6:	48 8b 70 28          	mov    rsi,QWORD PTR [rax+0x28]
  401fca:	bf 6a 35 40 00       	mov    edi,0x40356a
  401fcf:	31 c0                	xor    eax,eax
  401fd1:	e8 9a f0 ff ff       	call   401070 <printf@plt>
  401fd6:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  401fd9:	48 8b 70 30          	mov    rsi,QWORD PTR [rax+0x30]
  401fdd:	bf 84 35 40 00       	mov    edi,0x403584
  401fe2:	31 c0                	xor    eax,eax
  401fe4:	e8 87 f0 ff ff       	call   401070 <printf@plt>
  401fe9:	bf 0a 00 00 00       	mov    edi,0xa
  401fee:	e8 4d f0 ff ff       	call   401040 <putchar@plt>
  401ff3:	48 8b 5b 08          	mov    rbx,QWORD PTR [rbx+0x8]
  401ff7:	48 85 db             	test   rbx,rbx
  401ffa:	0f 84 31 01 00 00    	je     402131 <print_program_headers+0x1d1>
  402000:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  402003:	83 38 01             	cmp    DWORD PTR [rax],0x1
  402006:	75 eb                	jne    401ff3 <print_program_headers+0x93>
  402008:	bf f2 34 40 00       	mov    edi,0x4034f2
  40200d:	be 01 00 00 00       	mov    esi,0x1
  402012:	31 c0                	xor    eax,eax
  402014:	e8 57 f0 ff ff       	call   401070 <printf@plt>
  402019:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  40201c:	8b 00                	mov    eax,DWORD PTR [rax]
  40201e:	48 83 f8 08          	cmp    rax,0x8
  402022:	77 1c                	ja     402040 <print_program_headers+0xe0>
  402024:	bf 5d 34 40 00       	mov    edi,0x40345d
  402029:	ff 24 c5 50 32 40 00 	jmp    QWORD PTR [rax*8+0x403250]
  402030:	bf 65 34 40 00       	mov    edi,0x403465
  402035:	e9 86 00 00 00       	jmp    4020c0 <print_program_headers+0x160>
  40203a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  402040:	8d 88 b0 1a 8b 9b    	lea    ecx,[rax-0x6474e550]
  402046:	83 f9 03             	cmp    ecx,0x3
  402049:	77 0e                	ja     402059 <print_program_headers+0xf9>
  40204b:	ff 24 cd 98 32 40 00 	jmp    QWORD PTR [rcx*8+0x403298]
  402052:	bf b1 34 40 00       	mov    edi,0x4034b1
  402057:	eb 67                	jmp    4020c0 <print_program_headers+0x160>
  402059:	3d 00 00 00 60       	cmp    eax,0x60000000
  40205e:	75 4d                	jne    4020ad <print_program_headers+0x14d>
  402060:	bf a9 34 40 00       	mov    edi,0x4034a9
  402065:	eb 59                	jmp    4020c0 <print_program_headers+0x160>
  402067:	bf 6d 34 40 00       	mov    edi,0x40346d
  40206c:	eb 52                	jmp    4020c0 <print_program_headers+0x160>
  40206e:	bf 78 34 40 00       	mov    edi,0x403478
  402073:	eb 4b                	jmp    4020c0 <print_program_headers+0x160>
  402075:	bf 82 34 40 00       	mov    edi,0x403482
  40207a:	eb 44                	jmp    4020c0 <print_program_headers+0x160>
  40207c:	bf 8a 34 40 00       	mov    edi,0x40348a
  402081:	eb 3d                	jmp    4020c0 <print_program_headers+0x160>
  402083:	bf 93 34 40 00       	mov    edi,0x403493
  402088:	eb 36                	jmp    4020c0 <print_program_headers+0x160>
  40208a:	bf 9b 34 40 00       	mov    edi,0x40349b
  40208f:	eb 2f                	jmp    4020c0 <print_program_headers+0x160>
  402091:	bf a2 34 40 00       	mov    edi,0x4034a2
  402096:	eb 28                	jmp    4020c0 <print_program_headers+0x160>
  402098:	bf c1 34 40 00       	mov    edi,0x4034c1
  40209d:	eb 21                	jmp    4020c0 <print_program_headers+0x160>
  40209f:	bf ce 34 40 00       	mov    edi,0x4034ce
  4020a4:	eb 1a                	jmp    4020c0 <print_program_headers+0x160>
  4020a6:	bf db 34 40 00       	mov    edi,0x4034db
  4020ab:	eb 13                	jmp    4020c0 <print_program_headers+0x160>
  4020ad:	bf e5 34 40 00       	mov    edi,0x4034e5
  4020b2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  4020b9:	00 00 00 
  4020bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  4020c0:	e8 8b ef ff ff       	call   401050 <puts@plt>
  4020c5:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  4020c8:	8b 70 04             	mov    esi,DWORD PTR [rax+0x4]
  4020cb:	bf 02 35 40 00       	mov    edi,0x403502
  4020d0:	31 c0                	xor    eax,eax
  4020d2:	e8 99 ef ff ff       	call   401070 <printf@plt>
  4020d7:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  4020da:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
  4020dd:	a8 04                	test   al,0x4
  4020df:	75 0f                	jne    4020f0 <print_program_headers+0x190>
  4020e1:	a8 02                	test   al,0x2
  4020e3:	75 21                	jne    402106 <print_program_headers+0x1a6>
  4020e5:	a8 01                	test   al,0x1
  4020e7:	0f 84 93 fe ff ff    	je     401f80 <print_program_headers+0x20>
  4020ed:	eb 31                	jmp    402120 <print_program_headers+0x1c0>
  4020ef:	90                   	nop
  4020f0:	bf 13 35 40 00       	mov    edi,0x403513
  4020f5:	31 c0                	xor    eax,eax
  4020f7:	e8 74 ef ff ff       	call   401070 <printf@plt>
  4020fc:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  4020ff:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
  402102:	a8 02                	test   al,0x2
  402104:	74 df                	je     4020e5 <print_program_headers+0x185>
  402106:	bf 19 35 40 00       	mov    edi,0x403519
  40210b:	31 c0                	xor    eax,eax
  40210d:	e8 5e ef ff ff       	call   401070 <printf@plt>
  402112:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  402115:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
  402118:	a8 01                	test   al,0x1
  40211a:	0f 84 60 fe ff ff    	je     401f80 <print_program_headers+0x20>
  402120:	bf 1f 35 40 00       	mov    edi,0x40351f
  402125:	31 c0                	xor    eax,eax
  402127:	e8 44 ef ff ff       	call   401070 <printf@plt>
  40212c:	e9 4f fe ff ff       	jmp    401f80 <print_program_headers+0x20>
  402131:	5b                   	pop    rbx
  402132:	c3                   	ret    
  402133:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40213a:	00 00 00 
  40213d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000402140 <craft_payload>:
  402140:	41 57                	push   r15
  402142:	41 56                	push   r14
  402144:	41 55                	push   r13
  402146:	41 54                	push   r12
  402148:	53                   	push   rbx
  402149:	49 89 ff             	mov    r15,rdi
  40214c:	48 8b 7f 38          	mov    rdi,QWORD PTR [rdi+0x38]
  402150:	be b0 19 40 00       	mov    esi,0x4019b0
  402155:	e8 06 f8 ff ff       	call   401960 <get_segment>
  40215a:	49 89 c6             	mov    r14,rax
  40215d:	4d 8b 67 28          	mov    r12,QWORD PTR [r15+0x28]
  402161:	4d 8d ac 24 85 00 00 	lea    r13,[r12+0x85]
  402168:	00 
  402169:	4c 89 ef             	mov    rdi,r13
  40216c:	e8 5f ef ff ff       	call   4010d0 <malloc@plt>
  402171:	48 89 c3             	mov    rbx,rax
  402174:	49 89 47 10          	mov    QWORD PTR [r15+0x10],rax
  402178:	0f 28 05 21 2f 00 00 	movaps xmm0,XMMWORD PTR [rip+0x2f21]        # 4050a0 <blueprint_payload>
  40217f:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
  402182:	0f 28 05 27 2f 00 00 	movaps xmm0,XMMWORD PTR [rip+0x2f27]        # 4050b0 <blueprint_payload+0x10>
  402189:	0f 11 40 10          	movups XMMWORD PTR [rax+0x10],xmm0
  40218d:	0f 28 05 2c 2f 00 00 	movaps xmm0,XMMWORD PTR [rip+0x2f2c]        # 4050c0 <blueprint_payload+0x20>
  402194:	0f 11 40 20          	movups XMMWORD PTR [rax+0x20],xmm0
  402198:	0f 28 05 31 2f 00 00 	movaps xmm0,XMMWORD PTR [rip+0x2f31]        # 4050d0 <blueprint_payload+0x30>
  40219f:	0f 11 40 30          	movups XMMWORD PTR [rax+0x30],xmm0
  4021a3:	0f 28 05 36 2f 00 00 	movaps xmm0,XMMWORD PTR [rip+0x2f36]        # 4050e0 <blueprint_payload+0x40>
  4021aa:	0f 11 40 40          	movups XMMWORD PTR [rax+0x40],xmm0
  4021ae:	8a 05 3c 2f 00 00    	mov    al,BYTE PTR [rip+0x2f3c]        # 4050f0 <blueprint_payload+0x50>
  4021b4:	88 43 50             	mov    BYTE PTR [rbx+0x50],al
  4021b7:	48 8d 7b 51          	lea    rdi,[rbx+0x51]
  4021bb:	49 8b 77 20          	mov    rsi,QWORD PTR [r15+0x20]
  4021bf:	4c 89 e2             	mov    rdx,r12
  4021c2:	e8 f9 ee ff ff       	call   4010c0 <memcpy@plt>
  4021c7:	8b 05 63 2f 00 00    	mov    eax,DWORD PTR [rip+0x2f63]        # 405130 <decrypt_fn+0x30>
  4021cd:	42 89 84 23 81 00 00 	mov    DWORD PTR [rbx+r12*1+0x81],eax
  4021d4:	00 
  4021d5:	0f 28 05 44 2f 00 00 	movaps xmm0,XMMWORD PTR [rip+0x2f44]        # 405120 <decrypt_fn+0x20>
  4021dc:	42 0f 11 44 23 71    	movups XMMWORD PTR [rbx+r12*1+0x71],xmm0
  4021e2:	0f 28 05 27 2f 00 00 	movaps xmm0,XMMWORD PTR [rip+0x2f27]        # 405110 <decrypt_fn+0x10>
  4021e9:	42 0f 11 44 23 61    	movups XMMWORD PTR [rbx+r12*1+0x61],xmm0
  4021ef:	0f 28 05 0a 2f 00 00 	movaps xmm0,XMMWORD PTR [rip+0x2f0a]        # 405100 <decrypt_fn>
  4021f6:	42 0f 11 44 23 51    	movups XMMWORD PTR [rbx+r12*1+0x51],xmm0
  4021fc:	4d 89 6f 18          	mov    QWORD PTR [r15+0x18],r13
  402200:	49 8b 47 30          	mov    rax,QWORD PTR [r15+0x30]
  402204:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
  402207:	41 8b 4e 28          	mov    ecx,DWORD PTR [r14+0x28]
  40220b:	8d 4c 01 51          	lea    ecx,[rcx+rax*1+0x51]
  40220f:	89 4b 2b             	mov    DWORD PTR [rbx+0x2b],ecx
  402212:	44 89 63 30          	mov    DWORD PTR [rbx+0x30],r12d
  402216:	89 43 37             	mov    DWORD PTR [rbx+0x37],eax
  402219:	41 8b 4e 20          	mov    ecx,DWORD PTR [r14+0x20]
  40221d:	89 4b 3c             	mov    DWORD PTR [rbx+0x3c],ecx
  402220:	c7 43 48 25 00 00 00 	mov    DWORD PTR [rbx+0x48],0x25
  402227:	89 43 4d             	mov    DWORD PTR [rbx+0x4d],eax
  40222a:	4c 89 ff             	mov    rdi,r15
  40222d:	e8 0e 00 00 00       	call   402240 <print_info_payload>
  402232:	31 c0                	xor    eax,eax
  402234:	5b                   	pop    rbx
  402235:	41 5c                	pop    r12
  402237:	41 5d                	pop    r13
  402239:	41 5e                	pop    r14
  40223b:	41 5f                	pop    r15
  40223d:	c3                   	ret    
  40223e:	66 90                	xchg   ax,ax

0000000000402240 <print_info_payload>:
  402240:	53                   	push   rbx
  402241:	48 89 fb             	mov    rbx,rdi
  402244:	48 8b 7f 10          	mov    rdi,QWORD PTR [rdi+0x10]
  402248:	48 8b 43 30          	mov    rax,QWORD PTR [rbx+0x30]
  40224c:	48 83 c7 2b          	add    rdi,0x2b
  402250:	0f b6 70 05          	movzx  esi,BYTE PTR [rax+0x5]
  402254:	e8 27 01 00 00       	call   402380 <get_uint32>
  402259:	bf d2 35 40 00       	mov    edi,0x4035d2
  40225e:	89 c6                	mov    esi,eax
  402260:	31 c0                	xor    eax,eax
  402262:	e8 09 ee ff ff       	call   401070 <printf@plt>
  402267:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
  40226b:	48 8b 43 30          	mov    rax,QWORD PTR [rbx+0x30]
  40226f:	48 83 c7 30          	add    rdi,0x30
  402273:	0f b6 70 05          	movzx  esi,BYTE PTR [rax+0x5]
  402277:	e8 04 01 00 00       	call   402380 <get_uint32>
  40227c:	bf ec 35 40 00       	mov    edi,0x4035ec
  402281:	89 c6                	mov    esi,eax
  402283:	31 c0                	xor    eax,eax
  402285:	e8 e6 ed ff ff       	call   401070 <printf@plt>
  40228a:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
  40228e:	48 8b 43 30          	mov    rax,QWORD PTR [rbx+0x30]
  402292:	48 83 c7 37          	add    rdi,0x37
  402296:	0f b6 70 05          	movzx  esi,BYTE PTR [rax+0x5]
  40229a:	e8 e1 00 00 00       	call   402380 <get_uint32>
  40229f:	bf 06 36 40 00       	mov    edi,0x403606
  4022a4:	89 c6                	mov    esi,eax
  4022a6:	31 c0                	xor    eax,eax
  4022a8:	e8 c3 ed ff ff       	call   401070 <printf@plt>
  4022ad:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
  4022b1:	48 8b 43 30          	mov    rax,QWORD PTR [rbx+0x30]
  4022b5:	48 83 c7 3c          	add    rdi,0x3c
  4022b9:	0f b6 70 05          	movzx  esi,BYTE PTR [rax+0x5]
  4022bd:	e8 be 00 00 00       	call   402380 <get_uint32>
  4022c2:	bf 21 36 40 00       	mov    edi,0x403621
  4022c7:	89 c6                	mov    esi,eax
  4022c9:	31 c0                	xor    eax,eax
  4022cb:	e8 a0 ed ff ff       	call   401070 <printf@plt>
  4022d0:	bf 3c 36 40 00       	mov    edi,0x40363c
  4022d5:	e8 76 ed ff ff       	call   401050 <puts@plt>
  4022da:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
  4022de:	be 51 00 00 00       	mov    esi,0x51
  4022e3:	31 d2                	xor    edx,edx
  4022e5:	e8 66 f8 ff ff       	call   401b50 <hexdump>
  4022ea:	bf 4e 36 40 00       	mov    edi,0x40364e
  4022ef:	e8 5c ed ff ff       	call   401050 <puts@plt>
  4022f4:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
  4022f8:	48 8b 73 28          	mov    rsi,QWORD PTR [rbx+0x28]
  4022fc:	48 83 c7 51          	add    rdi,0x51
  402300:	31 d2                	xor    edx,edx
  402302:	e8 49 f8 ff ff       	call   401b50 <hexdump>
  402307:	bf 5c 36 40 00       	mov    edi,0x40365c
  40230c:	e8 3f ed ff ff       	call   401050 <puts@plt>
  402311:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
  402315:	48 8b 4b 28          	mov    rcx,QWORD PTR [rbx+0x28]
  402319:	48 8d 3c 08          	lea    rdi,[rax+rcx*1]
  40231d:	48 83 c7 51          	add    rdi,0x51
  402321:	be 34 00 00 00       	mov    esi,0x34
  402326:	31 d2                	xor    edx,edx
  402328:	e8 23 f8 ff ff       	call   401b50 <hexdump>
  40232d:	bf 71 36 40 00       	mov    edi,0x403671
  402332:	e8 19 ed ff ff       	call   401050 <puts@plt>
  402337:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
  40233b:	48 8b 73 18          	mov    rsi,QWORD PTR [rbx+0x18]
  40233f:	31 d2                	xor    edx,edx
  402341:	5b                   	pop    rbx
  402342:	e9 09 f8 ff ff       	jmp    401b50 <hexdump>
  402347:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40234e:	00 00 

0000000000402350 <get_uint8>:
  402350:	31 c0                	xor    eax,eax
  402352:	40 80 fe 01          	cmp    sil,0x1
  402356:	b9 07 00 00 00       	mov    ecx,0x7
  40235b:	48 0f 44 c8          	cmove  rcx,rax
  40235f:	8a 04 0f             	mov    al,BYTE PTR [rdi+rcx*1]
  402362:	c3                   	ret    
  402363:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40236a:	00 00 00 
  40236d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000402370 <get_uint16>:
  402370:	48 8d 47 06          	lea    rax,[rdi+0x6]
  402374:	40 80 fe 01          	cmp    sil,0x1
  402378:	48 0f 44 c7          	cmove  rax,rdi
  40237c:	0f b7 00             	movzx  eax,WORD PTR [rax]
  40237f:	c3                   	ret    

0000000000402380 <get_uint32>:
  402380:	48 8d 47 04          	lea    rax,[rdi+0x4]
  402384:	40 80 fe 01          	cmp    sil,0x1
  402388:	48 0f 44 c7          	cmove  rax,rdi
  40238c:	8b 00                	mov    eax,DWORD PTR [rax]
  40238e:	c3                   	ret    
  40238f:	90                   	nop

0000000000402390 <get_uint64>:
  402390:	48 8b 07             	mov    rax,QWORD PTR [rdi]
  402393:	c3                   	ret    

Disassembly of section .fini:

0000000000402394 <_fini>:
  402394:	f3 0f 1e fa          	endbr64 
  402398:	48 83 ec 08          	sub    rsp,0x8
  40239c:	48 83 c4 08          	add    rsp,0x8
  4023a0:	c3                   	ret    

Disassembly of section .rodata:

0000000000403000 <_IO_stdin_used>:
  403000:	01 00                	add    DWORD PTR [rax],eax
  403002:	02 00                	add    al,BYTE PTR [rax]
  403004:	7f 45                	jg     40304b <_IO_stdin_used+0x4b>
  403006:	4c                   	rex.WR
  403007:	46 00 45 72          	rex.RX add BYTE PTR [rbp+0x72],r8b
  40300b:	72 6f                	jb     40307c <_IO_stdin_used+0x7c>
  40300d:	72 20                	jb     40302f <_IO_stdin_used+0x2f>
  40300f:	72 65                	jb     403076 <_IO_stdin_used+0x76>
  403011:	61                   	(bad)  
  403012:	64 69 6e 67 20 66 69 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c696620
  403019:	6c 
  40301a:	65 00 45 72          	add    BYTE PTR gs:[rbp+0x72],al
  40301e:	72 6f                	jb     40308f <_IO_stdin_used+0x8f>
  403020:	72 20                	jb     403042 <_IO_stdin_used+0x42>
  403022:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  403023:	70 65                	jo     40308a <_IO_stdin_used+0x8a>
  403025:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  403026:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
  40302d:	65 00 4e 6f          	add    BYTE PTR gs:[rsi+0x6f],cl
  403031:	74 20                	je     403053 <_IO_stdin_used+0x53>
  403033:	61                   	(bad)  
  403034:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  403035:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
  403038:	65 63 75 74          	movsxd esi,DWORD PTR gs:[rbp+0x74]
  40303c:	61                   	(bad)  
  40303d:	62                   	(bad)  
  40303e:	6c                   	ins    BYTE PTR es:[rdi],dx
  40303f:	65 20 45 4c          	and    BYTE PTR gs:[rbp+0x4c],al
  403043:	46 20 66 69          	rex.RX and BYTE PTR [rsi+0x69],r12b
  403047:	6c                   	ins    BYTE PTR es:[rdi],dx
  403048:	65 00 4e 6f          	add    BYTE PTR gs:[rsi+0x6f],cl
  40304c:	74 20                	je     40306e <_IO_stdin_used+0x6e>
  40304e:	61                   	(bad)  
  40304f:	20 6c 69 74          	and    BYTE PTR [rcx+rbp*2+0x74],ch
  403053:	74 6c                	je     4030c1 <_IO_stdin_used+0xc1>
  403055:	65 20 65 6e          	and    BYTE PTR gs:[rbp+0x6e],ah
  403059:	64 69 61 6e 20 45 4c 	imul   esp,DWORD PTR fs:[rcx+0x6e],0x464c4520
  403060:	46 
  403061:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
  403064:	6c                   	ins    BYTE PTR es:[rdi],dx
  403065:	65 00 4e 6f          	add    BYTE PTR gs:[rsi+0x6f],cl
  403069:	74 20                	je     40308b <_IO_stdin_used+0x8b>
  40306b:	61                   	(bad)  
  40306c:	20 36                	and    BYTE PTR [rsi],dh
  40306e:	34 20                	xor    al,0x20
  403070:	62                   	(bad)  
  403071:	69 74 73 20 45 4c 46 	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x20464c45
  403078:	20 
  403079:	66 69 6c 65 00 57 72 	imul   bp,WORD PTR [rbp+riz*2+0x0],0x7257
  403080:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  403081:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  403082:	67 20 45 4c          	and    BYTE PTR [ebp+0x4c],al
  403086:	46 20 76 65          	rex.RX and BYTE PTR [rsi+0x65],r14b
  40308a:	72 73                	jb     4030ff <_IO_stdin_used+0xff>
  40308c:	69 6f 6e 00 54 68 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69685400
  403093:	73 20                	jae    4030b5 <_IO_stdin_used+0xb5>
  403095:	69 73 20 6e 6f 74 20 	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  40309c:	61                   	(bad)  
  40309d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40309e:	20 45 4c             	and    BYTE PTR [rbp+0x4c],al
  4030a1:	46 20 66 69          	rex.RX and BYTE PTR [rsi+0x69],r12b
  4030a5:	6c                   	ins    BYTE PTR es:[rdi],dx
  4030a6:	65 00 45 72          	add    BYTE PTR gs:[rbp+0x72],al
  4030aa:	72 6f                	jb     40311b <_IO_stdin_used+0x11b>
  4030ac:	72 20                	jb     4030ce <_IO_stdin_used+0xce>
  4030ae:	73 61                	jae    403111 <_IO_stdin_used+0x111>
  4030b0:	76 69                	jbe    40311b <_IO_stdin_used+0x11b>
  4030b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4030b3:	67 20 6e 65          	and    BYTE PTR [esi+0x65],ch
  4030b7:	77 20                	ja     4030d9 <_IO_stdin_used+0xd9>
  4030b9:	66 69 6c 65 00 45 72 	imul   bp,WORD PTR [rbp+riz*2+0x0],0x7245
  4030c0:	72 6f                	jb     403131 <_IO_stdin_used+0x131>
  4030c2:	72 20                	jb     4030e4 <_IO_stdin_used+0xe4>
  4030c4:	63 72 61             	movsxd esi,DWORD PTR [rdx+0x61]
  4030c7:	66 74 69             	data16 je 403133 <_IO_stdin_used+0x133>
  4030ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4030cb:	67 20 70 61          	and    BYTE PTR [eax+0x61],dh
  4030cf:	79 6c                	jns    40313d <_IO_stdin_used+0x13d>
  4030d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4030d2:	61                   	(bad)  
  4030d3:	64 00 45 72          	add    BYTE PTR fs:[rbp+0x72],al
  4030d7:	72 6f                	jb     403148 <_IO_stdin_used+0x148>
  4030d9:	72 20                	jb     4030fb <_IO_stdin_used+0xfb>
  4030db:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  4030dd:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
  4030e0:	70 74                	jo     403156 <_IO_stdin_used+0x156>
  4030e2:	69 6f 6e 00 4e 6f 20 	imul   ebp,DWORD PTR [rdi+0x6e],0x206f4e00
  4030e9:	74 65                	je     403150 <_IO_stdin_used+0x150>
  4030eb:	78 74                	js     403161 <_IO_stdin_used+0x161>
  4030ed:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
  4030f0:	67 6d                	ins    DWORD PTR es:[edi],dx
  4030f2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  4030f4:	74 20                	je     403116 <_IO_stdin_used+0x116>
  4030f6:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  4030f8:	75 6e                	jne    403168 <_IO_stdin_used+0x168>
  4030fa:	64 00 45 72          	add    BYTE PTR fs:[rbp+0x72],al
  4030fe:	72 6f                	jb     40316f <_IO_stdin_used+0x16f>
  403100:	72 20                	jb     403122 <_IO_stdin_used+0x122>
  403102:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
  403105:	63 6b 69             	movsxd ebp,DWORD PTR [rbx+0x69]
  403108:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  403109:	67 20 65 6c          	and    BYTE PTR [ebp+0x6c],ah
  40310d:	66 20 68 65          	data16 and BYTE PTR [rax+0x65],ch
  403111:	61                   	(bad)  
  403112:	64 65 72 00          	fs gs jb 403116 <_IO_stdin_used+0x116>
  403116:	45 72 72             	rex.RB jb 40318b <_IO_stdin_used+0x18b>
  403119:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40311a:	72 20                	jb     40313c <_IO_stdin_used+0x13c>
  40311c:	69 6e 69 74 00 57 72 	imul   ebp,DWORD PTR [rsi+0x69],0x72570074
  403123:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  403124:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  403125:	67 20 75 73          	and    BYTE PTR [ebp+0x73],dh
  403129:	61                   	(bad)  
  40312a:	67 65 00 46 61       	add    BYTE PTR gs:[esi+0x61],al
  40312f:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  403136:	20 
  403137:	67 65 74 20          	addr32 gs je 40315b <_IO_stdin_used+0x15b>
  40313b:	6b 65 79 0a          	imul   esp,DWORD PTR [rbp+0x79],0xa
  40313f:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
  403142:	61                   	(bad)  
  403143:	6c                   	ins    BYTE PTR es:[rdi],dx
  403144:	6c                   	ins    BYTE PTR es:[rdi],dx
  403145:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  403146:	63 00                	movsxd eax,DWORD PTR [rax]
  403148:	43 61                	rex.XB (bad) 
  40314a:	76 65                	jbe    4031b1 <_IO_stdin_used+0x1b1>
  40314c:	20 74 6f 6f          	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  403150:	20 73 6d             	and    BYTE PTR [rbx+0x6d],dh
  403153:	61                   	(bad)  
  403154:	6c                   	ins    BYTE PTR es:[rdi],dx
  403155:	6c                   	ins    BYTE PTR es:[rdi],dx
  403156:	00 45 72             	add    BYTE PTR [rbp+0x72],al
  403159:	72 6f                	jb     4031ca <_IO_stdin_used+0x1ca>
  40315b:	72 20                	jb     40317d <_IO_stdin_used+0x17d>
  40315d:	77 68                	ja     4031c7 <_IO_stdin_used+0x1c7>
  40315f:	69 6c 65 20 72 65 73 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x69736572
  403166:	69 
  403167:	7a 69                	jp     4031d2 <_IO_stdin_used+0x1d2>
  403169:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40316a:	67 20 66 69          	and    BYTE PTR [esi+0x69],ah
  40316e:	6c                   	ins    BYTE PTR es:[rdi],dx
  40316f:	65 00 45 52          	add    BYTE PTR gs:[rbp+0x52],al
  403173:	52                   	push   rdx
  403174:	4f 52                	rex.WRXB push r10
  403176:	3a 20                	cmp    ah,BYTE PTR [rax]
  403178:	57                   	push   rdi
  403179:	72 6f                	jb     4031ea <_IO_stdin_used+0x1ea>
  40317b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40317c:	67 20 73 69          	and    BYTE PTR [ebx+0x69],dh
  403180:	7a 65                	jp     4031e7 <_IO_stdin_used+0x1e7>
  403182:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
  403185:	20 70 72             	and    BYTE PTR [rax+0x72],dh
  403188:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  403189:	67 72 61             	addr32 jb 4031ed <_IO_stdin_used+0x1ed>
  40318c:	6d                   	ins    DWORD PTR es:[rdi],dx
  40318d:	20 68 65             	and    BYTE PTR [rax+0x65],ch
  403190:	61                   	(bad)  
  403191:	64 65 72 00          	fs gs jb 403195 <_IO_stdin_used+0x195>
  403195:	2e 2f                	cs (bad) 
  403197:	77 6f                	ja     403208 <_IO_stdin_used+0x208>
  403199:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40319a:	64 79 00             	fs jns 40319d <_IO_stdin_used+0x19d>
  40319d:	2f                   	(bad)  
  40319e:	64 65 76 2f          	fs gs jbe 4031d1 <_IO_stdin_used+0x1d1>
  4031a2:	75 72                	jne    403216 <_IO_stdin_used+0x216>
  4031a4:	61                   	(bad)  
  4031a5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4031a6:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
  4031a8:	6d                   	ins    DWORD PTR es:[rdi],dx
  4031a9:	00 46 61             	add    BYTE PTR [rsi+0x61],al
  4031ac:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4031b3:	20 
  4031b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4031b5:	70 65                	jo     40321c <_IO_stdin_used+0x21c>
  4031b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4031b8:	20 2f                	and    BYTE PTR [rdi],ch
  4031ba:	64 65 76 2f          	fs gs jbe 4031ed <_IO_stdin_used+0x1ed>
  4031be:	75 72                	jne    403232 <_IO_stdin_used+0x232>
  4031c0:	61                   	(bad)  
  4031c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4031c2:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
  4031c4:	6d                   	ins    DWORD PTR es:[rdi],dx
  4031c5:	0a 00                	or     al,BYTE PTR [rax]
  4031c7:	46 61                	rex.RX (bad) 
  4031c9:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4031d0:	20 
  4031d1:	72 65                	jb     403238 <_IO_stdin_used+0x238>
  4031d3:	61                   	(bad)  
  4031d4:	64 20 2f             	and    BYTE PTR fs:[rdi],ch
  4031d7:	64 65 76 2f          	fs gs jbe 40320a <_IO_stdin_used+0x20a>
  4031db:	75 72                	jne    40324f <_IO_stdin_used+0x24f>
  4031dd:	61                   	(bad)  
  4031de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4031df:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
  4031e1:	6d                   	ins    DWORD PTR es:[rdi],dx
  4031e2:	0a 00                	or     al,BYTE PTR [rax]
  4031e4:	00 00                	add    BYTE PTR [rax],al
  4031e6:	00 00                	add    BYTE PTR [rax],al
  4031e8:	50                   	push   rax
  4031e9:	1f                   	(bad)  
  4031ea:	40 00 00             	rex add BYTE PTR [rax],al
  4031ed:	00 00                	add    BYTE PTR [rax],al
  4031ef:	00 e3                	add    bl,ah
  4031f1:	1e                   	(bad)  
  4031f2:	40 00 00             	rex add BYTE PTR [rax],al
  4031f5:	00 00                	add    BYTE PTR [rax],al
  4031f7:	00 0f                	add    BYTE PTR [rdi],cl
  4031f9:	1f                   	(bad)  
  4031fa:	40 00 00             	rex add BYTE PTR [rax],al
  4031fd:	00 00                	add    BYTE PTR [rax],al
  4031ff:	00 15 1f 40 00 00    	add    BYTE PTR [rip+0x401f],dl        # 407224 <__TMC_END__+0x20ec>
  403205:	00 00                	add    BYTE PTR [rax],al
  403207:	00 1b                	add    BYTE PTR [rbx],bl
  403209:	1f                   	(bad)  
  40320a:	40 00 00             	rex add BYTE PTR [rax],al
  40320d:	00 00                	add    BYTE PTR [rax],al
  40320f:	00 21                	add    BYTE PTR [rcx],ah
  403211:	1f                   	(bad)  
  403212:	40 00 00             	rex add BYTE PTR [rax],al
  403215:	00 00                	add    BYTE PTR [rax],al
  403217:	00 27                	add    BYTE PTR [rdi],ah
  403219:	1f                   	(bad)  
  40321a:	40 00 00             	rex add BYTE PTR [rax],al
  40321d:	00 00                	add    BYTE PTR [rax],al
  40321f:	00 2d 1f 40 00 00    	add    BYTE PTR [rip+0x401f],ch        # 407244 <__TMC_END__+0x210c>
  403225:	00 00                	add    BYTE PTR [rax],al
  403227:	00 33                	add    BYTE PTR [rbx],dh
  403229:	1f                   	(bad)  
  40322a:	40 00 00             	rex add BYTE PTR [rax],al
  40322d:	00 00                	add    BYTE PTR [rax],al
  40322f:	00 fb                	add    bl,bh
  403231:	1e                   	(bad)  
  403232:	40 00 00             	rex add BYTE PTR [rax],al
  403235:	00 00                	add    BYTE PTR [rax],al
  403237:	00 39                	add    BYTE PTR [rcx],bh
  403239:	1f                   	(bad)  
  40323a:	40 00 00             	rex add BYTE PTR [rax],al
  40323d:	00 00                	add    BYTE PTR [rax],al
  40323f:	00 3f                	add    BYTE PTR [rdi],bh
  403241:	1f                   	(bad)  
  403242:	40 00 00             	rex add BYTE PTR [rax],al
  403245:	00 00                	add    BYTE PTR [rax],al
  403247:	00 45 1f             	add    BYTE PTR [rbp+0x1f],al
  40324a:	40 00 00             	rex add BYTE PTR [rax],al
  40324d:	00 00                	add    BYTE PTR [rax],al
  40324f:	00 c0                	add    al,al
  403251:	20 40 00             	and    BYTE PTR [rax+0x0],al
  403254:	00 00                	add    BYTE PTR [rax],al
  403256:	00 00                	add    BYTE PTR [rax],al
  403258:	30 20                	xor    BYTE PTR [rax],ah
  40325a:	40 00 00             	rex add BYTE PTR [rax],al
  40325d:	00 00                	add    BYTE PTR [rax],al
  40325f:	00 67 20             	add    BYTE PTR [rdi+0x20],ah
  403262:	40 00 00             	rex add BYTE PTR [rax],al
  403265:	00 00                	add    BYTE PTR [rax],al
  403267:	00 6e 20             	add    BYTE PTR [rsi+0x20],ch
  40326a:	40 00 00             	rex add BYTE PTR [rax],al
  40326d:	00 00                	add    BYTE PTR [rax],al
  40326f:	00 75 20             	add    BYTE PTR [rbp+0x20],dh
  403272:	40 00 00             	rex add BYTE PTR [rax],al
  403275:	00 00                	add    BYTE PTR [rax],al
  403277:	00 7c 20 40          	add    BYTE PTR [rax+riz*1+0x40],bh
  40327b:	00 00                	add    BYTE PTR [rax],al
  40327d:	00 00                	add    BYTE PTR [rax],al
  40327f:	00 83 20 40 00 00    	add    BYTE PTR [rbx+0x4020],al
  403285:	00 00                	add    BYTE PTR [rax],al
  403287:	00 8a 20 40 00 00    	add    BYTE PTR [rdx+0x4020],cl
  40328d:	00 00                	add    BYTE PTR [rax],al
  40328f:	00 91 20 40 00 00    	add    BYTE PTR [rcx+0x4020],dl
  403295:	00 00                	add    BYTE PTR [rax],al
  403297:	00 52 20             	add    BYTE PTR [rdx+0x20],dl
  40329a:	40 00 00             	rex add BYTE PTR [rax],al
  40329d:	00 00                	add    BYTE PTR [rax],al
  40329f:	00 98 20 40 00 00    	add    BYTE PTR [rax+0x4020],bl
  4032a5:	00 00                	add    BYTE PTR [rax],al
  4032a7:	00 9f 20 40 00 00    	add    BYTE PTR [rdi+0x4020],bl
  4032ad:	00 00                	add    BYTE PTR [rax],al
  4032af:	00 a6 20 40 00 00    	add    BYTE PTR [rsi+0x4020],ah
  4032b5:	00 00                	add    BYTE PTR [rax],al
  4032b7:	00 25 30 32 78 20    	add    BYTE PTR [rip+0x20783230],ah        # 20b864ed <__TMC_END__+0x207813b5>
  4032bd:	00 25 63 00 2e 00    	add    BYTE PTR [rip+0x2e0063],ah        # 6e3326 <__TMC_END__+0x2de1ee>
  4032c3:	65 5f                	gs pop rdi
  4032c5:	69 64 65 6e 74 3a 20 	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x25203a74
  4032cc:	25 
  4032cd:	30 32                	xor    BYTE PTR [rdx],dh
  4032cf:	78 20                	js     4032f1 <_IO_stdin_used+0x2f1>
  4032d1:	25 30 32 78 20       	and    eax,0x20783230
  4032d6:	25 30 32 78 20       	and    eax,0x20783230
  4032db:	25 30 32 78 0a       	and    eax,0xa783230
  4032e0:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
  4032e3:	61                   	(bad)  
  4032e4:	73 73                	jae    403359 <_IO_stdin_used+0x359>
  4032e6:	3a 20                	cmp    ah,BYTE PTR [rax]
  4032e8:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  4032eb:	30 32                	xor    BYTE PTR [rdx],dh
  4032ed:	78 20                	js     40330f <_IO_stdin_used+0x30f>
  4032ef:	2d 20 00 45 6e       	sub    eax,0x6e450020
  4032f4:	64 69 61 6e 3a 20 30 	imul   esp,DWORD PTR fs:[rcx+0x6e],0x7830203a
  4032fb:	78 
  4032fc:	25 30 32 78 20       	and    eax,0x20783230
  403301:	2d 20 00 56 65       	sub    eax,0x65560020
  403306:	72 73                	jb     40337b <_IO_stdin_used+0x37b>
  403308:	69 6f 6e 3a 20 30 78 	imul   ebp,DWORD PTR [rdi+0x6e],0x7830203a
  40330f:	25 30 32 78 0a       	and    eax,0xa783230
  403314:	00 4f 53             	add    BYTE PTR [rdi+0x53],cl
  403317:	20 41 42             	and    BYTE PTR [rcx+0x42],al
  40331a:	49 3a 20             	rex.WB cmp spl,BYTE PTR [r8]
  40331d:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  403320:	30 32                	xor    BYTE PTR [rdx],dh
  403322:	78 0a                	js     40332e <_IO_stdin_used+0x32e>
  403324:	00 54 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dl
  403328:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
  40332b:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  40332e:	30 34 78             	xor    BYTE PTR [rax+rdi*2],dh
  403331:	0a 00                	or     al,BYTE PTR [rax]
  403333:	4d 61                	rex.WRB (bad) 
  403335:	63 68 69             	movsxd ebp,DWORD PTR [rax+0x69]
  403338:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  403339:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
  40333c:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  40333f:	30 34 78             	xor    BYTE PTR [rax+rdi*2],dh
  403342:	0a 00                	or     al,BYTE PTR [rax]
  403344:	56                   	push   rsi
  403345:	65 72 73             	gs jb  4033bb <_IO_stdin_used+0x3bb>
  403348:	69 6f 6e 3a 20 30 78 	imul   ebp,DWORD PTR [rdi+0x6e],0x7830203a
  40334f:	25 30 38 78 0a       	and    eax,0xa783830
  403354:	00 45 6e             	add    BYTE PTR [rbp+0x6e],al
  403357:	74 72                	je     4033cb <_IO_stdin_used+0x3cb>
  403359:	79 20                	jns    40337b <_IO_stdin_used+0x37b>
  40335b:	70 6f                	jo     4033cc <_IO_stdin_used+0x3cc>
  40335d:	69 6e 74 3a 20 30 78 	imul   ebp,DWORD PTR [rsi+0x74],0x7830203a
  403364:	25 30 31 36 6c       	and    eax,0x6c363130
  403369:	78 0a                	js     403375 <_IO_stdin_used+0x375>
  40336b:	00 48 65             	add    BYTE PTR [rax+0x65],cl
  40336e:	61                   	(bad)  
  40336f:	64 65 72 20          	fs gs jb 403393 <_IO_stdin_used+0x393>
  403373:	74 61                	je     4033d6 <_IO_stdin_used+0x3d6>
  403375:	62                   	(bad)  
  403376:	6c                   	ins    BYTE PTR es:[rdi],dx
  403377:	65 20 6f 66          	and    BYTE PTR gs:[rdi+0x66],ch
  40337b:	66 73 65             	data16 jae 4033e3 <_IO_stdin_used+0x3e3>
  40337e:	74 3a                	je     4033ba <_IO_stdin_used+0x3ba>
  403380:	20 30                	and    BYTE PTR [rax],dh
  403382:	78 25                	js     4033a9 <_IO_stdin_used+0x3a9>
  403384:	30 31                	xor    BYTE PTR [rcx],dh
  403386:	36 6c                	ss ins BYTE PTR es:[rdi],dx
  403388:	78 0a                	js     403394 <_IO_stdin_used+0x394>
  40338a:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
  40338d:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  403391:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  403392:	20 68 65             	and    BYTE PTR [rax+0x65],ch
  403395:	61                   	(bad)  
  403396:	64 65 72 20          	fs gs jb 4033ba <_IO_stdin_used+0x3ba>
  40339a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40339b:	66 66 73 65          	data16 data16 jae 403404 <_IO_stdin_used+0x404>
  40339f:	74 3a                	je     4033db <_IO_stdin_used+0x3db>
  4033a1:	20 30                	and    BYTE PTR [rax],dh
  4033a3:	78 25                	js     4033ca <_IO_stdin_used+0x3ca>
  4033a5:	30 31                	xor    BYTE PTR [rcx],dh
  4033a7:	36 6c                	ss ins BYTE PTR es:[rdi],dx
  4033a9:	78 0a                	js     4033b5 <_IO_stdin_used+0x3b5>
  4033ab:	00 46 6c             	add    BYTE PTR [rsi+0x6c],al
  4033ae:	61                   	(bad)  
  4033af:	67 73 3a             	addr32 jae 4033ec <_IO_stdin_used+0x3ec>
  4033b2:	20 30                	and    BYTE PTR [rax],dh
  4033b4:	78 25                	js     4033db <_IO_stdin_used+0x3db>
  4033b6:	30 38                	xor    BYTE PTR [rax],bh
  4033b8:	78 0a                	js     4033c4 <_IO_stdin_used+0x3c4>
  4033ba:	00 48 65             	add    BYTE PTR [rax+0x65],cl
  4033bd:	61                   	(bad)  
  4033be:	64 65 72 20          	fs gs jb 4033e2 <_IO_stdin_used+0x3e2>
  4033c2:	73 69                	jae    40342d <_IO_stdin_used+0x42d>
  4033c4:	7a 65                	jp     40342b <_IO_stdin_used+0x42b>
  4033c6:	3a 20                	cmp    ah,BYTE PTR [rax]
  4033c8:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  4033cb:	30 34 78             	xor    BYTE PTR [rax+rdi*2],dh
  4033ce:	0a 00                	or     al,BYTE PTR [rax]
  4033d0:	48                   	rex.W
  4033d1:	65 61                	gs (bad) 
  4033d3:	64 65 72 20          	fs gs jb 4033f7 <_IO_stdin_used+0x3f7>
  4033d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  4033d9:	74 72                	je     40344d <_IO_stdin_used+0x44d>
  4033db:	79 20                	jns    4033fd <_IO_stdin_used+0x3fd>
  4033dd:	73 69                	jae    403448 <_IO_stdin_used+0x448>
  4033df:	7a 65                	jp     403446 <_IO_stdin_used+0x446>
  4033e1:	3a 20                	cmp    ah,BYTE PTR [rax]
  4033e3:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  4033e6:	30 34 78             	xor    BYTE PTR [rax+rdi*2],dh
  4033e9:	0a 00                	or     al,BYTE PTR [rax]
  4033eb:	48                   	rex.W
  4033ec:	65 61                	gs (bad) 
  4033ee:	64 65 72 20          	fs gs jb 403412 <_IO_stdin_used+0x412>
  4033f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4033f3:	62 72                	(bad)  
  4033f5:	20 65 6e             	and    BYTE PTR [rbp+0x6e],ah
  4033f8:	74 72                	je     40346c <_IO_stdin_used+0x46c>
  4033fa:	69 65 73 3a 20 30 78 	imul   esp,DWORD PTR [rbp+0x73],0x7830203a
  403401:	25 30 34 78 0a       	and    eax,0xa783430
  403406:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
  403409:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40340d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40340e:	20 65 6e             	and    BYTE PTR [rbp+0x6e],ah
  403411:	74 72                	je     403485 <_IO_stdin_used+0x485>
  403413:	79 20                	jns    403435 <_IO_stdin_used+0x435>
  403415:	73 69                	jae    403480 <_IO_stdin_used+0x480>
  403417:	7a 65                	jp     40347e <_IO_stdin_used+0x47e>
  403419:	3a 20                	cmp    ah,BYTE PTR [rax]
  40341b:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  40341e:	30 34 78             	xor    BYTE PTR [rax+rdi*2],dh
  403421:	0a 00                	or     al,BYTE PTR [rax]
  403423:	53                   	push   rbx
  403424:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  403429:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40342a:	20 6e 62             	and    BYTE PTR [rsi+0x62],ch
  40342d:	72 20                	jb     40344f <_IO_stdin_used+0x44f>
  40342f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  403431:	74 72                	je     4034a5 <_IO_stdin_used+0x4a5>
  403433:	69 65 73 3a 20 30 78 	imul   esp,DWORD PTR [rbp+0x73],0x7830203a
  40343a:	25 30 34 78 0a       	and    eax,0xa783430
  40343f:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
  403442:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  403446:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  403447:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  40344a:	64 65 78 20          	fs gs js 40346e <_IO_stdin_used+0x46e>
  40344e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40344f:	61                   	(bad)  
  403450:	6d                   	ins    DWORD PTR es:[rdi],dx
  403451:	65 73 3a             	gs jae 40348e <_IO_stdin_used+0x48e>
  403454:	20 30                	and    BYTE PTR [rax],dh
  403456:	78 25                	js     40347d <_IO_stdin_used+0x47d>
  403458:	30 34 78             	xor    BYTE PTR [rax+rdi*2],dh
  40345b:	0a 00                	or     al,BYTE PTR [rax]
  40345d:	50                   	push   rax
  40345e:	54                   	push   rsp
  40345f:	5f                   	pop    rdi
  403460:	4e 55                	rex.WRX push rbp
  403462:	4c                   	rex.WR
  403463:	4c 00 50 54          	rex.WR add BYTE PTR [rax+0x54],r10b
  403467:	5f                   	pop    rdi
  403468:	4c                   	rex.WR
  403469:	4f                   	rex.WRXB
  40346a:	41                   	rex.B
  40346b:	44 00 50 54          	add    BYTE PTR [rax+0x54],r10b
  40346f:	5f                   	pop    rdi
  403470:	44 59                	rex.R pop rcx
  403472:	4e                   	rex.WRX
  403473:	41                   	rex.B
  403474:	4d                   	rex.WRB
  403475:	49                   	rex.WB
  403476:	43 00 50 54          	rex.XB add BYTE PTR [r8+0x54],dl
  40347a:	5f                   	pop    rdi
  40347b:	49                   	rex.WB
  40347c:	4e 54                	rex.WRX push rsp
  40347e:	45 52                	rex.RB push r10
  403480:	50                   	push   rax
  403481:	00 50 54             	add    BYTE PTR [rax+0x54],dl
  403484:	5f                   	pop    rdi
  403485:	4e                   	rex.WRX
  403486:	4f 54                	rex.WRXB push r12
  403488:	45 00 50 54          	add    BYTE PTR [r8+0x54],r10b
  40348c:	5f                   	pop    rdi
  40348d:	53                   	push   rbx
  40348e:	48                   	rex.W
  40348f:	4c                   	rex.WR
  403490:	49                   	rex.WB
  403491:	42 00 50 54          	rex.X add BYTE PTR [rax+0x54],dl
  403495:	5f                   	pop    rdi
  403496:	50                   	push   rax
  403497:	48                   	rex.W
  403498:	44 52                	rex.R push rdx
  40349a:	00 50 54             	add    BYTE PTR [rax+0x54],dl
  40349d:	5f                   	pop    rdi
  40349e:	54                   	push   rsp
  40349f:	4c 53                	rex.WR push rbx
  4034a1:	00 50 54             	add    BYTE PTR [rax+0x54],dl
  4034a4:	5f                   	pop    rdi
  4034a5:	4e 55                	rex.WRX push rbp
  4034a7:	4d 00 50 54          	rex.WRB add BYTE PTR [r8+0x54],r10b
  4034ab:	5f                   	pop    rdi
  4034ac:	4c                   	rex.WR
  4034ad:	4f                   	rex.WRXB
  4034ae:	4f 53                	rex.WRXB push r11
  4034b0:	00 50 54             	add    BYTE PTR [rax+0x54],dl
  4034b3:	5f                   	pop    rdi
  4034b4:	47                   	rex.RXB
  4034b5:	4e 55                	rex.WRX push rbp
  4034b7:	5f                   	pop    rdi
  4034b8:	45                   	rex.RB
  4034b9:	48 5f                	rex.W pop rdi
  4034bb:	46 52                	rex.RX push rdx
  4034bd:	41                   	rex.B
  4034be:	4d                   	rex.WRB
  4034bf:	45 00 50 54          	add    BYTE PTR [r8+0x54],r10b
  4034c3:	5f                   	pop    rdi
  4034c4:	47                   	rex.RXB
  4034c5:	4e 55                	rex.WRX push rbp
  4034c7:	5f                   	pop    rdi
  4034c8:	53                   	push   rbx
  4034c9:	54                   	push   rsp
  4034ca:	41                   	rex.B
  4034cb:	43                   	rex.XB
  4034cc:	4b 00 50 54          	rex.WXB add BYTE PTR [r8+0x54],dl
  4034d0:	5f                   	pop    rdi
  4034d1:	47                   	rex.RXB
  4034d2:	4e 55                	rex.WRX push rbp
  4034d4:	5f                   	pop    rdi
  4034d5:	52                   	push   rdx
  4034d6:	45                   	rex.RB
  4034d7:	4c 52                	rex.WR push rdx
  4034d9:	4f 00 50 54          	rex.WRXB add BYTE PTR [r8+0x54],r10b
  4034dd:	5f                   	pop    rdi
  4034de:	4c                   	rex.WR
  4034df:	4f 53                	rex.WRXB push r11
  4034e1:	55                   	push   rbp
  4034e2:	4e 57                	rex.WRX push rdi
  4034e4:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
  4034e7:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4034eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4034ec:	20 74 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4034f0:	65 00 54 79 70       	add    BYTE PTR gs:[rcx+rdi*2+0x70],dl
  4034f5:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
  4034f8:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  4034fb:	30 38                	xor    BYTE PTR [rax],bh
  4034fd:	78 20                	js     40351f <_IO_stdin_used+0x51f>
  4034ff:	2d 20 00 46 6c       	sub    eax,0x6c460020
  403504:	61                   	(bad)  
  403505:	67 73 3a             	addr32 jae 403542 <_IO_stdin_used+0x542>
  403508:	20 30                	and    BYTE PTR [rax],dh
  40350a:	78 25                	js     403531 <_IO_stdin_used+0x531>
  40350c:	30 38                	xor    BYTE PTR [rax],bh
  40350e:	78 20                	js     403530 <_IO_stdin_used+0x530>
  403510:	2d 20 00 50 46       	sub    eax,0x46500020
  403515:	5f                   	pop    rdi
  403516:	52                   	push   rdx
  403517:	20 00                	and    BYTE PTR [rax],al
  403519:	50                   	push   rax
  40351a:	46 5f                	rex.RX pop rdi
  40351c:	57                   	push   rdi
  40351d:	20 00                	and    BYTE PTR [rax],al
  40351f:	50                   	push   rax
  403520:	46 5f                	rex.RX pop rdi
  403522:	58                   	pop    rax
  403523:	20 00                	and    BYTE PTR [rax],al
  403525:	4f                   	rex.WRXB
  403526:	66 66 73 65          	data16 data16 jae 40358f <_IO_stdin_used+0x58f>
  40352a:	74 3a                	je     403566 <_IO_stdin_used+0x566>
  40352c:	20 30                	and    BYTE PTR [rax],dh
  40352e:	78 25                	js     403555 <_IO_stdin_used+0x555>
  403530:	30 31                	xor    BYTE PTR [rcx],dh
  403532:	36 6c                	ss ins BYTE PTR es:[rdi],dx
  403534:	78 0a                	js     403540 <_IO_stdin_used+0x540>
  403536:	00 56 69             	add    BYTE PTR [rsi+0x69],dl
  403539:	72 74                	jb     4035af <_IO_stdin_used+0x5af>
  40353b:	75 61                	jne    40359e <_IO_stdin_used+0x59e>
  40353d:	6c                   	ins    BYTE PTR es:[rdi],dx
  40353e:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
  403541:	64 72 65             	fs jb  4035a9 <_IO_stdin_used+0x5a9>
  403544:	73 73                	jae    4035b9 <_IO_stdin_used+0x5b9>
  403546:	3a 20                	cmp    ah,BYTE PTR [rax]
  403548:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  40354b:	30 31                	xor    BYTE PTR [rcx],dh
  40354d:	36 6c                	ss ins BYTE PTR es:[rdi],dx
  40354f:	78 0a                	js     40355b <_IO_stdin_used+0x55b>
  403551:	00 53 69             	add    BYTE PTR [rbx+0x69],dl
  403554:	7a 65                	jp     4035bb <_IO_stdin_used+0x5bb>
  403556:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  403559:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
  40355c:	6c                   	ins    BYTE PTR es:[rdi],dx
  40355d:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
  403560:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  403563:	30 31                	xor    BYTE PTR [rcx],dh
  403565:	36 6c                	ss ins BYTE PTR es:[rdi],dx
  403567:	78 0a                	js     403573 <_IO_stdin_used+0x573>
  403569:	00 53 69             	add    BYTE PTR [rbx+0x69],dl
  40356c:	7a 65                	jp     4035d3 <_IO_stdin_used+0x5d3>
  40356e:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  403571:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
  403574:	6d                   	ins    DWORD PTR es:[rdi],dx
  403575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  403576:	72 79                	jb     4035f1 <_IO_stdin_used+0x5f1>
  403578:	3a 20                	cmp    ah,BYTE PTR [rax]
  40357a:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  40357d:	30 31                	xor    BYTE PTR [rcx],dh
  40357f:	36 6c                	ss ins BYTE PTR es:[rdi],dx
  403581:	78 0a                	js     40358d <_IO_stdin_used+0x58d>
  403583:	00 41 6c             	add    BYTE PTR [rcx+0x6c],al
  403586:	69 67 6e 6d 65 6e 74 	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  40358d:	3a 20                	cmp    ah,BYTE PTR [rax]
  40358f:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
  403592:	30 31                	xor    BYTE PTR [rcx],dh
  403594:	36 6c                	ss ins BYTE PTR es:[rdi],dx
  403596:	78 0a                	js     4035a2 <_IO_stdin_used+0x5a2>
  403598:	00 36                	add    BYTE PTR [rsi],dh
  40359a:	34 2d                	xor    al,0x2d
  40359c:	62                   	(bad)  
  40359d:	69 74 73 00 62 69 67 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x20676962
  4035a4:	20 
  4035a5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  4035a7:	64 69 61 6e 6e 65 73 	imul   esp,DWORD PTR fs:[rcx+0x6e],0x7373656e
  4035ae:	73 
  4035af:	00 6c 69 74          	add    BYTE PTR [rcx+rbp*2+0x74],ch
  4035b3:	74 6c                	je     403621 <_IO_stdin_used+0x621>
  4035b5:	65 20 65 6e          	and    BYTE PTR gs:[rbp+0x6e],ah
  4035b9:	64 69 61 6e 6e 65 73 	imul   esp,DWORD PTR fs:[rcx+0x6e],0x7373656e
  4035c0:	73 
  4035c1:	00 33                	add    BYTE PTR [rbx],dh
  4035c3:	32 2d 62 69 74 73    	xor    ch,BYTE PTR [rip+0x73746962]        # 73b49f2b <__TMC_END__+0x73744df3>
  4035c9:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
  4035cc:	76 61                	jbe    40362f <_IO_stdin_used+0x62f>
  4035ce:	6c                   	ins    BYTE PTR es:[rdi],dx
  4035cf:	69 64 00 6b 65 79 5f 	imul   esp,DWORD PTR [rax+rax*1+0x6b],0x705f7965
  4035d6:	70 
  4035d7:	74 72                	je     40364b <_IO_stdin_used+0x64b>
  4035d9:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  4035dc:	20 70 61             	and    BYTE PTR [rax+0x61],dh
  4035df:	79 6c                	jns    40364d <_IO_stdin_used+0x64d>
  4035e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4035e2:	61                   	(bad)  
  4035e3:	64 20 3d 20 25 23 78 	and    BYTE PTR fs:[rip+0x78232520],bh        # 78635b0a <__TMC_END__+0x782309d2>
  4035ea:	0a 00                	or     al,BYTE PTR [rax]
  4035ec:	6b 65 79 5f          	imul   esp,DWORD PTR [rbp+0x79],0x5f
  4035f0:	6c                   	ins    BYTE PTR es:[rdi],dx
  4035f1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  4035f3:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  4035f6:	20 70 61             	and    BYTE PTR [rax+0x61],dh
  4035f9:	79 6c                	jns    403667 <_IO_stdin_used+0x667>
  4035fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4035fc:	61                   	(bad)  
  4035fd:	64 20 3d 20 25 23 78 	and    BYTE PTR fs:[rip+0x78232520],bh        # 78635b24 <__TMC_END__+0x782309ec>
  403604:	0a 00                	or     al,BYTE PTR [rax]
  403606:	64 61                	fs (bad) 
  403608:	74 61                	je     40366b <_IO_stdin_used+0x66b>
  40360a:	5f                   	pop    rdi
  40360b:	70 74                	jo     403681 <_IO_stdin_used+0x681>
  40360d:	72 20                	jb     40362f <_IO_stdin_used+0x62f>
  40360f:	69 6e 20 70 61 79 6c 	imul   ebp,DWORD PTR [rsi+0x20],0x6c796170
  403616:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  403617:	61                   	(bad)  
  403618:	64 20 3d 20 25 23 78 	and    BYTE PTR fs:[rip+0x78232520],bh        # 78635b3f <__TMC_END__+0x78230a07>
  40361f:	0a 00                	or     al,BYTE PTR [rax]
  403621:	64 61                	fs (bad) 
  403623:	74 61                	je     403686 <__GNU_EH_FRAME_HDR+0x2>
  403625:	5f                   	pop    rdi
  403626:	6c                   	ins    BYTE PTR es:[rdi],dx
  403627:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  403629:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  40362c:	20 70 61             	and    BYTE PTR [rax+0x61],dh
  40362f:	79 6c                	jns    40369d <__GNU_EH_FRAME_HDR+0x19>
  403631:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  403632:	61                   	(bad)  
  403633:	64 20 3d 20 25 23 78 	and    BYTE PTR fs:[rip+0x78232520],bh        # 78635b5a <__TMC_END__+0x78230a22>
  40363a:	0a 00                	or     al,BYTE PTR [rax]
  40363c:	48                   	rex.W
  40363d:	45 58                	rex.RB pop r8
  40363f:	44 55                	rex.R push rbp
  403641:	4d 50                	rex.WRB push r8
  403643:	20 70 61             	and    BYTE PTR [rax+0x61],dh
  403646:	79 6c                	jns    4036b4 <__GNU_EH_FRAME_HDR+0x30>
  403648:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  403649:	61                   	(bad)  
  40364a:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
  40364d:	00 48 45             	add    BYTE PTR [rax+0x45],cl
  403650:	58                   	pop    rax
  403651:	44 55                	rex.R push rbp
  403653:	4d 50                	rex.WRB push r8
  403655:	20 6b 65             	and    BYTE PTR [rbx+0x65],ch
  403658:	79 3a                	jns    403694 <__GNU_EH_FRAME_HDR+0x10>
  40365a:	20 00                	and    BYTE PTR [rax],al
  40365c:	48                   	rex.W
  40365d:	45 58                	rex.RB pop r8
  40365f:	44 55                	rex.R push rbp
  403661:	4d 50                	rex.WRB push r8
  403663:	20 64 65 63          	and    BYTE PTR [rbp+riz*2+0x63],ah
  403667:	72 79                	jb     4036e2 <__GNU_EH_FRAME_HDR+0x5e>
  403669:	70 74                	jo     4036df <__GNU_EH_FRAME_HDR+0x5b>
  40366b:	5f                   	pop    rdi
  40366c:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
  40366e:	3a 20                	cmp    ah,BYTE PTR [rax]
  403670:	00 74 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dh
  403674:	61                   	(bad)  
  403675:	6c                   	ins    BYTE PTR es:[rdi],dx
  403676:	20 68 65             	and    BYTE PTR [rax+0x65],ch
  403679:	78 64                	js     4036df <__GNU_EH_FRAME_HDR+0x5b>
  40367b:	75 6d                	jne    4036ea <__GNU_EH_FRAME_HDR+0x66>
  40367d:	70 3a                	jo     4036b9 <__GNU_EH_FRAME_HDR+0x35>
  40367f:	20 00                	and    BYTE PTR [rax],al

Disassembly of section .eh_frame_hdr:

0000000000403684 <__GNU_EH_FRAME_HDR>:
  403684:	01 1b                	add    DWORD PTR [rbx],ebx
  403686:	03 3b                	add    edi,DWORD PTR [rbx]
  403688:	f8                   	clc    
  403689:	00 00                	add    BYTE PTR [rax],al
  40368b:	00 1e                	add    BYTE PTR [rsi],bl
  40368d:	00 00                	add    BYTE PTR [rax],al
  40368f:	00 9c d9 ff ff 3c 01 	add    BYTE PTR [rcx+rbx*8+0x13cffff],bl
  403696:	00 00                	add    BYTE PTR [rax],al
  403698:	8c da                	mov    edx,ds
  40369a:	ff                   	(bad)  
  40369b:	ff 14 01             	call   QWORD PTR [rcx+rax*1]
  40369e:	00 00                	add    BYTE PTR [rax],al
  4036a0:	bc da ff ff 28       	mov    esp,0x28ffffda
  4036a5:	01 00                	add    DWORD PTR [rax],eax
  4036a7:	00 7c db ff          	add    BYTE PTR [rbx+rbx*8-0x1],bh
  4036ab:	ff 64 01 00          	jmp    QWORD PTR [rcx+rax*1+0x0]
  4036af:	00 ec                	add    ah,ch
  4036b1:	db ff                	(bad)  
  4036b3:	ff a4 01 00 00 4c dc 	jmp    QWORD PTR [rcx+rax*1-0x23b40000]
  4036ba:	ff                   	(bad)  
  4036bb:	ff                   	(bad)  
  4036bc:	bc 01 00 00 5c       	mov    esp,0x5c000001
  4036c1:	dd ff                	(bad)  
  4036c3:	ff                   	(bad)  
  4036c4:	ec                   	in     al,dx
  4036c5:	01 00                	add    DWORD PTR [rax],eax
  4036c7:	00 1c de             	add    BYTE PTR [rsi+rbx*8],bl
  4036ca:	ff                   	(bad)  
  4036cb:	ff 00                	inc    DWORD PTR [rax]
  4036cd:	02 00                	add    al,BYTE PTR [rax]
  4036cf:	00 6c df ff          	add    BYTE PTR [rdi+rbx*8-0x1],ch
  4036d3:	ff 34 02             	push   QWORD PTR [rdx+rax*1]
  4036d6:	00 00                	add    BYTE PTR [rax],al
  4036d8:	bc df ff ff 48       	mov    esp,0x48ffffdf
  4036dd:	02 00                	add    al,BYTE PTR [rax]
  4036df:	00 3c e0             	add    BYTE PTR [rax+riz*8],bh
  4036e2:	ff                   	(bad)  
  4036e3:	ff 88 02 00 00 cc    	dec    DWORD PTR [rax-0x33fffffe]
  4036e9:	e1 ff                	loope  4036ea <__GNU_EH_FRAME_HDR+0x66>
  4036eb:	ff d4                	call   rsp
  4036ed:	02 00                	add    al,BYTE PTR [rax]
  4036ef:	00 1c e2             	add    BYTE PTR [rdx+riz*8],bl
  4036f2:	ff                   	(bad)  
  4036f3:	ff                   	(bad)  
  4036f4:	fc                   	cld    
  4036f5:	02 00                	add    al,BYTE PTR [rax]
  4036f7:	00 dc                	add    ah,bl
  4036f9:	e2 ff                	loop   4036fa <__GNU_EH_FRAME_HDR+0x76>
  4036fb:	ff 44 03 00          	inc    DWORD PTR [rbx+rax*1+0x0]
  4036ff:	00 2c e3             	add    BYTE PTR [rbx+riz*8],ch
  403702:	ff                   	(bad)  
  403703:	ff 70 03             	push   QWORD PTR [rax+0x3]
  403706:	00 00                	add    BYTE PTR [rax],al
  403708:	4c e3 ff             	rex.WR jrcxz 40370a <__GNU_EH_FRAME_HDR+0x86>
  40370b:	ff 84 03 00 00 ac e3 	inc    DWORD PTR [rbx+rax*1-0x1c540000]
  403712:	ff                   	(bad)  
  403713:	ff b0 03 00 00 5c    	push   QWORD PTR [rax+0x5c000003]
  403719:	e4 ff                	in     al,0xff
  40371b:	ff                   	(bad)  
  40371c:	fc                   	cld    
  40371d:	03 00                	add    eax,DWORD PTR [rax]
  40371f:	00 cc                	add    ah,cl
  403721:	e4 ff                	in     al,0xff
  403723:	ff 34 04             	push   QWORD PTR [rsp+rax*1]
  403726:	00 00                	add    BYTE PTR [rax],al
  403728:	8c e5                	mov    ebp,fs
  40372a:	ff                   	(bad)  
  40372b:	ff                   	(bad)  
  40372c:	7c 04                	jl     403732 <__GNU_EH_FRAME_HDR+0xae>
  40372e:	00 00                	add    BYTE PTR [rax],al
  403730:	ac                   	lods   al,BYTE PTR ds:[rsi]
  403731:	e6 ff                	out    0xff,al
  403733:	ff c8                	dec    eax
  403735:	04 00                	add    al,0x0
  403737:	00 2c e8             	add    BYTE PTR [rax+rbp*8],ch
  40373a:	ff                   	(bad)  
  40373b:	ff f4                	push   rsp
  40373d:	04 00                	add    al,0x0
  40373f:	00 4c e8 ff          	add    BYTE PTR [rax+rbp*8-0x1],cl
  403743:	ff 0c 05 00 00 dc e8 	dec    DWORD PTR [rax*1-0x17240000]
  40374a:	ff                   	(bad)  
  40374b:	ff 20                	jmp    QWORD PTR [rax]
  40374d:	05 00 00 bc ea       	add    eax,0xeabc0000
  403752:	ff                   	(bad)  
  403753:	ff                   	(bad)  
  403754:	3c 05                	cmp    al,0x5
  403756:	00 00                	add    BYTE PTR [rax],al
  403758:	bc eb ff ff 78       	mov    esp,0x78ffffeb
  40375d:	05 00 00 cc ec       	add    eax,0xeccc0000
  403762:	ff                   	(bad)  
  403763:	ff 94 05 00 00 ec ec 	call   QWORD PTR [rbp+rax*1-0x13140000]
  40376a:	ff                   	(bad)  
  40376b:	ff a8 05 00 00 fc    	jmp    FWORD PTR [rax-0x3fffffb]
  403771:	ec                   	in     al,dx
  403772:	ff                   	(bad)  
  403773:	ff                   	(bad)  
  403774:	bc 05 00 00 0c       	mov    esp,0xc000005
  403779:	ed                   	in     eax,dx
  40377a:	ff                   	(bad)  
  40377b:	ff d0                	call   rax
  40377d:	05                   	.byte 0x5
	...

Disassembly of section .eh_frame:

0000000000403780 <__FRAME_END__-0x4e8>:
  403780:	14 00                	adc    al,0x0
  403782:	00 00                	add    BYTE PTR [rax],al
  403784:	00 00                	add    BYTE PTR [rax],al
  403786:	00 00                	add    BYTE PTR [rax],al
  403788:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  40378b:	00 01                	add    BYTE PTR [rcx],al
  40378d:	78 10                	js     40379f <__GNU_EH_FRAME_HDR+0x11b>
  40378f:	01 1b                	add    DWORD PTR [rbx],ebx
  403791:	0c 07                	or     al,0x7
  403793:	08 90 01 00 00 10    	or     BYTE PTR [rax+0x10000001],dl
  403799:	00 00                	add    BYTE PTR [rax],al
  40379b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40379e:	00 00                	add    BYTE PTR [rax],al
  4037a0:	70 d9                	jo     40377b <__GNU_EH_FRAME_HDR+0xf7>
  4037a2:	ff                   	(bad)  
  4037a3:	ff 26                	jmp    QWORD PTR [rsi]
  4037a5:	00 00                	add    BYTE PTR [rax],al
  4037a7:	00 00                	add    BYTE PTR [rax],al
  4037a9:	44 07                	rex.R (bad) 
  4037ab:	10 10                	adc    BYTE PTR [rax],dl
  4037ad:	00 00                	add    BYTE PTR [rax],al
  4037af:	00 30                	add    BYTE PTR [rax],dh
  4037b1:	00 00                	add    BYTE PTR [rax],al
  4037b3:	00 8c d9 ff ff 05 00 	add    BYTE PTR [rcx+rbx*8+0x5ffff],cl
  4037ba:	00 00                	add    BYTE PTR [rax],al
  4037bc:	00 00                	add    BYTE PTR [rax],al
  4037be:	00 00                	add    BYTE PTR [rax],al
  4037c0:	24 00                	and    al,0x0
  4037c2:	00 00                	add    BYTE PTR [rax],al
  4037c4:	44 00 00             	add    BYTE PTR [rax],r8b
  4037c7:	00 58 d8             	add    BYTE PTR [rax-0x28],bl
  4037ca:	ff                   	(bad)  
  4037cb:	ff f0                	push   rax
  4037cd:	00 00                	add    BYTE PTR [rax],al
  4037cf:	00 00                	add    BYTE PTR [rax],al
  4037d1:	0e                   	(bad)  
  4037d2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  4037d5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  4037d8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  4037db:	80 00 3f             	add    BYTE PTR [rax],0x3f
  4037de:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  4037e0:	2a 33                	sub    dh,BYTE PTR [rbx]
  4037e2:	24 22                	and    al,0x22
  4037e4:	00 00                	add    BYTE PTR [rax],al
  4037e6:	00 00                	add    BYTE PTR [rax],al
  4037e8:	3c 00                	cmp    al,0x0
  4037ea:	00 00                	add    BYTE PTR [rax],al
  4037ec:	6c                   	ins    BYTE PTR es:[rdi],dx
  4037ed:	00 00                	add    BYTE PTR [rax],al
  4037ef:	00 10                	add    BYTE PTR [rax],dl
  4037f1:	da ff                	(bad)  
  4037f3:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
  4037f7:	00 00                	add    BYTE PTR [rax],al
  4037f9:	42 0e                	rex.X (bad) 
  4037fb:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  4037fe:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  403801:	20 83 03 8e 02 7c    	and    BYTE PTR [rbx+0x7c028e03],al
  403807:	0e                   	(bad)  
  403808:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  40380b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40380e:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
  403811:	20 53 0e             	and    BYTE PTR [rbx+0xe],dl
  403814:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  403817:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40381a:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
  40381d:	20 4d 0e             	and    BYTE PTR [rbp+0xe],cl
  403820:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  403823:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403826:	08 00                	or     BYTE PTR [rax],al
  403828:	14 00                	adc    al,0x0
  40382a:	00 00                	add    BYTE PTR [rax],al
  40382c:	ac                   	lods   al,BYTE PTR ds:[rsi]
  40382d:	00 00                	add    BYTE PTR [rax],al
  40382f:	00 40 da             	add    BYTE PTR [rax-0x26],al
  403832:	ff                   	(bad)  
  403833:	ff 52 00             	call   QWORD PTR [rdx+0x0]
  403836:	00 00                	add    BYTE PTR [rax],al
  403838:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40383b:	10 02                	adc    BYTE PTR [rdx],al
  40383d:	50                   	push   rax
  40383e:	0e                   	(bad)  
  40383f:	08 2c 00             	or     BYTE PTR [rax+rax*1],ch
  403842:	00 00                	add    BYTE PTR [rax],al
  403844:	c4                   	(bad)  
  403845:	00 00                	add    BYTE PTR [rax],al
  403847:	00 88 da ff ff 06    	add    BYTE PTR [rax+0x6ffffda],cl
  40384d:	01 00                	add    DWORD PTR [rax],eax
  40384f:	00 00                	add    BYTE PTR [rax],al
  403851:	41 0e                	rex.B (bad) 
  403853:	10 44 0e 50          	adc    BYTE PTR [rsi+rcx*1+0x50],al
  403857:	83 02 02             	add    DWORD PTR [rdx],0x2
  40385a:	6d                   	ins    DWORD PTR es:[rdi],dx
  40385b:	0e                   	(bad)  
  40385c:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  40385f:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
  403862:	50                   	push   rax
  403863:	02 90 0e 10 41 0e    	add    dl,BYTE PTR [rax+0xe41100e]
  403869:	08 00                	or     BYTE PTR [rax],al
  40386b:	00 00                	add    BYTE PTR [rax],al
  40386d:	00 00                	add    BYTE PTR [rax],al
  40386f:	00 10                	add    BYTE PTR [rax],dl
  403871:	00 00                	add    BYTE PTR [rax],al
  403873:	00 f4                	add    ah,dh
  403875:	00 00                	add    BYTE PTR [rax],al
  403877:	00 68 db             	add    BYTE PTR [rax-0x25],ch
  40387a:	ff                   	(bad)  
  40387b:	ff b6 00 00 00 00    	push   QWORD PTR [rsi+0x0]
  403881:	00 00                	add    BYTE PTR [rax],al
  403883:	00 30                	add    BYTE PTR [rax],dh
  403885:	00 00                	add    BYTE PTR [rax],al
  403887:	00 08                	add    BYTE PTR [rax],cl
  403889:	01 00                	add    DWORD PTR [rax],eax
  40388b:	00 14 dc             	add    BYTE PTR [rsp+rbx*8],dl
  40388e:	ff                   	(bad)  
  40388f:	ff 46 01             	inc    DWORD PTR [rsi+0x1]
  403892:	00 00                	add    BYTE PTR [rax],al
  403894:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  403897:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40389a:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  40389d:	20 83 04 8e 03 8f    	and    BYTE PTR [rbx-0x70fc71fc],al
  4038a3:	02 02                	add    al,BYTE PTR [rdx]
  4038a5:	56                   	push   rsi
  4038a6:	0e                   	(bad)  
  4038a7:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  4038aa:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  4038ad:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
  4038b0:	20 00                	and    BYTE PTR [rax],al
  4038b2:	00 00                	add    BYTE PTR [rax],al
  4038b4:	00 00                	add    BYTE PTR [rax],al
  4038b6:	00 00                	add    BYTE PTR [rax],al
  4038b8:	10 00                	adc    BYTE PTR [rax],al
  4038ba:	00 00                	add    BYTE PTR [rax],al
  4038bc:	3c 01                	cmp    al,0x1
  4038be:	00 00                	add    BYTE PTR [rax],al
  4038c0:	30 dd                	xor    ch,bl
  4038c2:	ff                   	(bad)  
  4038c3:	ff 47 00             	inc    DWORD PTR [rdi+0x0]
  4038c6:	00 00                	add    BYTE PTR [rax],al
  4038c8:	00 00                	add    BYTE PTR [rax],al
  4038ca:	00 00                	add    BYTE PTR [rax],al
  4038cc:	3c 00                	cmp    al,0x0
  4038ce:	00 00                	add    BYTE PTR [rax],al
  4038d0:	50                   	push   rax
  4038d1:	01 00                	add    DWORD PTR [rax],eax
  4038d3:	00 6c dd ff          	add    BYTE PTR [rbp+rbx*8-0x1],ch
  4038d7:	ff                   	(bad)  
  4038d8:	7f 00                	jg     4038da <__GNU_EH_FRAME_HDR+0x256>
  4038da:	00 00                	add    BYTE PTR [rax],al
  4038dc:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  4038df:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  4038e2:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  4038e5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  4038e8:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
  4038eb:	30 83 06 8c 05 8d    	xor    BYTE PTR [rbx-0x72fa73fa],al
  4038f1:	04 8e                	add    al,0x8e
  4038f3:	03 8f 02 02 5c 0e    	add    ecx,DWORD PTR [rdi+0xe5c0202]
  4038f9:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  4038fc:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  4038ff:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403902:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403905:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
  403908:	30 00                	xor    BYTE PTR [rax],al
  40390a:	00 00                	add    BYTE PTR [rax],al
  40390c:	48 00 00             	rex.W add BYTE PTR [rax],al
  40390f:	00 90 01 00 00 ac    	add    BYTE PTR [rax-0x53ffffff],dl
  403915:	dd ff                	(bad)  
  403917:	ff 83 01 00 00 00    	inc    DWORD PTR [rbx+0x1]
  40391d:	41 0e                	rex.B (bad) 
  40391f:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403922:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403925:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  403928:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  40392b:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  40392e:	38 44 0e 50          	cmp    BYTE PTR [rsi+rcx*1+0x50],al
  403932:	83 07 8c             	add    DWORD PTR [rdi],0xffffff8c
  403935:	06                   	(bad)  
  403936:	8d 05 8e 04 8f 03    	lea    eax,[rip+0x38f048e]        # 3cf3dca <__TMC_END__+0x38eec92>
  40393c:	86 02                	xchg   BYTE PTR [rdx],al
  40393e:	03 54 01 0e          	add    edx,DWORD PTR [rcx+rax*1+0xe]
  403942:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  403945:	30 42 0e             	xor    BYTE PTR [rdx+0xe],al
  403948:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  40394b:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  40394e:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403951:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  403954:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
  403957:	50                   	push   rax
  403958:	24 00                	and    al,0x0
  40395a:	00 00                	add    BYTE PTR [rax],al
  40395c:	dc 01                	fadd   QWORD PTR [rcx]
  40395e:	00 00                	add    BYTE PTR [rax],al
  403960:	f0 de ff             	lock fdivp st(7),st
  403963:	ff 4b 00             	dec    DWORD PTR [rbx+0x0]
  403966:	00 00                	add    BYTE PTR [rax],al
  403968:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  40396b:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  40396e:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  403971:	20 83 03 8e 02 02    	and    BYTE PTR [rbx+0x2028e03],al
  403977:	43 0e                	rex.XB (bad) 
  403979:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  40397c:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40397f:	08 44 00 00          	or     BYTE PTR [rax+rax*1+0x0],al
  403983:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
  403986:	00 00                	add    BYTE PTR [rax],al
  403988:	18 df                	sbb    bh,bl
  40398a:	ff                   	(bad)  
  40398b:	ff b4 00 00 00 00 41 	push   QWORD PTR [rax+rax*1+0x41000000]
  403992:	0e                   	(bad)  
  403993:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403996:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403999:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  40399c:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  40399f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  4039a2:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  4039a5:	40 83 07 8c          	rex add DWORD PTR [rdi],0xffffff8c
  4039a9:	06                   	(bad)  
  4039aa:	8d 05 8e 04 8f 03    	lea    eax,[rip+0x38f048e]        # 3cf3e3e <__TMC_END__+0x38eed06>
  4039b0:	86 02                	xchg   BYTE PTR [rdx],al
  4039b2:	02 9e 0e 38 41 0e    	add    bl,BYTE PTR [rsi+0xe41380e]
  4039b8:	30 42 0e             	xor    BYTE PTR [rdx+0xe],al
  4039bb:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  4039be:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  4039c1:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  4039c4:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  4039c7:	08 28                	or     BYTE PTR [rax],ch
  4039c9:	00 00                	add    BYTE PTR [rax],al
  4039cb:	00 4c 02 00          	add    BYTE PTR [rdx+rax*1+0x0],cl
  4039cf:	00 90 df ff ff 46    	add    BYTE PTR [rax+0x46ffffdf],dl
  4039d5:	00 00                	add    BYTE PTR [rax],al
  4039d7:	00 00                	add    BYTE PTR [rax],al
  4039d9:	42 0e                	rex.X (bad) 
  4039db:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  4039de:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  4039e1:	20 83 04 8e 03 8f    	and    BYTE PTR [rbx-0x70fc71fc],al
  4039e7:	02 7c 0e 18          	add    bh,BYTE PTR [rsi+rcx*1+0x18]
  4039eb:	42 0e                	rex.X (bad) 
  4039ed:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  4039f0:	08 00                	or     BYTE PTR [rax],al
  4039f2:	00 00                	add    BYTE PTR [rax],al
  4039f4:	10 00                	adc    BYTE PTR [rax],al
  4039f6:	00 00                	add    BYTE PTR [rax],al
  4039f8:	78 02                	js     4039fc <__GNU_EH_FRAME_HDR+0x378>
  4039fa:	00 00                	add    BYTE PTR [rax],al
  4039fc:	b4 df                	mov    ah,0xdf
  4039fe:	ff                   	(bad)  
  4039ff:	ff 13                	call   QWORD PTR [rbx]
  403a01:	00 00                	add    BYTE PTR [rax],al
  403a03:	00 00                	add    BYTE PTR [rax],al
  403a05:	00 00                	add    BYTE PTR [rax],al
  403a07:	00 28                	add    BYTE PTR [rax],ch
  403a09:	00 00                	add    BYTE PTR [rax],al
  403a0b:	00 8c 02 00 00 c0 df 	add    BYTE PTR [rdx+rax*1-0x20400000],cl
  403a12:	ff                   	(bad)  
  403a13:	ff 56 00             	call   QWORD PTR [rsi+0x0]
  403a16:	00 00                	add    BYTE PTR [rax],al
  403a18:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403a1b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403a1e:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  403a21:	20 83 04 8e 03 86    	and    BYTE PTR [rbx-0x79fc71fc],al
  403a27:	02 02                	add    al,BYTE PTR [rdx]
  403a29:	4e 0e                	rex.WRX (bad) 
  403a2b:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403a2e:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  403a31:	08 00                	or     BYTE PTR [rax],al
  403a33:	00 48 00             	add    BYTE PTR [rax+0x0],cl
  403a36:	00 00                	add    BYTE PTR [rax],al
  403a38:	b8 02 00 00 f4       	mov    eax,0xf4000002
  403a3d:	df ff                	(bad)  
  403a3f:	ff a2 00 00 00 00    	jmp    QWORD PTR [rdx+0x0]
  403a45:	41 0e                	rex.B (bad) 
  403a47:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403a4a:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403a4d:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  403a50:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  403a53:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  403a56:	38 47 0e             	cmp    BYTE PTR [rdi+0xe],al
  403a59:	c0 40 83 07          	rol    BYTE PTR [rax-0x7d],0x7
  403a5d:	8c 06                	mov    WORD PTR [rsi],es
  403a5f:	8d 05 8e 04 8f 03    	lea    eax,[rip+0x38f048e]        # 3cf3ef3 <__TMC_END__+0x38eedbb>
  403a65:	86 02                	xchg   BYTE PTR [rdx],al
  403a67:	02 86 0e 38 41 0e    	add    al,BYTE PTR [rsi+0xe41380e]
  403a6d:	30 42 0e             	xor    BYTE PTR [rdx+0xe],al
  403a70:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  403a73:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  403a76:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403a79:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  403a7c:	08 00                	or     BYTE PTR [rax],al
  403a7e:	00 00                	add    BYTE PTR [rax],al
  403a80:	34 00                	xor    al,0x0
  403a82:	00 00                	add    BYTE PTR [rax],al
  403a84:	04 03                	add    al,0x3
  403a86:	00 00                	add    BYTE PTR [rax],al
  403a88:	58                   	pop    rax
  403a89:	e0 ff                	loopne 403a8a <__GNU_EH_FRAME_HDR+0x406>
  403a8b:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
  403a8f:	00 00                	add    BYTE PTR [rax],al
  403a91:	41 0e                	rex.B (bad) 
  403a93:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  403a96:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  403a99:	20 83 03 86 02 7a    	and    BYTE PTR [rbx+0x7a028603],al
  403a9f:	0e                   	(bad)  
  403aa0:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  403aa3:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  403aa6:	08 41 0e             	or     BYTE PTR [rcx+0xe],al
  403aa9:	20 61 0e             	and    BYTE PTR [rcx+0xe],ah
  403aac:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  403aaf:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  403ab2:	08 00                	or     BYTE PTR [rax],al
  403ab4:	00 00                	add    BYTE PTR [rax],al
  403ab6:	00 00                	add    BYTE PTR [rax],al
  403ab8:	44 00 00             	add    BYTE PTR [rax],r8b
  403abb:	00 3c 03             	add    BYTE PTR [rbx+rax*1],bh
  403abe:	00 00                	add    BYTE PTR [rax],al
  403ac0:	90                   	nop
  403ac1:	e0 ff                	loopne 403ac2 <__GNU_EH_FRAME_HDR+0x43e>
  403ac3:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
  403ac9:	41 0e                	rex.B (bad) 
  403acb:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403ace:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403ad1:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  403ad4:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  403ad7:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  403ada:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  403add:	40 83 07 8c          	rex add DWORD PTR [rdi],0xffffff8c
  403ae1:	06                   	(bad)  
  403ae2:	8d 05 8e 04 8f 03    	lea    eax,[rip+0x38f048e]        # 3cf3f76 <__TMC_END__+0x38eee3e>
  403ae8:	86 02                	xchg   BYTE PTR [rdx],al
  403aea:	02 98 0e 38 41 0e    	add    bl,BYTE PTR [rax+0xe41380e]
  403af0:	30 42 0e             	xor    BYTE PTR [rdx+0xe],al
  403af3:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  403af6:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  403af9:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403afc:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  403aff:	08 48 00             	or     BYTE PTR [rax+0x0],cl
  403b02:	00 00                	add    BYTE PTR [rax],al
  403b04:	84 03                	test   BYTE PTR [rbx],al
  403b06:	00 00                	add    BYTE PTR [rax],al
  403b08:	08 e1                	or     cl,ah
  403b0a:	ff                   	(bad)  
  403b0b:	ff 1f                	call   FWORD PTR [rdi]
  403b0d:	01 00                	add    DWORD PTR [rax],eax
  403b0f:	00 00                	add    BYTE PTR [rax],al
  403b11:	41 0e                	rex.B (bad) 
  403b13:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403b16:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403b19:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  403b1c:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  403b1f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  403b22:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  403b25:	40 83 07 8c          	rex add DWORD PTR [rdi],0xffffff8c
  403b29:	06                   	(bad)  
  403b2a:	8d 05 8e 04 8f 03    	lea    eax,[rip+0x38f048e]        # 3cf3fbe <__TMC_END__+0x38eee86>
  403b30:	86 02                	xchg   BYTE PTR [rdx],al
  403b32:	03 05 01 0e 38 41    	add    eax,DWORD PTR [rip+0x41380e01]        # 41784939 <__TMC_END__+0x4137f801>
  403b38:	0e                   	(bad)  
  403b39:	30 42 0e             	xor    BYTE PTR [rdx+0xe],al
  403b3c:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  403b3f:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  403b42:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403b45:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  403b48:	08 00                	or     BYTE PTR [rax],al
  403b4a:	00 00                	add    BYTE PTR [rax],al
  403b4c:	28 00                	sub    BYTE PTR [rax],al
  403b4e:	00 00                	add    BYTE PTR [rax],al
  403b50:	d0 03                	rol    BYTE PTR [rbx],1
  403b52:	00 00                	add    BYTE PTR [rax],al
  403b54:	dc e1                	fsubr  st(1),st
  403b56:	ff                   	(bad)  
  403b57:	ff                   	(bad)  
  403b58:	79 01                	jns    403b5b <__GNU_EH_FRAME_HDR+0x4d7>
  403b5a:	00 00                	add    BYTE PTR [rax],al
  403b5c:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  403b5f:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
  403b62:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  403b65:	20 83 03 8e 02 03    	and    BYTE PTR [rbx+0x3028e03],al
  403b6b:	6d                   	ins    DWORD PTR es:[rdi],dx
  403b6c:	01 0e                	add    DWORD PTR [rsi],ecx
  403b6e:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
  403b71:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403b74:	08 00                	or     BYTE PTR [rax],al
  403b76:	00 00                	add    BYTE PTR [rax],al
  403b78:	14 00                	adc    al,0x0
  403b7a:	00 00                	add    BYTE PTR [rax],al
  403b7c:	fc                   	cld    
  403b7d:	03 00                	add    eax,DWORD PTR [rax]
  403b7f:	00 30                	add    BYTE PTR [rax],dh
  403b81:	e3 ff                	jrcxz  403b82 <__GNU_EH_FRAME_HDR+0x4fe>
  403b83:	ff 17                	call   QWORD PTR [rdi]
  403b85:	00 00                	add    BYTE PTR [rax],al
  403b87:	00 00                	add    BYTE PTR [rax],al
  403b89:	41 0e                	rex.B (bad) 
  403b8b:	10 55 0e             	adc    BYTE PTR [rbp+0xe],dl
  403b8e:	08 00                	or     BYTE PTR [rax],al
  403b90:	10 00                	adc    BYTE PTR [rax],al
  403b92:	00 00                	add    BYTE PTR [rax],al
  403b94:	14 04                	adc    al,0x4
  403b96:	00 00                	add    BYTE PTR [rax],al
  403b98:	38 e3                	cmp    bl,ah
  403b9a:	ff                   	(bad)  
  403b9b:	ff 81 00 00 00 00    	inc    DWORD PTR [rcx+0x0]
  403ba1:	00 00                	add    BYTE PTR [rax],al
  403ba3:	00 18                	add    BYTE PTR [rax],bl
  403ba5:	00 00                	add    BYTE PTR [rax],al
  403ba7:	00 28                	add    BYTE PTR [rax],ch
  403ba9:	04 00                	add    al,0x0
  403bab:	00 b4 e3 ff ff d3 01 	add    BYTE PTR [rbx+riz*8+0x1d3ffff],dh
  403bb2:	00 00                	add    BYTE PTR [rax],al
  403bb4:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  403bb7:	10 83 02 03 d1 01    	adc    BYTE PTR [rbx+0x1d10302],al
  403bbd:	0e                   	(bad)  
  403bbe:	08 00                	or     BYTE PTR [rax],al
  403bc0:	38 00                	cmp    BYTE PTR [rax],al
  403bc2:	00 00                	add    BYTE PTR [rax],al
  403bc4:	44 04 00             	rex.R add al,0x0
  403bc7:	00 78 e5             	add    BYTE PTR [rax-0x1b],bh
  403bca:	ff                   	(bad)  
  403bcb:	ff                   	(bad)  
  403bcc:	fe 00                	inc    BYTE PTR [rax]
  403bce:	00 00                	add    BYTE PTR [rax],al
  403bd0:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  403bd3:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403bd6:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403bd9:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  403bdc:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
  403bdf:	30 83 06 8c 05 8d    	xor    BYTE PTR [rbx-0x72fa73fa],al
  403be5:	04 8e                	add    al,0x8e
  403be7:	03 8f 02 02 ec 0e    	add    ecx,DWORD PTR [rdi+0xeec0202]
  403bed:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  403bf0:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  403bf3:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  403bf6:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  403bf9:	08 00                	or     BYTE PTR [rax],al
  403bfb:	00 18                	add    BYTE PTR [rax],bl
  403bfd:	00 00                	add    BYTE PTR [rax],al
  403bff:	00 80 04 00 00 3c    	add    BYTE PTR [rax+0x3c000004],al
  403c05:	e6 ff                	out    0xff,al
  403c07:	ff 07                	inc    DWORD PTR [rdi]
  403c09:	01 00                	add    DWORD PTR [rax],eax
  403c0b:	00 00                	add    BYTE PTR [rax],al
  403c0d:	41 0e                	rex.B (bad) 
  403c0f:	10 83 02 03 01 01    	adc    BYTE PTR [rbx+0x1010302],al
  403c15:	0e                   	(bad)  
  403c16:	08 00                	or     BYTE PTR [rax],al
  403c18:	10 00                	adc    BYTE PTR [rax],al
  403c1a:	00 00                	add    BYTE PTR [rax],al
  403c1c:	9c                   	pushf  
  403c1d:	04 00                	add    al,0x0
  403c1f:	00 30                	add    BYTE PTR [rax],dh
  403c21:	e7 ff                	out    0xff,eax
  403c23:	ff 13                	call   QWORD PTR [rbx]
  403c25:	00 00                	add    BYTE PTR [rax],al
  403c27:	00 00                	add    BYTE PTR [rax],al
  403c29:	00 00                	add    BYTE PTR [rax],al
  403c2b:	00 10                	add    BYTE PTR [rax],dl
  403c2d:	00 00                	add    BYTE PTR [rax],al
  403c2f:	00 b0 04 00 00 3c    	add    BYTE PTR [rax+0x3c000004],dh
  403c35:	e7 ff                	out    0xff,eax
  403c37:	ff 10                	call   QWORD PTR [rax]
  403c39:	00 00                	add    BYTE PTR [rax],al
  403c3b:	00 00                	add    BYTE PTR [rax],al
  403c3d:	00 00                	add    BYTE PTR [rax],al
  403c3f:	00 10                	add    BYTE PTR [rax],dl
  403c41:	00 00                	add    BYTE PTR [rax],al
  403c43:	00 c4                	add    ah,al
  403c45:	04 00                	add    al,0x0
  403c47:	00 38                	add    BYTE PTR [rax],bh
  403c49:	e7 ff                	out    0xff,eax
  403c4b:	ff 0f                	dec    DWORD PTR [rdi]
  403c4d:	00 00                	add    BYTE PTR [rax],al
  403c4f:	00 00                	add    BYTE PTR [rax],al
  403c51:	00 00                	add    BYTE PTR [rax],al
  403c53:	00 10                	add    BYTE PTR [rax],dl
  403c55:	00 00                	add    BYTE PTR [rax],al
  403c57:	00 d8                	add    al,bl
  403c59:	04 00                	add    al,0x0
  403c5b:	00 34 e7             	add    BYTE PTR [rdi+riz*8],dh
  403c5e:	ff                   	(bad)  
  403c5f:	ff 04 00             	inc    DWORD PTR [rax+rax*1]
  403c62:	00 00                	add    BYTE PTR [rax],al
  403c64:	00 00                	add    BYTE PTR [rax],al
	...

0000000000403c68 <__FRAME_END__>:
  403c68:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000404e00 <__frame_dummy_init_array_entry>:
  404e00:	f0 11 40 00          	lock adc DWORD PTR [rax+0x0],eax
  404e04:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000404e08 <__do_global_dtors_aux_fini_array_entry>:
  404e08:	c0 11 40             	rcl    BYTE PTR [rcx],0x40
  404e0b:	00 00                	add    BYTE PTR [rax],al
  404e0d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000404e10 <_DYNAMIC>:
  404e10:	01 00                	add    DWORD PTR [rax],eax
  404e12:	00 00                	add    BYTE PTR [rax],al
  404e14:	00 00                	add    BYTE PTR [rax],al
  404e16:	00 00                	add    BYTE PTR [rax],al
  404e18:	67 00 00             	add    BYTE PTR [eax],al
  404e1b:	00 00                	add    BYTE PTR [rax],al
  404e1d:	00 00                	add    BYTE PTR [rax],al
  404e1f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
  404e22:	00 00                	add    BYTE PTR [rax],al
  404e24:	00 00                	add    BYTE PTR [rax],al
  404e26:	00 00                	add    BYTE PTR [rax],al
  404e28:	00 10                	add    BYTE PTR [rax],dl
  404e2a:	40 00 00             	rex add BYTE PTR [rax],al
  404e2d:	00 00                	add    BYTE PTR [rax],al
  404e2f:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 404e35 <_DYNAMIC+0x25>
  404e35:	00 00                	add    BYTE PTR [rax],al
  404e37:	00 94 23 40 00 00 00 	add    BYTE PTR [rbx+riz*1+0x40],dl
  404e3e:	00 00                	add    BYTE PTR [rax],al
  404e40:	19 00                	sbb    DWORD PTR [rax],eax
  404e42:	00 00                	add    BYTE PTR [rax],al
  404e44:	00 00                	add    BYTE PTR [rax],al
  404e46:	00 00                	add    BYTE PTR [rax],al
  404e48:	00 4e 40             	add    BYTE PTR [rsi+0x40],cl
  404e4b:	00 00                	add    BYTE PTR [rax],al
  404e4d:	00 00                	add    BYTE PTR [rax],al
  404e4f:	00 1b                	add    BYTE PTR [rbx],bl
  404e51:	00 00                	add    BYTE PTR [rax],al
  404e53:	00 00                	add    BYTE PTR [rax],al
  404e55:	00 00                	add    BYTE PTR [rax],al
  404e57:	00 08                	add    BYTE PTR [rax],cl
  404e59:	00 00                	add    BYTE PTR [rax],al
  404e5b:	00 00                	add    BYTE PTR [rax],al
  404e5d:	00 00                	add    BYTE PTR [rax],al
  404e5f:	00 1a                	add    BYTE PTR [rdx],bl
  404e61:	00 00                	add    BYTE PTR [rax],al
  404e63:	00 00                	add    BYTE PTR [rax],al
  404e65:	00 00                	add    BYTE PTR [rax],al
  404e67:	00 08                	add    BYTE PTR [rax],cl
  404e69:	4e                   	rex.WRX
  404e6a:	40 00 00             	rex add BYTE PTR [rax],al
  404e6d:	00 00                	add    BYTE PTR [rax],al
  404e6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  404e72:	00 00                	add    BYTE PTR [rax],al
  404e74:	00 00                	add    BYTE PTR [rax],al
  404e76:	00 00                	add    BYTE PTR [rax],al
  404e78:	08 00                	or     BYTE PTR [rax],al
  404e7a:	00 00                	add    BYTE PTR [rax],al
  404e7c:	00 00                	add    BYTE PTR [rax],al
  404e7e:	00 00                	add    BYTE PTR [rax],al
  404e80:	04 00                	add    al,0x0
  404e82:	00 00                	add    BYTE PTR [rax],al
  404e84:	00 00                	add    BYTE PTR [rax],al
  404e86:	00 00                	add    BYTE PTR [rax],al
  404e88:	a0 03 40 00 00 00 00 	movabs al,ds:0xf500000000004003
  404e8f:	00 f5 
  404e91:	fe                   	(bad)  
  404e92:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  404e95:	00 00                	add    BYTE PTR [rax],al
  404e97:	00 f8                	add    al,bh
  404e99:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  404e9c:	00 00                	add    BYTE PTR [rax],al
  404e9e:	00 00                	add    BYTE PTR [rax],al
  404ea0:	05 00 00 00 00       	add    eax,0x0
  404ea5:	00 00                	add    BYTE PTR [rax],al
  404ea7:	00 b0 05 40 00 00    	add    BYTE PTR [rax+0x4005],dh
  404ead:	00 00                	add    BYTE PTR [rax],al
  404eaf:	00 06                	add    BYTE PTR [rsi],al
  404eb1:	00 00                	add    BYTE PTR [rax],al
  404eb3:	00 00                	add    BYTE PTR [rax],al
  404eb5:	00 00                	add    BYTE PTR [rax],al
  404eb7:	00 18                	add    BYTE PTR [rax],bl
  404eb9:	04 40                	add    al,0x40
  404ebb:	00 00                	add    BYTE PTR [rax],al
  404ebd:	00 00                	add    BYTE PTR [rax],al
  404ebf:	00 0a                	add    BYTE PTR [rdx],cl
  404ec1:	00 00                	add    BYTE PTR [rax],al
  404ec3:	00 00                	add    BYTE PTR [rax],al
  404ec5:	00 00                	add    BYTE PTR [rax],al
  404ec7:	00 a2 00 00 00 00    	add    BYTE PTR [rdx+0x0],ah
  404ecd:	00 00                	add    BYTE PTR [rax],al
  404ecf:	00 0b                	add    BYTE PTR [rbx],cl
  404ed1:	00 00                	add    BYTE PTR [rax],al
  404ed3:	00 00                	add    BYTE PTR [rax],al
  404ed5:	00 00                	add    BYTE PTR [rax],al
  404ed7:	00 18                	add    BYTE PTR [rax],bl
  404ed9:	00 00                	add    BYTE PTR [rax],al
  404edb:	00 00                	add    BYTE PTR [rax],al
  404edd:	00 00                	add    BYTE PTR [rax],al
  404edf:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 404ee5 <_DYNAMIC+0xd5>
	...
  404eed:	00 00                	add    BYTE PTR [rax],al
  404eef:	00 03                	add    BYTE PTR [rbx],al
	...
  404ef9:	50                   	push   rax
  404efa:	40 00 00             	rex add BYTE PTR [rax],al
  404efd:	00 00                	add    BYTE PTR [rax],al
  404eff:	00 02                	add    BYTE PTR [rdx],al
  404f01:	00 00                	add    BYTE PTR [rax],al
  404f03:	00 00                	add    BYTE PTR [rax],al
  404f05:	00 00                	add    BYTE PTR [rax],al
  404f07:	00 50 01             	add    BYTE PTR [rax+0x1],dl
  404f0a:	00 00                	add    BYTE PTR [rax],al
  404f0c:	00 00                	add    BYTE PTR [rax],al
  404f0e:	00 00                	add    BYTE PTR [rax],al
  404f10:	14 00                	adc    al,0x0
  404f12:	00 00                	add    BYTE PTR [rax],al
  404f14:	00 00                	add    BYTE PTR [rax],al
  404f16:	00 00                	add    BYTE PTR [rax],al
  404f18:	07                   	(bad)  
  404f19:	00 00                	add    BYTE PTR [rax],al
  404f1b:	00 00                	add    BYTE PTR [rax],al
  404f1d:	00 00                	add    BYTE PTR [rax],al
  404f1f:	00 17                	add    BYTE PTR [rdi],dl
  404f21:	00 00                	add    BYTE PTR [rax],al
  404f23:	00 00                	add    BYTE PTR [rax],al
  404f25:	00 00                	add    BYTE PTR [rax],al
  404f27:	00 e8                	add    al,ch
  404f29:	06                   	(bad)  
  404f2a:	40 00 00             	rex add BYTE PTR [rax],al
  404f2d:	00 00                	add    BYTE PTR [rax],al
  404f2f:	00 07                	add    BYTE PTR [rdi],al
  404f31:	00 00                	add    BYTE PTR [rax],al
  404f33:	00 00                	add    BYTE PTR [rax],al
  404f35:	00 00                	add    BYTE PTR [rax],al
  404f37:	00 b8 06 40 00 00    	add    BYTE PTR [rax+0x4006],bh
  404f3d:	00 00                	add    BYTE PTR [rax],al
  404f3f:	00 08                	add    BYTE PTR [rax],cl
  404f41:	00 00                	add    BYTE PTR [rax],al
  404f43:	00 00                	add    BYTE PTR [rax],al
  404f45:	00 00                	add    BYTE PTR [rax],al
  404f47:	00 30                	add    BYTE PTR [rax],dh
  404f49:	00 00                	add    BYTE PTR [rax],al
  404f4b:	00 00                	add    BYTE PTR [rax],al
  404f4d:	00 00                	add    BYTE PTR [rax],al
  404f4f:	00 09                	add    BYTE PTR [rcx],cl
  404f51:	00 00                	add    BYTE PTR [rax],al
  404f53:	00 00                	add    BYTE PTR [rax],al
  404f55:	00 00                	add    BYTE PTR [rax],al
  404f57:	00 18                	add    BYTE PTR [rax],bl
  404f59:	00 00                	add    BYTE PTR [rax],al
  404f5b:	00 00                	add    BYTE PTR [rax],al
  404f5d:	00 00                	add    BYTE PTR [rax],al
  404f5f:	00 fe                	add    dh,bh
  404f61:	ff                   	(bad)  
  404f62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  404f65:	00 00                	add    BYTE PTR [rax],al
  404f67:	00 78 06             	add    BYTE PTR [rax+0x6],bh
  404f6a:	40 00 00             	rex add BYTE PTR [rax],al
  404f6d:	00 00                	add    BYTE PTR [rax],al
  404f6f:	00 ff                	add    bh,bh
  404f71:	ff                   	(bad)  
  404f72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  404f75:	00 00                	add    BYTE PTR [rax],al
  404f77:	00 01                	add    BYTE PTR [rcx],al
  404f79:	00 00                	add    BYTE PTR [rax],al
  404f7b:	00 00                	add    BYTE PTR [rax],al
  404f7d:	00 00                	add    BYTE PTR [rax],al
  404f7f:	00 f0                	add    al,dh
  404f81:	ff                   	(bad)  
  404f82:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  404f85:	00 00                	add    BYTE PTR [rax],al
  404f87:	00 52 06             	add    BYTE PTR [rdx+0x6],dl
  404f8a:	40 00 00             	rex add BYTE PTR [rax],al
	...

Disassembly of section .got:

0000000000404ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000405000 <_GLOBAL_OFFSET_TABLE_>:
  405000:	10 4e 40             	adc    BYTE PTR [rsi+0x40],cl
	...
  405017:	00 36                	add    BYTE PTR [rsi],dh
  405019:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  40501c:	00 00                	add    BYTE PTR [rax],al
  40501e:	00 00                	add    BYTE PTR [rax],al
  405020:	46 10 40 00          	rex.RX adc BYTE PTR [rax+0x0],r8b
  405024:	00 00                	add    BYTE PTR [rax],al
  405026:	00 00                	add    BYTE PTR [rax],al
  405028:	56                   	push   rsi
  405029:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  40502c:	00 00                	add    BYTE PTR [rax],al
  40502e:	00 00                	add    BYTE PTR [rax],al
  405030:	66 10 40 00          	data16 adc BYTE PTR [rax+0x0],al
  405034:	00 00                	add    BYTE PTR [rax],al
  405036:	00 00                	add    BYTE PTR [rax],al
  405038:	76 10                	jbe    40504a <_GLOBAL_OFFSET_TABLE_+0x4a>
  40503a:	40 00 00             	rex add BYTE PTR [rax],al
  40503d:	00 00                	add    BYTE PTR [rax],al
  40503f:	00 86 10 40 00 00    	add    BYTE PTR [rsi+0x4010],al
  405045:	00 00                	add    BYTE PTR [rax],al
  405047:	00 96 10 40 00 00    	add    BYTE PTR [rsi+0x4010],dl
  40504d:	00 00                	add    BYTE PTR [rax],al
  40504f:	00 a6 10 40 00 00    	add    BYTE PTR [rsi+0x4010],ah
  405055:	00 00                	add    BYTE PTR [rax],al
  405057:	00 b6 10 40 00 00    	add    BYTE PTR [rsi+0x4010],dh
  40505d:	00 00                	add    BYTE PTR [rax],al
  40505f:	00 c6                	add    dh,al
  405061:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  405064:	00 00                	add    BYTE PTR [rax],al
  405066:	00 00                	add    BYTE PTR [rax],al
  405068:	d6                   	(bad)  
  405069:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  40506c:	00 00                	add    BYTE PTR [rax],al
  40506e:	00 00                	add    BYTE PTR [rax],al
  405070:	e6 10                	out    0x10,al
  405072:	40 00 00             	rex add BYTE PTR [rax],al
  405075:	00 00                	add    BYTE PTR [rax],al
  405077:	00 f6                	add    dh,dh
  405079:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  40507c:	00 00                	add    BYTE PTR [rax],al
  40507e:	00 00                	add    BYTE PTR [rax],al
  405080:	06                   	(bad)  
  405081:	11 40 00             	adc    DWORD PTR [rax+0x0],eax
  405084:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000405090 <__data_start>:
	...

0000000000405098 <__dso_handle>:
	...

00000000004050a0 <blueprint_payload>:
  4050a0:	2e 2e 2e 2e 57       	cs cs cs cs push rdi
  4050a5:	4f                   	rex.WRXB
  4050a6:	4f                   	rex.WRXB
  4050a7:	44 59                	rex.R pop rcx
  4050a9:	2e 2e 2e 2e 0a 0e    	cs cs cs cs or cl,BYTE PTR [rsi]
  4050af:	b8 01 00 00 00       	mov    eax,0x1
  4050b4:	bf 01 00 00 00       	mov    edi,0x1
  4050b9:	48 8d 35 e0 ff ff ff 	lea    rsi,[rip+0xffffffffffffffe0]        # 4050a0 <blueprint_payload>
  4050c0:	ba 0e 00 00 00       	mov    edx,0xe
  4050c5:	0f 05                	syscall 
  4050c7:	48 8d 3c 25 ff ff ff 	lea    rdi,ds:0xffffffffffffffff
  4050ce:	ff 
  4050cf:	be 01 00 00 00       	mov    esi,0x1
  4050d4:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
  4050db:	b9 01 00 00 00       	mov    ecx,0x1
  4050e0:	4c 8d 05 05 00 00 00 	lea    r8,[rip+0x5]        # 4050ec <blueprint_payload+0x4c>
  4050e7:	e9 fd ff ff ff       	jmp    4050e9 <blueprint_payload+0x49>
  4050ec:	e9 fd ff ff ff       	jmp    4050ee <blueprint_payload+0x4e>
	...

0000000000405100 <decrypt_fn>:
  405100:	55                   	push   rbp
  405101:	48 89 e5             	mov    rbp,rsp
  405104:	53                   	push   rbx
  405105:	41 54                	push   r12
  405107:	48 31 c0             	xor    rax,rax
  40510a:	48 31 db             	xor    rbx,rbx
  40510d:	48 39 c8             	cmp    rax,rcx
  405110:	7d 1b                	jge    40512d <decrypt_fn+0x2d>
  405112:	8a 14 02             	mov    dl,BYTE PTR [rdx+rax*1]
  405115:	8a 1c 1f             	mov    bl,BYTE PTR [rdi+rbx*1]
  405118:	30 da                	xor    dl,bl
  40511a:	88 14 02             	mov    BYTE PTR [rdx+rax*1],dl
  40511d:	48 ff c0             	inc    rax
  405120:	48 ff c3             	inc    rbx
  405123:	48 39 f3             	cmp    rbx,rsi
  405126:	7c e5                	jl     40510d <decrypt_fn+0xd>
  405128:	48 31 db             	xor    rbx,rbx
  40512b:	eb e0                	jmp    40510d <decrypt_fn+0xd>
  40512d:	41 5c                	pop    r12
  40512f:	5b                   	pop    rbx
  405130:	5d                   	pop    rbp
  405131:	41 ff e0             	jmp    r8

Disassembly of section .bss:

0000000000405134 <completed.0>:
  405134:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__abi_tag-0x400304>
   a:	74 75                	je     81 <__abi_tag-0x4002fb>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	32 2e                	xor    ch,BYTE PTR [rsi]
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <__TMC_END__+0x75222411>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <__abi_tag-0x4002ec>
  1b:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1e:	32 2e                	xor    ch,BYTE PTR [rsi]
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 31                	and    BYTE PTR [rcx],dh
  25:	32 2e                	xor    ch,BYTE PTR [rsi]
  27:	33 2e                	xor    ebp,DWORD PTR [rsi]
  29:	30 00                	xor    BYTE PTR [rax],al
  2b:	55                   	push   rbp
  2c:	62 75 6e 74 75       	(bad)
  31:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
  34:	61                   	(bad)  
  35:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  36:	67 20 76 65          	and    BYTE PTR [esi+0x65],dh
  3a:	72 73                	jb     af <__abi_tag-0x4002cd>
  3c:	69 6f 6e 20 31 32 2e 	imul   ebp,DWORD PTR [rdi+0x6e],0x2e323120
  43:	30 2e                	xor    BYTE PTR [rsi],ch
  45:	31 2d 31 39 75 62    	xor    DWORD PTR [rip+0x62753931],ebp        # 6275397c <__TMC_END__+0x6234e844>
  4b:	75 6e                	jne    bb <__abi_tag-0x4002c1>
  4d:	74 75                	je     c4 <__abi_tag-0x4002b8>
  4f:	33 00                	xor    eax,DWORD PTR [rax]

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	cc                   	int3   
       1:	05 00 00 04 00       	add    eax,0x40000
       6:	00 00                	add    BYTE PTR [rax],al
       8:	00 00                	add    BYTE PTR [rax],al
       a:	08 01                	or     BYTE PTR [rcx],al
       c:	00 00                	add    BYTE PTR [rax],al
       e:	00 00                	add    BYTE PTR [rax],al
      10:	0c 00                	or     al,0x0
      12:	26 00 00             	es add BYTE PTR [rax],al
      15:	00 00                	add    BYTE PTR [rax],al
      17:	00 00                	add    BYTE PTR [rax],al
      19:	00 5a 00             	add    BYTE PTR [rdx+0x0],bl
      1c:	00 00                	add    BYTE PTR [rax],al
      1e:	00 12                	add    BYTE PTR [rdx],dl
      20:	40 00 00             	rex add BYTE PTR [rax],al
      23:	00 00                	add    BYTE PTR [rax],al
      25:	00 d6                	add    dh,dl
      27:	01 00                	add    DWORD PTR [rax],eax
      29:	00 02                	add    BYTE PTR [rdx],al
      2b:	2f                   	(bad)  
      2c:	00 00                	add    BYTE PTR [rax],al
      2e:	00 02                	add    BYTE PTR [rdx],al
      30:	34 00                	xor    al,0x0
      32:	00 00                	add    BYTE PTR [rax],al
      34:	03 a8 00 00 00 06    	add    ebp,DWORD PTR [rax+0x6000000]
      3a:	01 02                	add    DWORD PTR [rdx],eax
      3c:	40 00 00             	rex add BYTE PTR [rax],al
      3f:	00 04 4b             	add    BYTE PTR [rbx+rcx*2],al
      42:	00 00                	add    BYTE PTR [rax],al
      44:	00 a5 01 00 00 01    	add    BYTE PTR [rbp+0x1000001],ah
      4a:	61                   	(bad)  
      4b:	05 40 01 51 06       	add    eax,0x6510140
      50:	97                   	xchg   edi,eax
      51:	00 00                	add    BYTE PTR [rax],al
      53:	00 f8                	add    al,bh
      55:	00 00                	add    BYTE PTR [rax],al
      57:	00 01                	add    BYTE PTR [rcx],al
      59:	53                   	push   rbx
      5a:	00 06                	add    BYTE PTR [rsi],al
      5c:	c1 00 00             	rol    DWORD PTR [rax],0x0
      5f:	00 12                	add    BYTE PTR [rdx],dl
      61:	01 00                	add    DWORD PTR [rax],eax
      63:	00 01                	add    BYTE PTR [rcx],al
      65:	54                   	push   rsp
      66:	10 06                	adc    BYTE PTR [rsi],al
      68:	ed                   	in     eax,dx
      69:	00 00                	add    BYTE PTR [rax],al
      6b:	00 12                	add    BYTE PTR [rdx],dl
      6d:	01 00                	add    DWORD PTR [rax],eax
      6f:	00 01                	add    BYTE PTR [rcx],al
      71:	55                   	push   rbp
      72:	12 06                	adc    al,BYTE PTR [rsi]
      74:	f7 00 00 00 3a 01    	test   DWORD PTR [rax],0x13a0000
      7a:	00 00                	add    BYTE PTR [rax],al
      7c:	01 56 14             	add    DWORD PTR [rsi+0x14],edx
      7f:	06                   	(bad)  
      80:	17                   	(bad)  
      81:	01 00                	add    DWORD PTR [rax],eax
      83:	00 62 01             	add    BYTE PTR [rdx+0x1],ah
      86:	00 00                	add    BYTE PTR [rax],al
      88:	01 57 18             	add    DWORD PTR [rdi+0x18],edx
      8b:	06                   	(bad)  
      8c:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
      8f:	00 8a 01 00 00 01    	add    BYTE PTR [rdx+0x1000001],cl
      95:	58                   	pop    rax
      96:	20 06                	and    BYTE PTR [rsi],al
      98:	59                   	pop    rcx
      99:	01 00                	add    DWORD PTR [rax],eax
      9b:	00 8a 01 00 00 01    	add    BYTE PTR [rdx+0x1000001],cl
      a1:	59                   	pop    rcx
      a2:	28 06                	sub    BYTE PTR [rsi],al
      a4:	61                   	(bad)  
      a5:	01 00                	add    DWORD PTR [rax],eax
      a7:	00 3a                	add    BYTE PTR [rdx],bh
      a9:	01 00                	add    DWORD PTR [rax],eax
      ab:	00 01                	add    BYTE PTR [rcx],al
      ad:	5a                   	pop    rdx
      ae:	30 06                	xor    BYTE PTR [rsi],al
      b0:	69 01 00 00 12 01    	imul   eax,DWORD PTR [rcx],0x1120000
      b6:	00 00                	add    BYTE PTR [rax],al
      b8:	01 5b 34             	add    DWORD PTR [rbx+0x34],ebx
      bb:	06                   	(bad)  
      bc:	72 01                	jb     bf <__abi_tag-0x4002bd>
      be:	00 00                	add    BYTE PTR [rax],al
      c0:	12 01                	adc    al,BYTE PTR [rcx]
      c2:	00 00                	add    BYTE PTR [rax],al
      c4:	01 5c 36 06          	add    DWORD PTR [rsi+rsi*1+0x6],ebx
      c8:	7e 01                	jle    cb <__abi_tag-0x4002b1>
      ca:	00 00                	add    BYTE PTR [rax],al
      cc:	12 01                	adc    al,BYTE PTR [rcx]
      ce:	00 00                	add    BYTE PTR [rax],al
      d0:	01 5d 38             	add    DWORD PTR [rbp+0x38],ebx
      d3:	06                   	(bad)  
      d4:	86 01                	xchg   BYTE PTR [rcx],al
      d6:	00 00                	add    BYTE PTR [rax],al
      d8:	12 01                	adc    al,BYTE PTR [rcx]
      da:	00 00                	add    BYTE PTR [rax],al
      dc:	01 5e 3a             	add    DWORD PTR [rsi+0x3a],ebx
      df:	06                   	(bad)  
      e0:	92                   	xchg   edx,eax
      e1:	01 00                	add    DWORD PTR [rax],eax
      e3:	00 12                	add    BYTE PTR [rdx],dl
      e5:	01 00                	add    DWORD PTR [rax],eax
      e7:	00 01                	add    BYTE PTR [rcx],al
      e9:	5f                   	pop    rdi
      ea:	3c 06                	cmp    al,0x6
      ec:	9a                   	(bad)  
      ed:	01 00                	add    DWORD PTR [rax],eax
      ef:	00 12                	add    BYTE PTR [rdx],dl
      f1:	01 00                	add    DWORD PTR [rax],eax
      f3:	00 01                	add    BYTE PTR [rcx],al
      f5:	60                   	(bad)  
      f6:	3e 00 07             	ds add BYTE PTR [rdi],al
      f9:	04 01                	add    al,0x1
      fb:	00 00                	add    BYTE PTR [rax],al
      fd:	08 0b                	or     BYTE PTR [rbx],cl
      ff:	01 00                	add    DWORD PTR [rax],eax
     101:	00 10                	add    BYTE PTR [rax],dl
     103:	00 03                	add    BYTE PTR [rbx],al
     105:	9f                   	lahf   
     106:	00 00                	add    BYTE PTR [rax],al
     108:	00 08                	add    BYTE PTR [rax],cl
     10a:	01 09                	add    DWORD PTR [rcx],ecx
     10c:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     10d:	00 00                	add    BYTE PTR [rax],al
     10f:	00 08                	add    BYTE PTR [rax],cl
     111:	07                   	(bad)  
     112:	04 1d                	add    al,0x1d
     114:	01 00                	add    DWORD PTR [rax],eax
     116:	00 e2                	add    dl,ah
     118:	00 00                	add    BYTE PTR [rax],al
     11a:	00 01                	add    BYTE PTR [rcx],al
     11c:	1c 04                	sbb    al,0x4
     11e:	28 01                	sub    BYTE PTR [rcx],al
     120:	00 00                	add    BYTE PTR [rax],al
     122:	d9 00                	fld    DWORD PTR [rax]
     124:	00 00                	add    BYTE PTR [rax],al
     126:	03 19                	add    ebx,DWORD PTR [rcx]
     128:	04 33                	add    al,0x33
     12a:	01 00                	add    DWORD PTR [rax],eax
     12c:	00 d7                	add    bh,dl
     12e:	00 00                	add    BYTE PTR [rax],al
     130:	00 02                	add    BYTE PTR [rdx],al
     132:	28 03                	sub    BYTE PTR [rbx],al
     134:	c8 00 00 00          	enter  0x0,0x0
     138:	07                   	(bad)  
     139:	02 04 45 01 00 00 0c 	add    al,BYTE PTR [rax*2+0xc000001]
     140:	01 00                	add    DWORD PTR [rax],eax
     142:	00 01                	add    BYTE PTR [rcx],al
     144:	21 04 50             	and    DWORD PTR [rax+rdx*2],eax
     147:	01 00                	add    DWORD PTR [rax],eax
     149:	00 03                	add    BYTE PTR [rbx],al
     14b:	01 00                	add    DWORD PTR [rax],eax
     14d:	00 03                	add    BYTE PTR [rbx],al
     14f:	1a 04 5b             	sbb    al,BYTE PTR [rbx+rbx*2]
     152:	01 00                	add    DWORD PTR [rax],eax
     154:	00 01                	add    BYTE PTR [rcx],al
     156:	01 00                	add    DWORD PTR [rax],eax
     158:	00 02                	add    BYTE PTR [rdx],al
     15a:	2a 03                	sub    al,BYTE PTR [rbx]
     15c:	24 01                	and    al,0x1
     15e:	00 00                	add    BYTE PTR [rax],al
     160:	07                   	(bad)  
     161:	04 04                	add    al,0x4
     163:	6d                   	ins    DWORD PTR es:[rdi],dx
     164:	01 00                	add    DWORD PTR [rax],eax
     166:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
     169:	00 00                	add    BYTE PTR [rax],al
     16b:	01 2c 04             	add    DWORD PTR [rsp+rax*1],ebp
     16e:	78 01                	js     171 <__abi_tag-0x40020b>
     170:	00 00                	add    BYTE PTR [rax],al
     172:	33 01                	xor    eax,DWORD PTR [rcx]
     174:	00 00                	add    BYTE PTR [rax],al
     176:	03 1b                	add    ebx,DWORD PTR [rbx]
     178:	04 83                	add    al,0x83
     17a:	01 00                	add    DWORD PTR [rax],eax
     17c:	00 31                	add    BYTE PTR [rcx],dh
     17e:	01 00                	add    DWORD PTR [rax],eax
     180:	00 02                	add    BYTE PTR [rdx],al
     182:	2d 03 1f 01 00       	sub    eax,0x11f03
     187:	00 07                	add    BYTE PTR [rdi],al
     189:	08 04 6d 01 00 00 4f 	or     BYTE PTR [rbp*2+0x4f000001],al
     190:	01 00                	add    DWORD PTR [rax],eax
     192:	00 01                	add    BYTE PTR [rcx],al
     194:	30 0a                	xor    BYTE PTR [rdx],cl
     196:	0b 00                	or     eax,DWORD PTR [rax]
     198:	12 40 00             	adc    al,BYTE PTR [rax+0x0]
     19b:	00 00                	add    BYTE PTR [rax],al
     19d:	00 00                	add    BYTE PTR [rax],al
     19f:	6c                   	ins    BYTE PTR es:[rdi],dx
     1a0:	00 00                	add    BYTE PTR [rax],al
     1a2:	00 01                	add    BYTE PTR [rcx],al
     1a4:	57                   	push   rdi
     1a5:	89 02                	mov    DWORD PTR [rdx],eax
     1a7:	00 00                	add    BYTE PTR [rax],al
     1a9:	0c 00                	or     al,0x0
     1ab:	00 00                	add    BYTE PTR [rax],al
     1ad:	00 95 02 00 00 0c    	add    BYTE PTR [rbp+0xc000002],dl
     1b3:	5c                   	pop    rsp
     1b4:	00 00                	add    BYTE PTR [rax],al
     1b6:	00 a0 02 00 00 0d    	add    BYTE PTR [rax+0xd000002],ah
     1bc:	95                   	xchg   ebp,eax
     1bd:	00 00                	add    BYTE PTR [rax],al
     1bf:	00 ab 02 00 00 0e    	add    BYTE PTR [rbx+0xe000002],ch
     1c5:	06                   	(bad)  
     1c6:	02 00                	add    al,BYTE PTR [rax]
     1c8:	00 14 12             	add    BYTE PTR [rdx+rdx*1],dl
     1cb:	40 00 00             	rex add BYTE PTR [rax],al
     1ce:	00 00                	add    BYTE PTR [rax],al
     1d0:	00 0f                	add    BYTE PTR [rdi],cl
     1d2:	01 54 01 30          	add    DWORD PTR [rcx+rax*1+0x30],edx
     1d6:	00 0e                	add    BYTE PTR [rsi],cl
     1d8:	2e 02 00             	cs add al,BYTE PTR [rax]
     1db:	00 29                	add    BYTE PTR [rcx],ch
     1dd:	12 40 00             	adc    al,BYTE PTR [rax+0x0]
     1e0:	00 00                	add    BYTE PTR [rax],al
     1e2:	00 00                	add    BYTE PTR [rax],al
     1e4:	0f 01 54 02 7e       	lgdt   [rdx+rax*1+0x7e]
     1e9:	00 0f                	add    BYTE PTR [rdi],cl
     1eb:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
     1ee:	7e 08                	jle    1f8 <__abi_tag-0x400184>
     1f0:	00 0e                	add    BYTE PTR [rsi],cl
     1f2:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
     1f5:	00 62 12             	add    BYTE PTR [rdx+0x12],ah
     1f8:	40 00 00             	rex add BYTE PTR [rax],al
     1fb:	00 00                	add    BYTE PTR [rax],al
     1fd:	00 0f                	add    BYTE PTR [rdi],cl
     1ff:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
     202:	73 00                	jae    204 <__abi_tag-0x400178>
     204:	00 00                	add    BYTE PTR [rax],al
     206:	10 b0 01 00 00 05    	adc    BYTE PTR [rax+0x5000001],dh
     20c:	b5 1d                	mov    ch,0x1d
     20e:	02 00                	add    al,BYTE PTR [rax]
     210:	00 11                	add    BYTE PTR [rcx],dl
     212:	24 02                	and    al,0x2
     214:	00 00                	add    BYTE PTR [rax],al
     216:	11 1d 02 00 00 12    	adc    DWORD PTR [rip+0x12000002],ebx        # 1200021e <__TMC_END__+0x11bfb0e6>
     21c:	00 03                	add    BYTE PTR [rbx],al
     21e:	2d 01 00 00 05       	sub    eax,0x5000001
     223:	04 02                	add    al,0x2
     225:	29 02                	sub    DWORD PTR [rdx],eax
     227:	00 00                	add    BYTE PTR [rax],al
     229:	13 34 00             	adc    esi,DWORD PTR [rax+rax*1]
     22c:	00 00                	add    BYTE PTR [rax],al
     22e:	10 b5 01 00 00 06    	adc    BYTE PTR [rbp+0x6000001],dh
     234:	0b 1d 02 00 00 11    	or     ebx,DWORD PTR [rip+0x11000002]        # 1100023c <__TMC_END__+0x10bfb104>
     23a:	1d 02 00 00 11       	sbb    eax,0x11000002
     23f:	2a 00                	sub    al,BYTE PTR [rax]
     241:	00 00                	add    BYTE PTR [rax],al
     243:	11 49 02             	adc    DWORD PTR [rcx+0x2],ecx
     246:	00 00                	add    BYTE PTR [rax],al
     248:	00 02                	add    BYTE PTR [rdx],al
     24a:	83 01 00             	add    DWORD PTR [rcx],0x0
     24d:	00 14 bf             	add    BYTE PTR [rdi+rdi*4],dl
     250:	01 00                	add    DWORD PTR [rax],eax
     252:	00 07                	add    BYTE PTR [rdi],al
     254:	66 01 1d 02 00 00 11 	add    WORD PTR [rip+0x11000002],bx        # 1100025d <__TMC_END__+0x10bfb125>
     25b:	1d 02 00 00 00       	sbb    eax,0x2
     260:	15 70 12 40 00       	adc    eax,0x401270
     265:	00 00                	add    BYTE PTR [rax],al
     267:	00 00                	add    BYTE PTR [rax],al
     269:	52                   	push   rdx
     26a:	00 00                	add    BYTE PTR [rax],al
     26c:	00 01                	add    BYTE PTR [rcx],al
     26e:	57                   	push   rdi
     26f:	da 02                	fiadd  DWORD PTR [rdx]
     271:	00 00                	add    BYTE PTR [rax],al
     273:	04 13                	add    al,0x13
     275:	1d 02 00 00 16       	sbb    eax,0x16000002
     27a:	f1                   	int1   
     27b:	00 00                	add    BYTE PTR [rax],al
     27d:	00 f0                	add    al,dh
     27f:	02 00                	add    al,BYTE PTR [rax]
     281:	00 04 13             	add    BYTE PTR [rbx+rdx*1],al
     284:	3b 00                	cmp    eax,DWORD PTR [rax]
     286:	00 00                	add    BYTE PTR [rax],al
     288:	00 17                	add    BYTE PTR [rdi],dl
     28a:	c5 01 00             	(bad)
     28d:	00 04 05 1d 02 00 00 	add    BYTE PTR [rax*1+0x21d],al
     294:	01 18                	add    DWORD PTR [rax],ebx
     296:	7b 02                	jnp    29a <__abi_tag-0x4000e2>
     298:	00 00                	add    BYTE PTR [rax],al
     29a:	04 05                	add    al,0x5
     29c:	b7 02                	mov    bh,0x2
     29e:	00 00                	add    BYTE PTR [rax],al
     2a0:	18 7f 02             	sbb    BYTE PTR [rdi+0x2],bh
     2a3:	00 00                	add    BYTE PTR [rax],al
     2a5:	04 05                	add    al,0x5
     2a7:	2a 00                	sub    al,BYTE PTR [rax]
     2a9:	00 00                	add    BYTE PTR [rax],al
     2ab:	19 ba 01 00 00 04    	sbb    DWORD PTR [rdx+0x4000001],edi
     2b1:	06                   	(bad)  
     2b2:	1d 02 00 00 00       	sbb    eax,0x2
     2b7:	02 bc 02 00 00 04 c7 	add    bh,BYTE PTR [rdx+rax*1-0x38fc0000]
     2be:	02 00                	add    al,BYTE PTR [rax]
     2c0:	00 79 02             	add    BYTE PTR [rcx+0x2],bh
     2c3:	00 00                	add    BYTE PTR [rax],al
     2c5:	08 2f                	or     BYTE PTR [rdi],ch
     2c7:	05 40 08 26 06       	add    eax,0x6260840
     2cc:	ca 01 00             	retf   0x1
     2cf:	00 2c 03             	add    BYTE PTR [rbx+rax*1],ch
     2d2:	00 00                	add    BYTE PTR [rax],al
     2d4:	08 27                	or     BYTE PTR [rdi],ah
     2d6:	00 06                	add    BYTE PTR [rsi],al
     2d8:	dd 01                	fld    QWORD PTR [rcx]
     2da:	00 00                	add    BYTE PTR [rax],al
     2dc:	47 03 00             	rex.RXB add r8d,DWORD PTR [r8]
     2df:	00 08                	add    BYTE PTR [rax],cl
     2e1:	28 08                	sub    BYTE PTR [rax],cl
     2e3:	06                   	(bad)  
     2e4:	ea                   	(bad)  
     2e5:	01 00                	add    DWORD PTR [rax],eax
     2e7:	00 2c 03             	add    BYTE PTR [rbx+rax*1],ch
     2ea:	00 00                	add    BYTE PTR [rax],al
     2ec:	08 29                	or     BYTE PTR [rcx],ch
     2ee:	10 06                	adc    BYTE PTR [rsi],al
     2f0:	e6 01                	out    0x1,al
     2f2:	00 00                	add    BYTE PTR [rax],al
     2f4:	47 03 00             	rex.RXB add r8d,DWORD PTR [r8]
     2f7:	00 08                	add    BYTE PTR [rax],cl
     2f9:	2a 18                	sub    bl,BYTE PTR [rax]
     2fb:	06                   	(bad)  
     2fc:	f6 01 00             	test   BYTE PTR [rcx],0x0
     2ff:	00 2c 03             	add    BYTE PTR [rbx+rax*1],ch
     302:	00 00                	add    BYTE PTR [rax],al
     304:	08 2b                	or     BYTE PTR [rbx],ch
     306:	20 06                	and    BYTE PTR [rsi],al
     308:	f2 01 00             	repnz add DWORD PTR [rax],eax
     30b:	00 47 03             	add    BYTE PTR [rdi+0x3],al
     30e:	00 00                	add    BYTE PTR [rax],al
     310:	08 2c 28             	or     BYTE PTR [rax+rbp*1],ch
     313:	06                   	(bad)  
     314:	e0 02                	loopne 318 <__abi_tag-0x400064>
     316:	00 00                	add    BYTE PTR [rax],al
     318:	3b 00                	cmp    eax,DWORD PTR [rax]
     31a:	00 00                	add    BYTE PTR [rax],al
     31c:	08 2d 30 06 3c 04    	or     BYTE PTR [rip+0x43c0630],ch        # 43c0952 <__TMC_END__+0x3fbb81a>
     322:	00 00                	add    BYTE PTR [rax],al
     324:	52                   	push   rdx
     325:	03 00                	add    eax,DWORD PTR [rax]
     327:	00 08                	add    BYTE PTR [rax],cl
     329:	2e 38 00             	cs cmp BYTE PTR [rax],al
     32c:	02 31                	add    dh,BYTE PTR [rcx]
     32e:	03 00                	add    eax,DWORD PTR [rax]
     330:	00 04 3c             	add    BYTE PTR [rsp+rdi*1],al
     333:	03 00                	add    eax,DWORD PTR [rax]
     335:	00 d5                	add    ch,dl
     337:	01 00                	add    DWORD PTR [rax],eax
     339:	00 03                	add    BYTE PTR [rbx],al
     33b:	18 04 04             	sbb    BYTE PTR [rsp+rax*1],al
     33e:	01 00                	add    DWORD PTR [rax],eax
     340:	00 d3                	add    bl,dl
     342:	01 00                	add    DWORD PTR [rax],eax
     344:	00 02                	add    BYTE PTR [rdx],al
     346:	26 04 83             	es add al,0x83
     349:	01 00                	add    DWORD PTR [rax],eax
     34b:	00 dd                	add    ch,bl
     34d:	04 00                	add    al,0x0
     34f:	00 09                	add    BYTE PTR [rcx],cl
     351:	2e 02 57 03          	cs add dl,BYTE PTR [rdi+0x3]
     355:	00 00                	add    BYTE PTR [rax],al
     357:	04 62                	add    al,0x62
     359:	03 00                	add    eax,DWORD PTR [rax]
     35b:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
     35e:	00 00                	add    BYTE PTR [rax],al
     360:	08 24 1a             	or     BYTE PTR [rdx+rbx*1],ah
     363:	66 02 00             	data16 add al,BYTE PTR [rax]
     366:	00 10                	add    BYTE PTR [rax],dl
     368:	08 21                	or     BYTE PTR [rcx],ah
     36a:	06                   	(bad)  
     36b:	fa                   	cli    
     36c:	01 00                	add    DWORD PTR [rax],eax
     36e:	00 83 03 00 00 08    	add    BYTE PTR [rbx+0x8000003],al
     374:	22 00                	and    al,BYTE PTR [rax]
     376:	06                   	(bad)  
     377:	61                   	(bad)  
     378:	02 00                	add    al,BYTE PTR [rax]
     37a:	00 0d 04 00 00 08    	add    BYTE PTR [rip+0x8000004],cl        # 8000384 <__TMC_END__+0x7bfb24c>
     380:	23 08                	and    ecx,DWORD PTR [rax]
     382:	00 02                	add    BYTE PTR [rdx],al
     384:	88 03                	mov    BYTE PTR [rbx],al
     386:	00 00                	add    BYTE PTR [rax],al
     388:	1b 94 03 00 00 56 02 	sbb    edx,DWORD PTR [rbx+rax*1+0x2560000]
     38f:	00 00                	add    BYTE PTR [rax],al
     391:	01 bb 02 1c 38 01    	add    DWORD PTR [rbx+0x1381c02],edi
     397:	b1 02                	mov    cl,0x2
     399:	1d 09 02 00 00       	sbb    eax,0x209
     39e:	3a 01                	cmp    al,BYTE PTR [rcx]
     3a0:	00 00                	add    BYTE PTR [rax],al
     3a2:	01 b3 02 00 1d 10    	add    DWORD PTR [rbx+0x101d0002],esi
     3a8:	02 00                	add    al,BYTE PTR [rax]
     3aa:	00 3a                	add    BYTE PTR [rdx],bh
     3ac:	01 00                	add    DWORD PTR [rax],eax
     3ae:	00 01                	add    BYTE PTR [rcx],al
     3b0:	b4 02                	mov    ah,0x2
     3b2:	04 1d                	add    al,0x1d
     3b4:	18 02                	sbb    BYTE PTR [rdx],al
     3b6:	00 00                	add    BYTE PTR [rax],al
     3b8:	8a 01                	mov    al,BYTE PTR [rcx]
     3ba:	00 00                	add    BYTE PTR [rax],al
     3bc:	01 b5 02 08 1d 21    	add    DWORD PTR [rbp+0x211d0802],esi
     3c2:	02 00                	add    al,BYTE PTR [rax]
     3c4:	00 62 01             	add    BYTE PTR [rdx+0x1],ah
     3c7:	00 00                	add    BYTE PTR [rax],al
     3c9:	01 b6 02 10 1d 29    	add    DWORD PTR [rsi+0x291d1002],esi
     3cf:	02 00                	add    al,BYTE PTR [rax]
     3d1:	00 62 01             	add    BYTE PTR [rdx+0x1],ah
     3d4:	00 00                	add    BYTE PTR [rax],al
     3d6:	01 b7 02 18 1d 31    	add    DWORD PTR [rdi+0x311d1802],esi
     3dc:	02 00                	add    al,BYTE PTR [rax]
     3de:	00 02                	add    BYTE PTR [rdx],al
     3e0:	04 00                	add    al,0x0
     3e2:	00 01                	add    BYTE PTR [rcx],al
     3e4:	b8 02 20 1d 46       	mov    eax,0x461d2002
     3e9:	02 00                	add    al,BYTE PTR [rax]
     3eb:	00 02                	add    BYTE PTR [rdx],al
     3ed:	04 00                	add    al,0x0
     3ef:	00 01                	add    BYTE PTR [rcx],al
     3f1:	b9 02 28 1d 4e       	mov    ecx,0x4e1d2802
     3f6:	02 00                	add    al,BYTE PTR [rax]
     3f8:	00 02                	add    BYTE PTR [rdx],al
     3fa:	04 00                	add    al,0x0
     3fc:	00 01                	add    BYTE PTR [rcx],al
     3fe:	ba 02 30 00 04       	mov    edx,0x4003002
     403:	6d                   	ins    DWORD PTR es:[rdi],dx
     404:	01 00                	add    DWORD PTR [rax],eax
     406:	00 3a                	add    BYTE PTR [rdx],bh
     408:	02 00                	add    al,BYTE PTR [rax]
     40a:	00 01                	add    BYTE PTR [rcx],al
     40c:	27                   	(bad)  
     40d:	02 62 03             	add    ah,BYTE PTR [rdx+0x3]
     410:	00 00                	add    BYTE PTR [rax],al
     412:	15 d0 12 40 00       	adc    eax,0x4012d0
     417:	00 00                	add    BYTE PTR [rax],al
     419:	00 00                	add    BYTE PTR [rax],al
     41b:	06                   	(bad)  
     41c:	01 00                	add    DWORD PTR [rax],eax
     41e:	00 01                	add    BYTE PTR [rcx],al
     420:	57                   	push   rdi
     421:	eb 02                	jmp    425 <__abi_tag-0x3fff57>
     423:	00 00                	add    BYTE PTR [rax],al
     425:	04 2c                	add    al,0x2c
     427:	1d 02 00 00 16       	sbb    eax,0x16000002
     42c:	27                   	(bad)  
     42d:	01 00                	add    DWORD PTR [rax],eax
     42f:	00 fa                	add    dl,bh
     431:	02 00                	add    al,BYTE PTR [rax]
     433:	00 04 2c             	add    BYTE PTR [rsp+rbp*1],al
     436:	1d 02 00 00 16       	sbb    eax,0x16000002
     43b:	89 01                	mov    DWORD PTR [rcx],eax
     43d:	00 00                	add    BYTE PTR [rax],al
     43f:	7f 02                	jg     443 <__abi_tag-0x3fff39>
     441:	00 00                	add    BYTE PTR [rax],al
     443:	04 2c                	add    al,0x2c
     445:	2a 00                	sub    al,BYTE PTR [rax]
     447:	00 00                	add    BYTE PTR [rax],al
     449:	1e                   	(bad)  
     44a:	02 91 00 7b 02 00    	add    dl,BYTE PTR [rcx+0x27b00]
     450:	00 04 2d bc 02 00 00 	add    BYTE PTR [rbp*1+0x2bc],al
     457:	1f                   	(bad)  
     458:	89 02                	mov    DWORD PTR [rdx],eax
     45a:	00 00                	add    BYTE PTR [rax],al
     45c:	00 00                	add    BYTE PTR [rax],al
     45e:	00 00                	add    BYTE PTR [rax],al
     460:	04 33                	add    al,0x33
     462:	07                   	(bad)  
     463:	0c 01                	or     al,0x1
     465:	02 00                	add    al,BYTE PTR [rax]
     467:	00 95 02 00 00 0c    	add    BYTE PTR [rbp+0xc000002],dl
     46d:	4a 02 00             	rex.WX add al,BYTE PTR [rax]
     470:	00 a0 02 00 00 0d    	add    BYTE PTR [rax+0xd000002],ah
     476:	6d                   	ins    DWORD PTR es:[rdi],dx
     477:	02 00                	add    al,BYTE PTR [rax]
     479:	00 ab 02 00 00 00    	add    BYTE PTR [rbx+0x2],ch
     47f:	0e                   	(bad)  
     480:	06                   	(bad)  
     481:	02 00                	add    al,BYTE PTR [rax]
     483:	00 fd                	add    ch,bh
     485:	12 40 00             	adc    al,BYTE PTR [rax+0x0]
     488:	00 00                	add    BYTE PTR [rax],al
     48a:	00 00                	add    BYTE PTR [rax],al
     48c:	0f 01 54 01 30       	lgdt   [rcx+rax*1+0x30]
     491:	00 0e                	add    BYTE PTR [rsi],cl
     493:	2e 02 00             	cs add al,BYTE PTR [rax]
     496:	00 13                	add    BYTE PTR [rbx],dl
     498:	13 40 00             	adc    eax,DWORD PTR [rax+0x0]
     49b:	00 00                	add    BYTE PTR [rax],al
     49d:	00 00                	add    BYTE PTR [rax],al
     49f:	0f 01 54 02 91       	lgdt   [rdx+rax*1-0x6f]
     4a4:	00 0f                	add    BYTE PTR [rdi],cl
     4a6:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
     4a9:	91                   	xchg   ecx,eax
     4aa:	08 00                	or     BYTE PTR [rax],al
     4ac:	0e                   	(bad)  
     4ad:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
     4b0:	00 4b 13             	add    BYTE PTR [rbx+0x13],cl
     4b3:	40 00 00             	rex add BYTE PTR [rax],al
     4b6:	00 00                	add    BYTE PTR [rax],al
     4b8:	00 0f                	add    BYTE PTR [rdi],cl
     4ba:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
     4bd:	73 00                	jae    4bf <__abi_tag-0x3ffebd>
     4bf:	00 20                	add    BYTE PTR [rax],ah
     4c1:	60                   	(bad)  
     4c2:	02 00                	add    al,BYTE PTR [rax]
     4c4:	00 59 13             	add    BYTE PTR [rcx+0x13],bl
     4c7:	40 00 00             	rex add BYTE PTR [rax],al
     4ca:	00 00                	add    BYTE PTR [rax],al
     4cc:	00 0e                	add    BYTE PTR [rsi],cl
     4ce:	3f                   	(bad)  
     4cf:	05 00 00 6c 13       	add    eax,0x136c0000
     4d4:	40 00 00             	rex add BYTE PTR [rax],al
     4d7:	00 00                	add    BYTE PTR [rax],al
     4d9:	00 0f                	add    BYTE PTR [rdi],cl
     4db:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
     4de:	91                   	xchg   ecx,eax
     4df:	00 00                	add    BYTE PTR [rax],al
     4e1:	20 55 05             	and    BYTE PTR [rbp+0x5],dl
     4e4:	00 00                	add    BYTE PTR [rax],al
     4e6:	7b 13                	jnp    4fb <__abi_tag-0x3ffe81>
     4e8:	40 00 00             	rex add BYTE PTR [rax],al
     4eb:	00 00                	add    BYTE PTR [rax],al
     4ed:	00 0e                	add    BYTE PTR [rsi],cl
     4ef:	8b 05 00 00 88 13    	mov    eax,DWORD PTR [rip+0x13880000]        # 138804f5 <__TMC_END__+0x1347b3bd>
     4f5:	40 00 00             	rex add BYTE PTR [rax],al
     4f8:	00 00                	add    BYTE PTR [rax],al
     4fa:	00 0f                	add    BYTE PTR [rdi],cl
     4fc:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
     4ff:	91                   	xchg   ecx,eax
     500:	00 00                	add    BYTE PTR [rax],al
     502:	0e                   	(bad)  
     503:	9c                   	pushf  
     504:	05 00 00 a2 13       	add    eax,0x13a20000
     509:	40 00 00             	rex add BYTE PTR [rax],al
     50c:	00 00                	add    BYTE PTR [rax],al
     50e:	00 0f                	add    BYTE PTR [rdi],cl
     510:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
     513:	91                   	xchg   ecx,eax
     514:	00 00                	add    BYTE PTR [rax],al
     516:	0e                   	(bad)  
     517:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     518:	05 00 00 b8 13       	add    eax,0x13b80000
     51d:	40 00 00             	rex add BYTE PTR [rax],al
     520:	00 00                	add    BYTE PTR [rax],al
     522:	00 0f                	add    BYTE PTR [rdi],cl
     524:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
     527:	73 00                	jae    529 <__abi_tag-0x3ffe53>
     529:	00 0e                	add    BYTE PTR [rsi],cl
     52b:	be 05 00 00 c0       	mov    esi,0xc0000005
     530:	13 40 00             	adc    eax,DWORD PTR [rax+0x0]
     533:	00 00                	add    BYTE PTR [rax],al
     535:	00 00                	add    BYTE PTR [rax],al
     537:	0f 01 55 02          	lgdt   [rbp+0x2]
     53b:	73 00                	jae    53d <__abi_tag-0x3ffe3f>
     53d:	00 00                	add    BYTE PTR [rax],al
     53f:	10 82 02 00 00 06    	adc    BYTE PTR [rdx+0x6000002],al
     545:	0d 1d 02 00 00       	or     eax,0x21d
     54a:	11 50 05             	adc    DWORD PTR [rax+0x5],edx
     54d:	00 00                	add    BYTE PTR [rax],al
     54f:	00 02                	add    BYTE PTR [rdx],al
     551:	c7 02 00 00 10 98    	mov    DWORD PTR [rdx],0x98100000
     557:	02 00                	add    al,BYTE PTR [rax]
     559:	00 06                	add    BYTE PTR [rsi],al
     55b:	1d 95 01 00 00       	sbb    eax,0x195
     560:	11 6b 05             	adc    DWORD PTR [rbx+0x5],ebp
     563:	00 00                	add    BYTE PTR [rax],al
     565:	11 75 05             	adc    DWORD PTR [rbp+0x5],esi
     568:	00 00                	add    BYTE PTR [rax],al
     56a:	00 02                	add    BYTE PTR [rdx],al
     56c:	70 05                	jo     573 <__abi_tag-0x3ffe09>
     56e:	00 00                	add    BYTE PTR [rax],al
     570:	13 62 03             	adc    esp,DWORD PTR [rdx+0x3]
     573:	00 00                	add    BYTE PTR [rax],al
     575:	02 7a 05             	add    bh,BYTE PTR [rdx+0x5]
     578:	00 00                	add    BYTE PTR [rax],al
     57a:	21 1d 02 00 00 11    	and    DWORD PTR [rip+0x11000002],ebx        # 11000582 <__TMC_END__+0x10bfb44a>
     580:	85 05 00 00 00 02    	test   DWORD PTR [rip+0x2000000],eax        # 2000586 <__TMC_END__+0x1bfb44e>
     586:	8a 05 00 00 22 10    	mov    al,BYTE PTR [rip+0x10220000]        # 1022058c <__TMC_END__+0xfe1b454>
     58c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     58d:	02 00                	add    al,BYTE PTR [rax]
     58f:	00 06                	add    BYTE PTR [rsi],al
     591:	0f 1d 02             	nop    DWORD PTR [rdx]
     594:	00 00                	add    BYTE PTR [rax],al
     596:	11 50 05             	adc    DWORD PTR [rax+0x5],edx
     599:	00 00                	add    BYTE PTR [rax],al
     59b:	00 10                	add    BYTE PTR [rax],dl
     59d:	af                   	scas   eax,DWORD PTR es:[rdi]
     59e:	02 00                	add    al,BYTE PTR [rax]
     5a0:	00 06                	add    BYTE PTR [rsi],al
     5a2:	25 1d 02 00 00       	and    eax,0x21d
     5a7:	11 50 05             	adc    DWORD PTR [rax+0x5],edx
     5aa:	00 00                	add    BYTE PTR [rax],al
     5ac:	00 10                	add    BYTE PTR [rax],dl
     5ae:	bd 02 00 00 06       	mov    ebp,0x6000002
     5b3:	1f                   	(bad)  
     5b4:	95                   	xchg   ebp,eax
     5b5:	01 00                	add    DWORD PTR [rax],eax
     5b7:	00 11                	add    BYTE PTR [rcx],dl
     5b9:	50                   	push   rax
     5ba:	05 00 00 00 10       	add    eax,0x10000000
     5bf:	cc                   	int3   
     5c0:	02 00                	add    al,BYTE PTR [rax]
     5c2:	00 06                	add    BYTE PTR [rsi],al
     5c4:	23 1d 02 00 00 11    	and    ebx,DWORD PTR [rip+0x11000002]        # 110005cc <__TMC_END__+0x10bfb494>
     5ca:	50                   	push   rax
     5cb:	05 00 00 00 00       	add    eax,0x0
     5d0:	e9 04 00 00 04       	jmp    40005d9 <__TMC_END__+0x3bfb4a1>
     5d5:	00 a0 01 00 00 08    	add    BYTE PTR [rax+0x8000001],ah
     5db:	01 00                	add    DWORD PTR [rax],eax
     5dd:	00 00                	add    BYTE PTR [rax],al
     5df:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
     5e2:	fd                   	std    
     5e3:	02 00                	add    al,BYTE PTR [rax]
     5e5:	00 90 02 00 00 5a    	add    BYTE PTR [rax+0x5a000002],dl
     5eb:	00 00                	add    BYTE PTR [rax],al
     5ed:	00 e0                	add    al,ah
     5ef:	13 40 00             	adc    eax,DWORD PTR [rax+0x0]
     5f2:	00 00                	add    BYTE PTR [rax],al
     5f4:	00 00                	add    BYTE PTR [rax],al
     5f6:	06                   	(bad)  
     5f7:	02 00                	add    al,BYTE PTR [rax]
     5f9:	00 02                	add    BYTE PTR [rdx],al
     5fb:	2f                   	(bad)  
     5fc:	00 00                	add    BYTE PTR [rax],al
     5fe:	00 03                	add    BYTE PTR [rbx],al
     600:	a8 00                	test   al,0x0
     602:	00 00                	add    BYTE PTR [rax],al
     604:	06                   	(bad)  
     605:	01 04 e0             	add    DWORD PTR [rax+riz*8],eax
     608:	13 40 00             	adc    eax,DWORD PTR [rax+0x0]
     60b:	00 00                	add    BYTE PTR [rax],al
     60d:	00 00                	add    BYTE PTR [rax],al
     60f:	b6 00                	mov    dh,0x0
     611:	00 00                	add    BYTE PTR [rax],al
     613:	01 57 7f             	add    DWORD PTR [rdi+0x7f],edx
     616:	00 00                	add    BYTE PTR [rax],al
     618:	00 05 01 55 87 00    	add    BYTE PTR [rip+0x875501],al        # 875b1f <__TMC_END__+0x4709e7>
     61e:	00 00                	add    BYTE PTR [rax],al
     620:	05 01 54 92 00       	add    eax,0x925401
     625:	00 00                	add    BYTE PTR [rax],al
     627:	06                   	(bad)  
     628:	c9                   	leave  
     629:	02 00                	add    al,BYTE PTR [rax]
     62b:	00 9d 00 00 00 05    	add    BYTE PTR [rbp+0x5000000],bl
     631:	01 52 a8             	add    DWORD PTR [rdx-0x58],edx
     634:	00 00                	add    BYTE PTR [rax],al
     636:	00 07                	add    BYTE PTR [rdi],al
     638:	e0 13                	loopne 64d <__abi_tag-0x3ffd2f>
     63a:	40 00 00             	rex add BYTE PTR [rax],al
     63d:	00 00                	add    BYTE PTR [rax],al
     63f:	00 b5 00 00 00 08    	add    BYTE PTR [rbp+0x8000000],dh
     645:	ff 02                	inc    DWORD PTR [rdx]
     647:	00 00                	add    BYTE PTR [rax],al
     649:	b4 00                	mov    ah,0x0
     64b:	00 00                	add    BYTE PTR [rax],al
     64d:	00 00                	add    BYTE PTR [rax],al
     64f:	09 37                	or     DWORD PTR [rdi],esi
     651:	03 00                	add    eax,DWORD PTR [rax]
     653:	00 01                	add    BYTE PTR [rcx],al
     655:	07                   	(bad)  
     656:	01 0a                	add    DWORD PTR [rdx],ecx
     658:	ce                   	(bad)  
     659:	01 00                	add    DWORD PTR [rax],eax
     65b:	00 01                	add    BYTE PTR [rcx],al
     65d:	07                   	(bad)  
     65e:	c1 00 00             	rol    DWORD PTR [rax],0x0
     661:	00 0a                	add    BYTE PTR [rdx],cl
     663:	e2 01                	loop   666 <__abi_tag-0x3ffd16>
     665:	00 00                	add    BYTE PTR [rax],al
     667:	01 07                	add    DWORD PTR [rdi],eax
     669:	c2 00 00             	ret    0x0
     66c:	00 0a                	add    BYTE PTR [rdx],cl
     66e:	f6 01 00             	test   BYTE PTR [rcx],0x0
     671:	00 01                	add    BYTE PTR [rcx],al
     673:	07                   	(bad)  
     674:	d4                   	(bad)  
     675:	00 00                	add    BYTE PTR [rax],al
     677:	00 0a                	add    BYTE PTR [rdx],cl
     679:	f2 01 00             	repnz add DWORD PTR [rax],eax
     67c:	00 01                	add    BYTE PTR [rcx],al
     67e:	07                   	(bad)  
     67f:	c2 00 00             	ret    0x0
     682:	00 0b                	add    BYTE PTR [rbx],cl
     684:	0c 43                	or     al,0x43
     686:	03 00                	add    eax,DWORD PTR [rax]
     688:	00 01                	add    BYTE PTR [rcx],al
     68a:	08 c2                	or     dl,al
     68c:	00 00                	add    BYTE PTR [rax],al
     68e:	00 00                	add    BYTE PTR [rax],al
     690:	00 0d 0e cd 00 00    	add    BYTE PTR [rip+0xcd0e],cl        # d3a4 <__abi_tag-0x3f2fd8>
     696:	00 dd                	add    ch,bl
     698:	04 00                	add    al,0x0
     69a:	00 02                	add    BYTE PTR [rdx],al
     69c:	2e 03 1f             	cs add ebx,DWORD PTR [rdi]
     69f:	01 00                	add    DWORD PTR [rax],eax
     6a1:	00 07                	add    BYTE PTR [rdi],al
     6a3:	08 02                	or     BYTE PTR [rdx],al
     6a5:	d9 00                	fld    DWORD PTR [rax]
     6a7:	00 00                	add    BYTE PTR [rax],al
     6a9:	0f de 00             	pmaxub mm0,QWORD PTR [rax]
     6ac:	00 00                	add    BYTE PTR [rax],al
     6ae:	0e                   	(bad)  
     6af:	e9 00 00 00 d5       	jmp    ffffffffd50006b4 <__TMC_END__+0xffffffffd4bfb57c>
     6b4:	01 00                	add    DWORD PTR [rax],eax
     6b6:	00 04 18             	add    BYTE PTR [rax+rbx*1],al
     6b9:	0e                   	(bad)  
     6ba:	f4                   	hlt    
     6bb:	00 00                	add    BYTE PTR [rax],al
     6bd:	00 d3                	add    bl,dl
     6bf:	01 00                	add    DWORD PTR [rax],eax
     6c1:	00 03                	add    BYTE PTR [rbx],al
     6c3:	26 03 9f 00 00 00 08 	es add ebx,DWORD PTR [rdi+0x8000000]
     6ca:	01 10                	add    DWORD PTR [rax],edx
     6cc:	a0 14 40 00 00 00 00 	movabs al,ds:0x4600000000004014
     6d3:	00 46 
     6d5:	01 00                	add    DWORD PTR [rax],eax
     6d7:	00 01                	add    BYTE PTR [rcx],al
     6d9:	57                   	push   rdi
     6da:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     6db:	02 00                	add    al,BYTE PTR [rax]
     6dd:	00 01                	add    BYTE PTR [rcx],al
     6df:	0c 04                	or     al,0x4
     6e1:	03 00                	add    eax,DWORD PTR [rax]
     6e3:	00 11                	add    BYTE PTR [rcx],dl
     6e5:	9e                   	sahf   
     6e6:	03 00                	add    eax,DWORD PTR [rax]
     6e8:	00 7b 02             	add    BYTE PTR [rbx+0x2],bh
     6eb:	00 00                	add    BYTE PTR [rax],al
     6ed:	01 0c 60             	add    DWORD PTR [rax+riz*2],ecx
     6f0:	03 00                	add    eax,DWORD PTR [rax]
     6f2:	00 12                	add    BYTE PTR [rdx],dl
     6f4:	e7 03                	out    0x3,eax
     6f6:	00 00                	add    BYTE PTR [rax],al
     6f8:	5d                   	pop    rbp
     6f9:	03 00                	add    eax,DWORD PTR [rax]
     6fb:	00 01                	add    BYTE PTR [rcx],al
     6fd:	0e                   	(bad)  
     6fe:	e2 04                	loop   704 <__abi_tag-0x3ffc78>
     700:	00 00                	add    BYTE PTR [rax],al
     702:	12 4c 05 00          	adc    cl,BYTE PTR [rbp+rax*1+0x0]
     706:	00 ce                	add    dh,cl
     708:	01 00                	add    DWORD PTR [rax],eax
     70a:	00 01                	add    BYTE PTR [rcx],al
     70c:	1b c1                	sbb    eax,ecx
     70e:	00 00                	add    BYTE PTR [rax],al
     710:	00 13                	add    BYTE PTR [rbx],dl
     712:	7f 00                	jg     714 <__abi_tag-0x3ffc68>
     714:	00 00                	add    BYTE PTR [rax],al
     716:	22 15 40 00 00 00    	and    dl,BYTE PTR [rip+0x40]        # 75c <__abi_tag-0x3ffc20>
     71c:	00 00                	add    BYTE PTR [rax],al
     71e:	c4                   	(bad)  
     71f:	00 00                	add    BYTE PTR [rax],al
     721:	00 01                	add    BYTE PTR [rcx],al
     723:	1c 03                	sbb    al,0x3
     725:	06                   	(bad)  
     726:	f3 04 00             	repz add al,0x0
     729:	00 87 00 00 00 05    	add    BYTE PTR [rdi+0x5000000],al
     72f:	01 5a 92             	add    DWORD PTR [rdx-0x6e],ebx
     732:	00 00                	add    BYTE PTR [rax],al
     734:	00 06                	add    BYTE PTR [rsi],al
     736:	d0 04 00             	rol    BYTE PTR [rax+rax*1],1
     739:	00 9d 00 00 00 06    	add    BYTE PTR [rbp+0x6000000],bl
     73f:	29 05 00 00 a8 00    	sub    DWORD PTR [rip+0xa80000],eax        # a80745 <__TMC_END__+0x67b60d>
     745:	00 00                	add    BYTE PTR [rax],al
     747:	07                   	(bad)  
     748:	22 15 40 00 00 00    	and    dl,BYTE PTR [rip+0x40]        # 78e <__abi_tag-0x3ffbee>
     74e:	00 00                	add    BYTE PTR [rax],al
     750:	c4                   	(bad)  
     751:	00 00                	add    BYTE PTR [rax],al
     753:	00 08                	add    BYTE PTR [rax],cl
     755:	31 04 00             	xor    DWORD PTR [rax+rax*1],eax
     758:	00 b4 00 00 00 00 00 	add    BYTE PTR [rax+rax*1+0x0],dh
     75f:	14 d0                	adc    al,0xd0
     761:	01 00                	add    DWORD PTR [rax],eax
     763:	00 b6 14 40 00 00    	add    BYTE PTR [rsi+0x4014],dh
     769:	00 00                	add    BYTE PTR [rax],al
     76b:	00 14 11             	add    BYTE PTR [rcx+rdx*1],dl
     76e:	03 00                	add    eax,DWORD PTR [rax]
     770:	00 dc                	add    ah,bl
     772:	14 40                	adc    al,0x40
     774:	00 00                	add    BYTE PTR [rax],al
     776:	00 00                	add    BYTE PTR [rax],al
     778:	00 15 27 03 00 00    	add    BYTE PTR [rip+0x327],dl        # aa5 <__abi_tag-0x3ff8d7>
     77e:	f1                   	int1   
     77f:	14 40                	adc    al,0x40
     781:	00 00                	add    BYTE PTR [rax],al
     783:	00 00                	add    BYTE PTR [rax],al
     785:	00 16                	add    BYTE PTR [rsi],dl
     787:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
     78a:	32 00                	xor    al,BYTE PTR [rax]
     78c:	15 49 03 00 00       	adc    eax,0x349
     791:	1e                   	(bad)  
     792:	15 40 00 00 00       	adc    eax,0x40
     797:	00 00                	add    BYTE PTR [rax],al
     799:	16                   	(bad)  
     79a:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
     79d:	30 00                	xor    BYTE PTR [rax],al
     79f:	00 17                	add    BYTE PTR [rdi],dl
     7a1:	98                   	cwde   
     7a2:	02 00                	add    al,BYTE PTR [rax]
     7a4:	00 05 1d c1 00 00    	add    BYTE PTR [rip+0xc11d],al        # c8c7 <__abi_tag-0x3f3ab5>
     7aa:	00 18                	add    BYTE PTR [rax],bl
     7ac:	e6 01                	out    0x1,al
     7ae:	00 00                	add    BYTE PTR [rax],al
     7b0:	18 f4                	sbb    ah,dh
     7b2:	02 00                	add    al,BYTE PTR [rax]
     7b4:	00 00                	add    BYTE PTR [rax],al
     7b6:	02 eb                	add    ch,bl
     7b8:	01 00                	add    DWORD PTR [rax],eax
     7ba:	00 0f                	add    BYTE PTR [rdi],cl
     7bc:	f0 01 00             	lock add DWORD PTR [rax],eax
     7bf:	00 19                	add    BYTE PTR [rcx],bl
     7c1:	66 02 00             	data16 add al,BYTE PTR [rax]
     7c4:	00 10                	add    BYTE PTR [rax],dl
     7c6:	07                   	(bad)  
     7c7:	21 1a                	and    DWORD PTR [rdx],ebx
     7c9:	fa                   	cli    
     7ca:	01 00                	add    DWORD PTR [rax],eax
     7cc:	00 11                	add    BYTE PTR [rcx],dl
     7ce:	02 00                	add    al,BYTE PTR [rax]
     7d0:	00 07                	add    BYTE PTR [rdi],al
     7d2:	22 00                	and    al,BYTE PTR [rax]
     7d4:	1a 61 02             	sbb    ah,BYTE PTR [rcx+0x2]
     7d7:	00 00                	add    BYTE PTR [rax],al
     7d9:	ef                   	out    dx,eax
     7da:	02 00                	add    al,BYTE PTR [rax]
     7dc:	00 07                	add    BYTE PTR [rdi],al
     7de:	23 08                	and    ecx,DWORD PTR [rax]
     7e0:	00 02                	add    BYTE PTR [rdx],al
     7e2:	16                   	(bad)  
     7e3:	02 00                	add    al,BYTE PTR [rax]
     7e5:	00 1b                	add    BYTE PTR [rbx],bl
     7e7:	22 02                	and    al,BYTE PTR [rdx]
     7e9:	00 00                	add    BYTE PTR [rax],al
     7eb:	56                   	push   rsi
     7ec:	02 00                	add    al,BYTE PTR [rax]
     7ee:	00 06                	add    BYTE PTR [rsi],al
     7f0:	bb 02 1c 38 06       	mov    ebx,0x6381c02
     7f5:	b1 02                	mov    cl,0x2
     7f7:	1d 09 02 00 00       	sbb    eax,0x209
     7fc:	90                   	nop
     7fd:	02 00                	add    al,BYTE PTR [rax]
     7ff:	00 06                	add    BYTE PTR [rsi],al
     801:	b3 02                	mov    bl,0x2
     803:	00 1d 10 02 00 00    	add    BYTE PTR [rip+0x210],bl        # a19 <__abi_tag-0x3ff963>
     809:	90                   	nop
     80a:	02 00                	add    al,BYTE PTR [rax]
     80c:	00 06                	add    BYTE PTR [rsi],al
     80e:	b4 02                	mov    ah,0x2
     810:	04 1d                	add    al,0x1d
     812:	18 02                	sbb    BYTE PTR [rdx],al
     814:	00 00                	add    BYTE PTR [rax],al
     816:	b8 02 00 00 06       	mov    eax,0x6000002
     81b:	b5 02                	mov    ch,0x2
     81d:	08 1d 21 02 00 00    	or     BYTE PTR [rip+0x221],bl        # a44 <__abi_tag-0x3ff938>
     823:	d9 02                	fld    DWORD PTR [rdx]
     825:	00 00                	add    BYTE PTR [rax],al
     827:	06                   	(bad)  
     828:	b6 02                	mov    dh,0x2
     82a:	10 1d 29 02 00 00    	adc    BYTE PTR [rip+0x229],bl        # a59 <__abi_tag-0x3ff923>
     830:	d9 02                	fld    DWORD PTR [rdx]
     832:	00 00                	add    BYTE PTR [rax],al
     834:	06                   	(bad)  
     835:	b7 02                	mov    bh,0x2
     837:	18 1d 31 02 00 00    	sbb    BYTE PTR [rip+0x231],bl        # a6e <__abi_tag-0x3ff90e>
     83d:	e4 02                	in     al,0x2
     83f:	00 00                	add    BYTE PTR [rax],al
     841:	06                   	(bad)  
     842:	b8 02 20 1d 46       	mov    eax,0x461d2002
     847:	02 00                	add    al,BYTE PTR [rax]
     849:	00 e4                	add    ah,ah
     84b:	02 00                	add    al,BYTE PTR [rax]
     84d:	00 06                	add    BYTE PTR [rsi],al
     84f:	b9 02 28 1d 4e       	mov    ecx,0x4e1d2802
     854:	02 00                	add    al,BYTE PTR [rax]
     856:	00 e4                	add    ah,ah
     858:	02 00                	add    al,BYTE PTR [rax]
     85a:	00 06                	add    BYTE PTR [rsi],al
     85c:	ba 02 30 00 0e       	mov    edx,0xe003002
     861:	9b                   	fwait
     862:	02 00                	add    al,BYTE PTR [rax]
     864:	00 0c 01             	add    BYTE PTR [rcx+rax*1],cl
     867:	00 00                	add    BYTE PTR [rax],al
     869:	06                   	(bad)  
     86a:	21 0e                	and    DWORD PTR [rsi],ecx
     86c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     86d:	02 00                	add    al,BYTE PTR [rax]
     86f:	00 03                	add    BYTE PTR [rbx],al
     871:	01 00                	add    DWORD PTR [rax],eax
     873:	00 04 1a             	add    BYTE PTR [rdx+rbx*1],al
     876:	0e                   	(bad)  
     877:	b1 02                	mov    cl,0x2
     879:	00 00                	add    BYTE PTR [rax],al
     87b:	01 01                	add    DWORD PTR [rcx],eax
     87d:	00 00                	add    BYTE PTR [rax],al
     87f:	03 2a                	add    ebp,DWORD PTR [rdx]
     881:	03 24 01             	add    esp,DWORD PTR [rcx+rax*1]
     884:	00 00                	add    BYTE PTR [rax],al
     886:	07                   	(bad)  
     887:	04 0e                	add    al,0xe
     889:	c3                   	ret    
     88a:	02 00                	add    al,BYTE PTR [rax]
     88c:	00 4f 01             	add    BYTE PTR [rdi+0x1],cl
     88f:	00 00                	add    BYTE PTR [rax],al
     891:	06                   	(bad)  
     892:	30 0e                	xor    BYTE PTR [rsi],cl
     894:	ce                   	(bad)  
     895:	02 00                	add    al,BYTE PTR [rax]
     897:	00 33                	add    BYTE PTR [rbx],dh
     899:	01 00                	add    DWORD PTR [rax],eax
     89b:	00 04 1b             	add    BYTE PTR [rbx+rbx*1],al
     89e:	0e                   	(bad)  
     89f:	cd 00                	int    0x0
     8a1:	00 00                	add    BYTE PTR [rax],al
     8a3:	31 01                	xor    DWORD PTR [rcx],eax
     8a5:	00 00                	add    BYTE PTR [rax],al
     8a7:	03 2d 0e c3 02 00    	add    ebp,DWORD PTR [rip+0x2c30e]        # 2cbbb <__abi_tag-0x3d37c1>
     8ad:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
     8b0:	00 00                	add    BYTE PTR [rax],al
     8b2:	06                   	(bad)  
     8b3:	2c 0e                	sub    al,0xe
     8b5:	c3                   	ret    
     8b6:	02 00                	add    al,BYTE PTR [rax]
     8b8:	00 3a                	add    BYTE PTR [rdx],bh
     8ba:	02 00                	add    al,BYTE PTR [rax]
     8bc:	00 06                	add    BYTE PTR [rsi],al
     8be:	27                   	(bad)  
     8bf:	02 f0                	add    dh,al
     8c1:	01 00                	add    DWORD PTR [rax],eax
     8c3:	00 02                	add    BYTE PTR [rdx],al
     8c5:	f9                   	stc    
     8c6:	02 00                	add    al,BYTE PTR [rax]
     8c8:	00 1e                	add    BYTE PTR [rsi],bl
     8ca:	04 03                	add    al,0x3
     8cc:	00 00                	add    BYTE PTR [rax],al
     8ce:	18 0b                	sbb    BYTE PTR [rbx],cl
     8d0:	03 00                	add    eax,DWORD PTR [rax]
     8d2:	00 00                	add    BYTE PTR [rax],al
     8d4:	03 2d 01 00 00 05    	add    ebp,DWORD PTR [rip+0x5000001]        # 50008db <__TMC_END__+0x4bfb7a3>
     8da:	04 02                	add    al,0x2
     8dc:	10 03                	adc    BYTE PTR [rbx],al
     8de:	00 00                	add    BYTE PTR [rax],al
     8e0:	1f                   	(bad)  
     8e1:	17                   	(bad)  
     8e2:	45 03 00             	add    r8d,DWORD PTR [r8]
     8e5:	00 05 21 04 03 00    	add    BYTE PTR [rip+0x30421],al        # 30d0c <__abi_tag-0x3cf670>
     8eb:	00 18                	add    BYTE PTR [rax],bl
     8ed:	22 03                	and    al,BYTE PTR [rbx]
     8ef:	00 00                	add    BYTE PTR [rax],al
     8f1:	00 02                	add    BYTE PTR [rdx],al
     8f3:	f4                   	hlt    
     8f4:	00 00                	add    BYTE PTR [rax],al
     8f6:	00 20                	add    BYTE PTR [rax],ah
     8f8:	4d 03 00             	add    r8,QWORD PTR [r8]
     8fb:	00 08                	add    BYTE PTR [rax],cl
     8fd:	96                   	xchg   esi,eax
     8fe:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
     901:	00 00                	add    BYTE PTR [rax],al
     903:	18 04 03             	sbb    BYTE PTR [rbx+rax*1],al
     906:	00 00                	add    BYTE PTR [rax],al
     908:	18 3f                	sbb    BYTE PTR [rdi],bh
     90a:	03 00                	add    eax,DWORD PTR [rax]
     90c:	00 21                	add    BYTE PTR [rcx],ah
     90e:	00 02                	add    BYTE PTR [rdx],al
     910:	44 03 00             	add    r8d,DWORD PTR [rax]
     913:	00 0f                	add    BYTE PTR [rdi],cl
     915:	2f                   	(bad)  
     916:	00 00                	add    BYTE PTR [rax],al
     918:	00 22                	add    BYTE PTR [rdx],ah
     91a:	55                   	push   rbp
     91b:	03 00                	add    eax,DWORD PTR [rax]
     91d:	00 05 15 18 c1 00    	add    BYTE PTR [rip+0xc11815],al        # c12138 <__TMC_END__+0x80d000>
     923:	00 00                	add    BYTE PTR [rax],al
     925:	18 cd                	sbb    ch,cl
     927:	00 00                	add    BYTE PTR [rax],al
     929:	00 18                	add    BYTE PTR [rax],bl
     92b:	04 03                	add    al,0x3
     92d:	00 00                	add    BYTE PTR [rax],al
     92f:	00 02                	add    BYTE PTR [rdx],al
     931:	65 03 00             	add    eax,DWORD PTR gs:[rax]
     934:	00 0e                	add    BYTE PTR [rsi],cl
     936:	70 03                	jo     93b <__abi_tag-0x3ffa41>
     938:	00 00                	add    BYTE PTR [rax],al
     93a:	79 02                	jns    93e <__abi_tag-0x3ffa3e>
     93c:	00 00                	add    BYTE PTR [rax],al
     93e:	07                   	(bad)  
     93f:	2f                   	(bad)  
     940:	23 40 07             	and    eax,DWORD PTR [rax+0x7]
     943:	26 1a ca             	es sbb cl,dl
     946:	01 00                	add    DWORD PTR [rax],eax
     948:	00 d5                	add    ch,dl
     94a:	03 00                	add    eax,DWORD PTR [rax]
     94c:	00 07                	add    BYTE PTR [rdi],al
     94e:	27                   	(bad)  
     94f:	00 1a                	add    BYTE PTR [rdx],bl
     951:	dd 01                	fld    QWORD PTR [rcx]
     953:	00 00                	add    BYTE PTR [rax],al
     955:	c2 00 00             	ret    0x0
     958:	00 07                	add    BYTE PTR [rdi],al
     95a:	28 08                	sub    BYTE PTR [rax],cl
     95c:	1a ea                	sbb    ch,dl
     95e:	01 00                	add    DWORD PTR [rax],eax
     960:	00 d5                	add    ch,dl
     962:	03 00                	add    eax,DWORD PTR [rax]
     964:	00 07                	add    BYTE PTR [rdi],al
     966:	29 10                	sub    DWORD PTR [rax],edx
     968:	1a e6                	sbb    ah,dh
     96a:	01 00                	add    DWORD PTR [rax],eax
     96c:	00 c2                	add    dl,al
     96e:	00 00                	add    BYTE PTR [rax],al
     970:	00 07                	add    BYTE PTR [rdi],al
     972:	2a 18                	sub    bl,BYTE PTR [rax]
     974:	1a f6                	sbb    dh,dh
     976:	01 00                	add    DWORD PTR [rax],eax
     978:	00 d5                	add    ch,dl
     97a:	03 00                	add    eax,DWORD PTR [rax]
     97c:	00 07                	add    BYTE PTR [rdi],al
     97e:	2b 20                	sub    esp,DWORD PTR [rax]
     980:	1a f2                	sbb    dh,dl
     982:	01 00                	add    DWORD PTR [rax],eax
     984:	00 c2                	add    dl,al
     986:	00 00                	add    BYTE PTR [rax],al
     988:	00 07                	add    BYTE PTR [rdi],al
     98a:	2c 28                	sub    al,0x28
     98c:	1a e0                	sbb    ah,al
     98e:	02 00                	add    al,BYTE PTR [rax]
     990:	00 da                	add    dl,bl
     992:	03 00                	add    eax,DWORD PTR [rax]
     994:	00 07                	add    BYTE PTR [rdi],al
     996:	2d 30 1a 3c 04       	sub    eax,0x43c1a30
     99b:	00 00                	add    BYTE PTR [rax],al
     99d:	d2 04 00             	rol    BYTE PTR [rax+rax*1],cl
     9a0:	00 07                	add    BYTE PTR [rdi],al
     9a2:	2e 38 00             	cs cmp BYTE PTR [rax],al
     9a5:	02 de                	add    bl,dh
     9a7:	00 00                	add    BYTE PTR [rax],al
     9a9:	00 02                	add    BYTE PTR [rdx],al
     9ab:	df 03                	fild   WORD PTR [rbx]
     9ad:	00 00                	add    BYTE PTR [rax],al
     9af:	0e                   	(bad)  
     9b0:	ea                   	(bad)  
     9b1:	03 00                	add    eax,DWORD PTR [rax]
     9b3:	00 a5 01 00 00 06    	add    BYTE PTR [rbp+0x6000001],ah
     9b9:	61                   	(bad)  
     9ba:	23 40 06             	and    eax,DWORD PTR [rax+0x6]
     9bd:	51                   	push   rcx
     9be:	1a 97 00 00 00 97    	sbb    dl,BYTE PTR [rdi-0x69000000]
     9c4:	04 00                	add    al,0x0
     9c6:	00 06                	add    BYTE PTR [rsi],al
     9c8:	53                   	push   rbx
     9c9:	00 1a                	add    BYTE PTR [rdx],bl
     9cb:	c1 00 00             	rol    DWORD PTR [rax],0x0
     9ce:	00 aa 04 00 00 06    	add    BYTE PTR [rdx+0x6000004],ch
     9d4:	54                   	push   rsp
     9d5:	10 1a                	adc    BYTE PTR [rdx],bl
     9d7:	ed                   	in     eax,dx
     9d8:	00 00                	add    BYTE PTR [rax],al
     9da:	00 aa 04 00 00 06    	add    BYTE PTR [rdx+0x6000004],ch
     9e0:	55                   	push   rbp
     9e1:	12 1a                	adc    bl,BYTE PTR [rdx]
     9e3:	f7 00 00 00 90 02    	test   DWORD PTR [rax],0x2900000
     9e9:	00 00                	add    BYTE PTR [rax],al
     9eb:	06                   	(bad)  
     9ec:	56                   	push   rsi
     9ed:	14 1a                	adc    al,0x1a
     9ef:	17                   	(bad)  
     9f0:	01 00                	add    DWORD PTR [rax],eax
     9f2:	00 d9                	add    cl,bl
     9f4:	02 00                	add    al,BYTE PTR [rax]
     9f6:	00 06                	add    BYTE PTR [rsi],al
     9f8:	57                   	push   rdi
     9f9:	18 1a                	sbb    BYTE PTR [rdx],bl
     9fb:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
     9fe:	00 b8 02 00 00 06    	add    BYTE PTR [rax+0x6000002],bh
     a04:	58                   	pop    rax
     a05:	20 1a                	and    BYTE PTR [rdx],bl
     a07:	59                   	pop    rcx
     a08:	01 00                	add    DWORD PTR [rax],eax
     a0a:	00 b8 02 00 00 06    	add    BYTE PTR [rax+0x6000002],bh
     a10:	59                   	pop    rcx
     a11:	28 1a                	sub    BYTE PTR [rdx],bl
     a13:	61                   	(bad)  
     a14:	01 00                	add    DWORD PTR [rax],eax
     a16:	00 90 02 00 00 06    	add    BYTE PTR [rax+0x6000002],dl
     a1c:	5a                   	pop    rdx
     a1d:	30 1a                	xor    BYTE PTR [rdx],bl
     a1f:	69 01 00 00 aa 04    	imul   eax,DWORD PTR [rcx],0x4aa0000
     a25:	00 00                	add    BYTE PTR [rax],al
     a27:	06                   	(bad)  
     a28:	5b                   	pop    rbx
     a29:	34 1a                	xor    al,0x1a
     a2b:	72 01                	jb     a2e <__abi_tag-0x3ff94e>
     a2d:	00 00                	add    BYTE PTR [rax],al
     a2f:	aa                   	stos   BYTE PTR es:[rdi],al
     a30:	04 00                	add    al,0x0
     a32:	00 06                	add    BYTE PTR [rsi],al
     a34:	5c                   	pop    rsp
     a35:	36 1a 7e 01          	ss sbb bh,BYTE PTR [rsi+0x1]
     a39:	00 00                	add    BYTE PTR [rax],al
     a3b:	aa                   	stos   BYTE PTR es:[rdi],al
     a3c:	04 00                	add    al,0x0
     a3e:	00 06                	add    BYTE PTR [rsi],al
     a40:	5d                   	pop    rbp
     a41:	38 1a                	cmp    BYTE PTR [rdx],bl
     a43:	86 01                	xchg   BYTE PTR [rcx],al
     a45:	00 00                	add    BYTE PTR [rax],al
     a47:	aa                   	stos   BYTE PTR es:[rdi],al
     a48:	04 00                	add    al,0x0
     a4a:	00 06                	add    BYTE PTR [rsi],al
     a4c:	5e                   	pop    rsi
     a4d:	3a 1a                	cmp    bl,BYTE PTR [rdx]
     a4f:	92                   	xchg   edx,eax
     a50:	01 00                	add    DWORD PTR [rax],eax
     a52:	00 aa 04 00 00 06    	add    BYTE PTR [rdx+0x6000004],ch
     a58:	5f                   	pop    rdi
     a59:	3c 1a                	cmp    al,0x1a
     a5b:	9a                   	(bad)  
     a5c:	01 00                	add    DWORD PTR [rax],eax
     a5e:	00 aa 04 00 00 06    	add    BYTE PTR [rdx+0x6000004],ch
     a64:	60                   	(bad)  
     a65:	3e 00 24 f4          	ds add BYTE PTR [rsp+rsi*8],ah
     a69:	00 00                	add    BYTE PTR [rax],al
     a6b:	00 25 a3 04 00 00    	add    BYTE PTR [rip+0x4a3],ah        # f14 <__abi_tag-0x3ff468>
     a71:	10 00                	adc    BYTE PTR [rax],al
     a73:	26 ad                	lods   eax,DWORD PTR ds:[rsi]
     a75:	00 00                	add    BYTE PTR [rax],al
     a77:	00 08                	add    BYTE PTR [rax],cl
     a79:	07                   	(bad)  
     a7a:	0e                   	(bad)  
     a7b:	b5 04                	mov    ch,0x4
     a7d:	00 00                	add    BYTE PTR [rax],al
     a7f:	e2 00                	loop   a81 <__abi_tag-0x3ff8fb>
     a81:	00 00                	add    BYTE PTR [rax],al
     a83:	06                   	(bad)  
     a84:	1c 0e                	sbb    al,0xe
     a86:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
     a8a:	d9 00                	fld    DWORD PTR [rax]
     a8c:	00 00                	add    BYTE PTR [rax],al
     a8e:	04 19                	add    al,0x19
     a90:	0e                   	(bad)  
     a91:	cb                   	retf   
     a92:	04 00                	add    al,0x0
     a94:	00 d7                	add    bh,dl
     a96:	00 00                	add    BYTE PTR [rax],al
     a98:	00 03                	add    BYTE PTR [rbx],al
     a9a:	28 03                	sub    BYTE PTR [rbx],al
     a9c:	c8 00 00 00          	enter  0x0,0x0
     aa0:	07                   	(bad)  
     aa1:	02 02                	add    al,BYTE PTR [rdx]
     aa3:	d7                   	xlat   BYTE PTR ds:[rbx]
     aa4:	04 00                	add    al,0x0
     aa6:	00 0e                	add    BYTE PTR [rsi],cl
     aa8:	f0 01 00             	lock add DWORD PTR [rax],eax
     aab:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
     aae:	00 00                	add    BYTE PTR [rax],al
     ab0:	07                   	(bad)  
     ab1:	24 02                	and    al,0x2
     ab3:	e7 04                	out    0x4,eax
     ab5:	00 00                	add    BYTE PTR [rax],al
     ab7:	0f 16 02             	movhps xmm0,QWORD PTR [rdx]
     aba:	00 00                	add    BYTE PTR [rax],al
     abc:	00 f9                	add    cl,bh
     abe:	04 00                	add    al,0x0
     ac0:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     ac3:	68 03 00 00 08       	push   0x8000003
     ac8:	01 00                	add    DWORD PTR [rax],eax
     aca:	00 00                	add    BYTE PTR [rax],al
     acc:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
     acf:	6a 03                	push   0x3
     ad1:	00 00                	add    BYTE PTR [rax],al
     ad3:	8c 04 00             	mov    WORD PTR [rax+rax*1],es
     ad6:	00 5a 00             	add    BYTE PTR [rdx+0x0],bl
     ad9:	00 00                	add    BYTE PTR [rax],al
     adb:	f0 15 40 00 00 00    	lock adc eax,0x40
     ae1:	00 00                	add    BYTE PTR [rax],al
     ae3:	53                   	push   rbx
     ae4:	02 00                	add    al,BYTE PTR [rax]
     ae6:	00 02                	add    BYTE PTR [rdx],al
     ae8:	2f                   	(bad)  
     ae9:	00 00                	add    BYTE PTR [rax],al
     aeb:	00 03                	add    BYTE PTR [rbx],al
     aed:	3b 00                	cmp    eax,DWORD PTR [rax]
     aef:	00 00                	add    BYTE PTR [rax],al
     af1:	56                   	push   rsi
     af2:	02 00                	add    al,BYTE PTR [rax]
     af4:	00 03                	add    BYTE PTR [rbx],al
     af6:	bb 02 04 38 03       	mov    ebx,0x3380402
     afb:	b1 02                	mov    cl,0x2
     afd:	05 09 02 00 00       	add    eax,0x209
     b02:	a9 00 00 00 03       	test   eax,0x3000000
     b07:	b3 02                	mov    bl,0x2
     b09:	00 05 10 02 00 00    	add    BYTE PTR [rip+0x210],al        # d1f <__abi_tag-0x3ff65d>
     b0f:	a9 00 00 00 03       	test   eax,0x3000000
     b14:	b4 02                	mov    ah,0x2
     b16:	04 05                	add    al,0x5
     b18:	18 02                	sbb    BYTE PTR [rdx],al
     b1a:	00 00                	add    BYTE PTR [rax],al
     b1c:	d1 00                	rol    DWORD PTR [rax],1
     b1e:	00 00                	add    BYTE PTR [rax],al
     b20:	03 b5 02 08 05 21    	add    esi,DWORD PTR [rbp+0x21050802]
     b26:	02 00                	add    al,BYTE PTR [rax]
     b28:	00 f9                	add    cl,bh
     b2a:	00 00                	add    BYTE PTR [rax],al
     b2c:	00 03                	add    BYTE PTR [rbx],al
     b2e:	b6 02                	mov    dh,0x2
     b30:	10 05 29 02 00 00    	adc    BYTE PTR [rip+0x229],al        # d5f <__abi_tag-0x3ff61d>
     b36:	f9                   	stc    
     b37:	00 00                	add    BYTE PTR [rax],al
     b39:	00 03                	add    BYTE PTR [rbx],al
     b3b:	b7 02                	mov    bh,0x2
     b3d:	18 05 31 02 00 00    	sbb    BYTE PTR [rip+0x231],al        # d74 <__abi_tag-0x3ff608>
     b43:	04 01                	add    al,0x1
     b45:	00 00                	add    BYTE PTR [rax],al
     b47:	03 b8 02 20 05 46    	add    edi,DWORD PTR [rax+0x46052002]
     b4d:	02 00                	add    al,BYTE PTR [rax]
     b4f:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
     b52:	00 00                	add    BYTE PTR [rax],al
     b54:	03 b9 02 28 05 4e    	add    edi,DWORD PTR [rcx+0x4e052802]
     b5a:	02 00                	add    al,BYTE PTR [rax]
     b5c:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
     b5f:	00 00                	add    BYTE PTR [rax],al
     b61:	03 ba 02 30 00 06    	add    edi,DWORD PTR [rdx+0x6003002]
     b67:	b4 00                	mov    ah,0x0
     b69:	00 00                	add    BYTE PTR [rax],al
     b6b:	0c 01                	or     al,0x1
     b6d:	00 00                	add    BYTE PTR [rax],al
     b6f:	03 21                	add    esp,DWORD PTR [rcx]
     b71:	06                   	(bad)  
     b72:	bf 00 00 00 03       	mov    edi,0x3000000
     b77:	01 00                	add    DWORD PTR [rax],eax
     b79:	00 02                	add    BYTE PTR [rdx],al
     b7b:	1a 06                	sbb    al,BYTE PTR [rsi]
     b7d:	ca 00 00             	retf   0x0
     b80:	00 01                	add    BYTE PTR [rcx],al
     b82:	01 00                	add    DWORD PTR [rax],eax
     b84:	00 01                	add    BYTE PTR [rcx],al
     b86:	2a 07                	sub    al,BYTE PTR [rdi]
     b88:	24 01                	and    al,0x1
     b8a:	00 00                	add    BYTE PTR [rax],al
     b8c:	07                   	(bad)  
     b8d:	04 06                	add    al,0x6
     b8f:	dc 00                	fadd   QWORD PTR [rax]
     b91:	00 00                	add    BYTE PTR [rax],al
     b93:	4f 01 00             	rex.WRXB add QWORD PTR [r8],r8
     b96:	00 03                	add    BYTE PTR [rbx],al
     b98:	30 06                	xor    BYTE PTR [rsi],al
     b9a:	e7 00                	out    0x0,eax
     b9c:	00 00                	add    BYTE PTR [rax],al
     b9e:	33 01                	xor    eax,DWORD PTR [rcx]
     ba0:	00 00                	add    BYTE PTR [rax],al
     ba2:	02 1b                	add    bl,BYTE PTR [rbx]
     ba4:	06                   	(bad)  
     ba5:	f2 00 00             	repnz add BYTE PTR [rax],al
     ba8:	00 31                	add    BYTE PTR [rcx],dh
     baa:	01 00                	add    DWORD PTR [rax],eax
     bac:	00 01                	add    BYTE PTR [rcx],al
     bae:	2d 07 1f 01 00       	sub    eax,0x11f07
     bb3:	00 07                	add    BYTE PTR [rdi],al
     bb5:	08 06                	or     BYTE PTR [rsi],al
     bb7:	dc 00                	fadd   QWORD PTR [rax]
     bb9:	00 00                	add    BYTE PTR [rax],al
     bbb:	3c 01                	cmp    al,0x1
     bbd:	00 00                	add    BYTE PTR [rax],al
     bbf:	03 2c 06             	add    ebp,DWORD PTR [rsi+rax*1]
     bc2:	dc 00                	fadd   QWORD PTR [rax]
     bc4:	00 00                	add    BYTE PTR [rax],al
     bc6:	3a 02                	cmp    al,BYTE PTR [rdx]
     bc8:	00 00                	add    BYTE PTR [rax],al
     bca:	03 27                	add    esp,DWORD PTR [rdi]
     bcc:	08 09                	or     BYTE PTR [rcx],cl
     bce:	f0 15 40 00 00 00    	lock adc eax,0x40
     bd4:	00 00                	add    BYTE PTR [rax],al
     bd6:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
     bd9:	00 01                	add    BYTE PTR [rcx],al
     bdb:	57                   	push   rdi
     bdc:	af                   	scas   eax,DWORD PTR es:[rdi]
     bdd:	01 00                	add    DWORD PTR [rax],eax
     bdf:	00 0a                	add    BYTE PTR [rdx],cl
     be1:	01 55 bb             	add    DWORD PTR [rbp-0x45],edx
     be4:	01 00                	add    DWORD PTR [rax],eax
     be6:	00 0b                	add    BYTE PTR [rbx],cl
     be8:	82                   	(bad)  
     be9:	05 00 00 c6 01       	add    eax,0x1c60000
     bee:	00 00                	add    BYTE PTR [rax],al
     bf0:	0c f0                	or     al,0xf0
     bf2:	15 40 00 00 00       	adc    eax,0x40
     bf7:	00 00                	add    BYTE PTR [rax],al
     bf9:	37                   	(bad)  
     bfa:	00 00                	add    BYTE PTR [rax],al
     bfc:	00 0d e4 05 00 00    	add    BYTE PTR [rip+0x5e4],cl        # 11e6 <__abi_tag-0x3ff196>
     c02:	d2 01                	rol    BYTE PTR [rcx],cl
     c04:	00 00                	add    BYTE PTR [rax],al
     c06:	00 00                	add    BYTE PTR [rax],al
     c08:	09 40 16             	or     DWORD PTR [rax+0x16],eax
     c0b:	40 00 00             	rex add BYTE PTR [rax],al
     c0e:	00 00                	add    BYTE PTR [rax],al
     c10:	00 7f 00             	add    BYTE PTR [rdi+0x0],bh
     c13:	00 00                	add    BYTE PTR [rax],al
     c15:	01 57 af             	add    DWORD PTR [rdi-0x51],edx
     c18:	03 00                	add    eax,DWORD PTR [rax]
     c1a:	00 0b                	add    BYTE PTR [rbx],cl
     c1c:	1a 06                	sbb    al,BYTE PTR [rsi]
     c1e:	00 00                	add    BYTE PTR [rax],al
     c20:	bb 03 00 00 0b       	mov    ebx,0xb000003
     c25:	63 06                	movsxd eax,DWORD PTR [rsi]
     c27:	00 00                	add    BYTE PTR [rax],al
     c29:	c6 03 00             	mov    BYTE PTR [rbx],0x0
     c2c:	00 0b                	add    BYTE PTR [rbx],cl
     c2e:	ac                   	lods   al,BYTE PTR ds:[rsi]
     c2f:	06                   	(bad)  
     c30:	00 00                	add    BYTE PTR [rax],al
     c32:	d1 03                	rol    DWORD PTR [rbx],1
     c34:	00 00                	add    BYTE PTR [rax],al
     c36:	0d f5 06 00 00       	or     eax,0x6f5
     c3b:	dc 03                	fadd   QWORD PTR [rbx]
     c3d:	00 00                	add    BYTE PTR [rax],al
     c3f:	0e                   	(bad)  
     c40:	90                   	nop
     c41:	01 00                	add    DWORD PTR [rax],eax
     c43:	00 b8 16 40 00 00    	add    BYTE PTR [rax+0x4016],bh
     c49:	00 00                	add    BYTE PTR [rax],al
     c4b:	00 00                	add    BYTE PTR [rax],al
     c4d:	0f a8                	push   gs
     c4f:	03 00                	add    eax,DWORD PTR [rax]
     c51:	00 05 24 03 10 9e    	add    BYTE PTR [rip+0xffffffff9e100324],al        # ffffffff9e100f7b <__TMC_END__+0xffffffff9dcfbe43>
     c57:	01 00                	add    DWORD PTR [rax],eax
     c59:	00 00                	add    BYTE PTR [rax],al
     c5b:	02 a3 01 00 00 11    	add    ah,BYTE PTR [rbx+0x11000001]
     c61:	a8 01                	test   al,0x1
     c63:	00 00                	add    BYTE PTR [rax],al
     c65:	07                   	(bad)  
     c66:	a8 00                	test   al,0x0
     c68:	00 00                	add    BYTE PTR [rax],al
     c6a:	06                   	(bad)  
     c6b:	01 12                	add    DWORD PTR [rdx],edx
     c6d:	af                   	scas   eax,DWORD PTR es:[rdi]
     c6e:	03 00                	add    eax,DWORD PTR [rax]
     c70:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
     c73:	dc 00                	fadd   QWORD PTR [rax]
     c75:	00 00                	add    BYTE PTR [rax],al
     c77:	01 13                	add    DWORD PTR [rbx],edx
     c79:	7b 02                	jnp    c7d <__abi_tag-0x3ff6ff>
     c7b:	00 00                	add    BYTE PTR [rax],al
     c7d:	04 03                	add    al,0x3
     c7f:	df 01                	fild   WORD PTR [rcx]
     c81:	00 00                	add    BYTE PTR [rax],al
     c83:	13 be 03 00 00 04    	adc    edi,DWORD PTR [rsi+0x4000003]
     c89:	03 dc                	add    ebx,esp
     c8b:	00 00                	add    BYTE PTR [rax],al
     c8d:	00 14 15 c9 03 00 00 	add    BYTE PTR [rdx*1+0x3c9],dl
     c94:	04 04                	add    al,0x4
     c96:	79 03                	jns    c9b <__abi_tag-0x3ff6e1>
     c98:	00 00                	add    BYTE PTR [rax],al
     c9a:	00 00                	add    BYTE PTR [rax],al
     c9c:	02 e4                	add    ah,ah
     c9e:	01 00                	add    DWORD PTR [rax],eax
     ca0:	00 06                	add    BYTE PTR [rsi],al
     ca2:	ef                   	out    dx,eax
     ca3:	01 00                	add    DWORD PTR [rax],eax
     ca5:	00 79 02             	add    BYTE PTR [rcx+0x2],bh
     ca8:	00 00                	add    BYTE PTR [rax],al
     caa:	06                   	(bad)  
     cab:	2f                   	(bad)  
     cac:	16                   	(bad)  
     cad:	40 06                	rex (bad) 
     caf:	26 17                	es (bad) 
     cb1:	ca 01 00             	retf   0x1
     cb4:	00 54 02 00          	add    BYTE PTR [rdx+rax*1+0x0],dl
     cb8:	00 06                	add    BYTE PTR [rsi],al
     cba:	27                   	(bad)  
     cbb:	00 17                	add    BYTE PTR [rdi],dl
     cbd:	dd 01                	fld    QWORD PTR [rcx]
     cbf:	00 00                	add    BYTE PTR [rax],al
     cc1:	76 02                	jbe    cc5 <__abi_tag-0x3ff6b7>
     cc3:	00 00                	add    BYTE PTR [rax],al
     cc5:	06                   	(bad)  
     cc6:	28 08                	sub    BYTE PTR [rax],cl
     cc8:	17                   	(bad)  
     cc9:	ea                   	(bad)  
     cca:	01 00                	add    DWORD PTR [rax],eax
     ccc:	00 54 02 00          	add    BYTE PTR [rdx+rax*1+0x0],dl
     cd0:	00 06                	add    BYTE PTR [rsi],al
     cd2:	29 10                	sub    DWORD PTR [rax],edx
     cd4:	17                   	(bad)  
     cd5:	e6 01                	out    0x1,al
     cd7:	00 00                	add    BYTE PTR [rax],al
     cd9:	76 02                	jbe    cdd <__abi_tag-0x3ff69f>
     cdb:	00 00                	add    BYTE PTR [rax],al
     cdd:	06                   	(bad)  
     cde:	2a 18                	sub    bl,BYTE PTR [rax]
     ce0:	17                   	(bad)  
     ce1:	f6 01 00             	test   BYTE PTR [rcx],0x0
     ce4:	00 54 02 00          	add    BYTE PTR [rdx+rax*1+0x0],dl
     ce8:	00 06                	add    BYTE PTR [rsi],al
     cea:	2b 20                	sub    esp,DWORD PTR [rax]
     cec:	17                   	(bad)  
     ced:	f2 01 00             	repnz add DWORD PTR [rax],eax
     cf0:	00 76 02             	add    BYTE PTR [rsi+0x2],dh
     cf3:	00 00                	add    BYTE PTR [rax],al
     cf5:	06                   	(bad)  
     cf6:	2c 28                	sub    al,0x28
     cf8:	17                   	(bad)  
     cf9:	e0 02                	loopne cfd <__abi_tag-0x3ff67f>
     cfb:	00 00                	add    BYTE PTR [rax],al
     cfd:	81 02 00 00 06 2d    	add    DWORD PTR [rdx],0x2d060000
     d03:	30 17                	xor    BYTE PTR [rdi],dl
     d05:	3c 04                	cmp    al,0x4
     d07:	00 00                	add    BYTE PTR [rax],al
     d09:	79 03                	jns    d0e <__abi_tag-0x3ff66e>
     d0b:	00 00                	add    BYTE PTR [rax],al
     d0d:	06                   	(bad)  
     d0e:	2e 38 00             	cs cmp BYTE PTR [rax],al
     d11:	02 59 02             	add    bl,BYTE PTR [rcx+0x2]
     d14:	00 00                	add    BYTE PTR [rax],al
     d16:	06                   	(bad)  
     d17:	64 02 00             	add    al,BYTE PTR fs:[rax]
     d1a:	00 d5                	add    ch,dl
     d1c:	01 00                	add    DWORD PTR [rax],eax
     d1e:	00 02                	add    BYTE PTR [rdx],al
     d20:	18 06                	sbb    BYTE PTR [rsi],al
     d22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d23:	02 00                	add    al,BYTE PTR [rax]
     d25:	00 d3                	add    bl,dl
     d27:	01 00                	add    DWORD PTR [rax],eax
     d29:	00 01                	add    BYTE PTR [rcx],al
     d2b:	26 07                	es (bad) 
     d2d:	9f                   	lahf   
     d2e:	00 00                	add    BYTE PTR [rax],al
     d30:	00 08                	add    BYTE PTR [rax],cl
     d32:	01 06                	add    DWORD PTR [rsi],eax
     d34:	f2 00 00             	repnz add BYTE PTR [rax],al
     d37:	00 dd                	add    ch,bl
     d39:	04 00                	add    al,0x0
     d3b:	00 07                	add    BYTE PTR [rdi],al
     d3d:	2e 02 86 02 00 00 06 	cs add al,BYTE PTR [rsi+0x6000002]
     d44:	91                   	xchg   ecx,eax
     d45:	02 00                	add    al,BYTE PTR [rax]
     d47:	00 a5 01 00 00 03    	add    BYTE PTR [rbp+0x3000001],ah
     d4d:	61                   	(bad)  
     d4e:	16                   	(bad)  
     d4f:	40 03 51 17          	rex add edx,DWORD PTR [rcx+0x17]
     d53:	97                   	xchg   edi,eax
     d54:	00 00                	add    BYTE PTR [rax],al
     d56:	00 3e                	add    BYTE PTR [rsi],bh
     d58:	03 00                	add    eax,DWORD PTR [rax]
     d5a:	00 03                	add    BYTE PTR [rbx],al
     d5c:	53                   	push   rbx
     d5d:	00 17                	add    BYTE PTR [rdi],dl
     d5f:	c1 00 00             	rol    DWORD PTR [rax],0x0
     d62:	00 51 03             	add    BYTE PTR [rcx+0x3],dl
     d65:	00 00                	add    BYTE PTR [rax],al
     d67:	03 54 10 17          	add    edx,DWORD PTR [rax+rdx*1+0x17]
     d6b:	ed                   	in     eax,dx
     d6c:	00 00                	add    BYTE PTR [rax],al
     d6e:	00 51 03             	add    BYTE PTR [rcx+0x3],dl
     d71:	00 00                	add    BYTE PTR [rax],al
     d73:	03 55 12             	add    edx,DWORD PTR [rbp+0x12]
     d76:	17                   	(bad)  
     d77:	f7 00 00 00 a9 00    	test   DWORD PTR [rax],0xa90000
     d7d:	00 00                	add    BYTE PTR [rax],al
     d7f:	03 56 14             	add    edx,DWORD PTR [rsi+0x14]
     d82:	17                   	(bad)  
     d83:	17                   	(bad)  
     d84:	01 00                	add    DWORD PTR [rax],eax
     d86:	00 f9                	add    cl,bh
     d88:	00 00                	add    BYTE PTR [rax],al
     d8a:	00 03                	add    BYTE PTR [rbx],al
     d8c:	57                   	push   rdi
     d8d:	18 17                	sbb    BYTE PTR [rdi],dl
     d8f:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
     d92:	00 d1                	add    cl,dl
     d94:	00 00                	add    BYTE PTR [rax],al
     d96:	00 03                	add    BYTE PTR [rbx],al
     d98:	58                   	pop    rax
     d99:	20 17                	and    BYTE PTR [rdi],dl
     d9b:	59                   	pop    rcx
     d9c:	01 00                	add    DWORD PTR [rax],eax
     d9e:	00 d1                	add    cl,dl
     da0:	00 00                	add    BYTE PTR [rax],al
     da2:	00 03                	add    BYTE PTR [rbx],al
     da4:	59                   	pop    rcx
     da5:	28 17                	sub    BYTE PTR [rdi],dl
     da7:	61                   	(bad)  
     da8:	01 00                	add    DWORD PTR [rax],eax
     daa:	00 a9 00 00 00 03    	add    BYTE PTR [rcx+0x3000000],ch
     db0:	5a                   	pop    rdx
     db1:	30 17                	xor    BYTE PTR [rdi],dl
     db3:	69 01 00 00 51 03    	imul   eax,DWORD PTR [rcx],0x3510000
     db9:	00 00                	add    BYTE PTR [rax],al
     dbb:	03 5b 34             	add    ebx,DWORD PTR [rbx+0x34]
     dbe:	17                   	(bad)  
     dbf:	72 01                	jb     dc2 <__abi_tag-0x3ff5ba>
     dc1:	00 00                	add    BYTE PTR [rax],al
     dc3:	51                   	push   rcx
     dc4:	03 00                	add    eax,DWORD PTR [rax]
     dc6:	00 03                	add    BYTE PTR [rbx],al
     dc8:	5c                   	pop    rsp
     dc9:	36 17                	ss (bad) 
     dcb:	7e 01                	jle    dce <__abi_tag-0x3ff5ae>
     dcd:	00 00                	add    BYTE PTR [rax],al
     dcf:	51                   	push   rcx
     dd0:	03 00                	add    eax,DWORD PTR [rax]
     dd2:	00 03                	add    BYTE PTR [rbx],al
     dd4:	5d                   	pop    rbp
     dd5:	38 17                	cmp    BYTE PTR [rdi],dl
     dd7:	86 01                	xchg   BYTE PTR [rcx],al
     dd9:	00 00                	add    BYTE PTR [rax],al
     ddb:	51                   	push   rcx
     ddc:	03 00                	add    eax,DWORD PTR [rax]
     dde:	00 03                	add    BYTE PTR [rbx],al
     de0:	5e                   	pop    rsi
     de1:	3a 17                	cmp    dl,BYTE PTR [rdi]
     de3:	92                   	xchg   edx,eax
     de4:	01 00                	add    DWORD PTR [rax],eax
     de6:	00 51 03             	add    BYTE PTR [rcx+0x3],dl
     de9:	00 00                	add    BYTE PTR [rax],al
     deb:	03 5f 3c             	add    ebx,DWORD PTR [rdi+0x3c]
     dee:	17                   	(bad)  
     def:	9a                   	(bad)  
     df0:	01 00                	add    DWORD PTR [rax],eax
     df2:	00 51 03             	add    BYTE PTR [rcx+0x3],dl
     df5:	00 00                	add    BYTE PTR [rax],al
     df7:	03 60 3e             	add    esp,DWORD PTR [rax+0x3e]
     dfa:	00 18                	add    BYTE PTR [rax],bl
     dfc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dfd:	02 00                	add    al,BYTE PTR [rax]
     dff:	00 19                	add    BYTE PTR [rcx],bl
     e01:	4a 03 00             	rex.WX add rax,QWORD PTR [rax]
     e04:	00 10                	add    BYTE PTR [rax],dl
     e06:	00 1a                	add    BYTE PTR [rdx],bl
     e08:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     e09:	00 00                	add    BYTE PTR [rax],al
     e0b:	00 08                	add    BYTE PTR [rax],cl
     e0d:	07                   	(bad)  
     e0e:	06                   	(bad)  
     e0f:	5c                   	pop    rsp
     e10:	03 00                	add    eax,DWORD PTR [rax]
     e12:	00 e2                	add    dl,ah
     e14:	00 00                	add    BYTE PTR [rax],al
     e16:	00 03                	add    BYTE PTR [rbx],al
     e18:	1c 06                	sbb    al,0x6
     e1a:	67 03 00             	add    eax,DWORD PTR [eax]
     e1d:	00 d9                	add    cl,bl
     e1f:	00 00                	add    BYTE PTR [rax],al
     e21:	00 02                	add    BYTE PTR [rdx],al
     e23:	19 06                	sbb    DWORD PTR [rsi],eax
     e25:	72 03                	jb     e2a <__abi_tag-0x3ff552>
     e27:	00 00                	add    BYTE PTR [rax],al
     e29:	d7                   	xlat   BYTE PTR ds:[rbx]
     e2a:	00 00                	add    BYTE PTR [rax],al
     e2c:	00 01                	add    BYTE PTR [rcx],al
     e2e:	28 07                	sub    BYTE PTR [rdi],al
     e30:	c8 00 00 00          	enter  0x0,0x0
     e34:	07                   	(bad)  
     e35:	02 02                	add    al,BYTE PTR [rdx]
     e37:	7e 03                	jle    e3c <__abi_tag-0x3ff540>
     e39:	00 00                	add    BYTE PTR [rax],al
     e3b:	06                   	(bad)  
     e3c:	89 03                	mov    DWORD PTR [rbx],eax
     e3e:	00 00                	add    BYTE PTR [rax],al
     e40:	6d                   	ins    DWORD PTR es:[rdi],dx
     e41:	02 00                	add    al,BYTE PTR [rax]
     e43:	00 06                	add    BYTE PTR [rsi],al
     e45:	24 1b                	and    al,0x1b
     e47:	66 02 00             	data16 add al,BYTE PTR [rax]
     e4a:	00 10                	add    BYTE PTR [rax],dl
     e4c:	06                   	(bad)  
     e4d:	21 17                	and    DWORD PTR [rdi],edx
     e4f:	fa                   	cli    
     e50:	01 00                	add    DWORD PTR [rax],eax
     e52:	00 2a                	add    BYTE PTR [rdx],ch
     e54:	00 00                	add    BYTE PTR [rax],al
     e56:	00 06                	add    BYTE PTR [rsi],al
     e58:	22 00                	and    al,BYTE PTR [rax]
     e5a:	17                   	(bad)  
     e5b:	61                   	(bad)  
     e5c:	02 00                	add    al,BYTE PTR [rax]
     e5e:	00 aa 03 00 00 06    	add    BYTE PTR [rdx+0x6000003],ch
     e64:	23 08                	and    ecx,DWORD PTR [rax]
     e66:	00 02                	add    BYTE PTR [rdx],al
     e68:	89 03                	mov    DWORD PTR [rbx],eax
     e6a:	00 00                	add    BYTE PTR [rax],al
     e6c:	12 cf                	adc    cl,bh
     e6e:	03 00                	add    eax,DWORD PTR [rax]
     e70:	00 04 12             	add    BYTE PTR [rdx+rdx*1],al
     e73:	e8 03 00 00 01       	call   1000e7b <__TMC_END__+0xbfbd43>
     e78:	13 7b 02             	adc    edi,DWORD PTR [rbx+0x2]
     e7b:	00 00                	add    BYTE PTR [rax],al
     e7d:	04 12                	add    al,0x12
     e7f:	df 01                	fild   WORD PTR [rcx]
     e81:	00 00                	add    BYTE PTR [rax],al
     e83:	13 be 03 00 00 04    	adc    edi,DWORD PTR [rsi+0x4000003]
     e89:	12 dc                	adc    bl,ah
     e8b:	00 00                	add    BYTE PTR [rax],al
     e8d:	00 13                	add    BYTE PTR [rbx],dl
     e8f:	db 03                	fild   DWORD PTR [rbx]
     e91:	00 00                	add    BYTE PTR [rax],al
     e93:	04 12                	add    al,0x12
     e95:	dc 00                	fadd   QWORD PTR [rax]
     e97:	00 00                	add    BYTE PTR [rax],al
     e99:	15 e9 03 00 00       	adc    eax,0x3e9
     e9e:	04 13                	add    al,0x13
     ea0:	0f 01 00             	sgdt   [rax]
     ea3:	00 00                	add    BYTE PTR [rax],al
     ea5:	07                   	(bad)  
     ea6:	2d 01 00 00 05       	sub    eax,0x5000001
     eab:	04 1c                	add    al,0x1c
     ead:	c0 16 40             	rcl    BYTE PTR [rsi],0x40
     eb0:	00 00                	add    BYTE PTR [rax],al
     eb2:	00 00                	add    BYTE PTR [rax],al
     eb4:	00 83 01 00 00 01    	add    BYTE PTR [rbx+0x1000001],al
     eba:	57                   	push   rdi
     ebb:	bd 02 00 00 04       	mov    ebp,0x4000002
     ec0:	21 0f                	and    DWORD PTR [rdi],ecx
     ec2:	01 00                	add    DWORD PTR [rax],eax
     ec4:	00 1d 3e 07 00 00    	add    BYTE PTR [rip+0x73e],bl        # 1608 <__abi_tag-0x3fed74>
     eca:	7b 02                	jnp    ece <__abi_tag-0x3ff4ae>
     ecc:	00 00                	add    BYTE PTR [rax],al
     ece:	04 21                	add    al,0x21
     ed0:	df 01                	fild   WORD PTR [rcx]
     ed2:	00 00                	add    BYTE PTR [rax],al
     ed4:	1e                   	(bad)  
     ed5:	9d                   	popf   
     ed6:	07                   	(bad)  
     ed7:	00 00                	add    BYTE PTR [rax],al
     ed9:	e4 02                	in     al,0x2
     edb:	00 00                	add    BYTE PTR [rax],al
     edd:	04 22                	add    al,0x22
     edf:	81 02 00 00 1e fa    	add    DWORD PTR [rdx],0xfa1e0000
     ee5:	07                   	(bad)  
     ee6:	00 00                	add    BYTE PTR [rax],al
     ee8:	ed                   	in     eax,dx
     ee9:	03 00                	add    eax,DWORD PTR [rax]
     eeb:	00 04 23             	add    BYTE PTR [rbx+riz*1],al
     eee:	2a 00                	sub    al,BYTE PTR [rax]
     ef0:	00 00                	add    BYTE PTR [rax],al
     ef2:	1e                   	(bad)  
     ef3:	f9                   	stc    
     ef4:	08 00                	or     BYTE PTR [rax],al
     ef6:	00 db                	add    bl,bl
     ef8:	03 00                	add    eax,DWORD PTR [rax]
     efa:	00 04 24             	add    BYTE PTR [rsp],al
     efd:	dc 00                	fadd   QWORD PTR [rax]
     eff:	00 00                	add    BYTE PTR [rax],al
     f01:	1f                   	(bad)  
     f02:	af                   	scas   eax,DWORD PTR es:[rdi]
     f03:	01 00                	add    DWORD PTR [rax],eax
     f05:	00 40 00             	add    BYTE PTR [rax+0x0],al
     f08:	00 00                	add    BYTE PTR [rax],al
     f0a:	04 24                	add    al,0x24
     f0c:	1c 0b                	sbb    al,0xb
     f0e:	8d 08                	lea    ecx,[rax]
     f10:	00 00                	add    BYTE PTR [rax],al
     f12:	bb 01 00 00 0b       	mov    ebx,0xb000001
     f17:	c3                   	ret    
     f18:	08 00                	or     BYTE PTR [rax],al
     f1a:	00 c6                	add    dh,al
     f1c:	01 00                	add    DWORD PTR [rax],eax
     f1e:	00 0c f2             	add    BYTE PTR [rdx+rsi*8],cl
     f21:	16                   	(bad)  
     f22:	40 00 00             	rex add BYTE PTR [rax],al
     f25:	00 00                	add    BYTE PTR [rax],al
     f27:	00 35 00 00 00 0d    	add    BYTE PTR [rip+0xd000000],dh        # d000f2d <__TMC_END__+0xcbfbdf5>
     f2d:	57                   	push   rdi
     f2e:	08 00                	or     BYTE PTR [rax],al
     f30:	00 d2                	add    dl,dl
     f32:	01 00                	add    DWORD PTR [rax],eax
     f34:	00 00                	add    BYTE PTR [rax],al
     f36:	00 1f                	add    BYTE PTR [rdi],bl
     f38:	af                   	scas   eax,DWORD PTR es:[rdi]
     f39:	03 00                	add    eax,DWORD PTR [rax]
     f3b:	00 70 00             	add    BYTE PTR [rax+0x0],dh
     f3e:	00 00                	add    BYTE PTR [rax],al
     f40:	04 27                	add    al,0x27
     f42:	09 0b                	or     DWORD PTR [rbx],ecx
     f44:	78 09                	js     f4f <__abi_tag-0x3ff42d>
     f46:	00 00                	add    BYTE PTR [rax],al
     f48:	bb 03 00 00 0b       	mov    ebx,0xb000003
     f4d:	ae                   	scas   al,BYTE PTR es:[rdi]
     f4e:	09 00                	or     DWORD PTR [rax],eax
     f50:	00 c6                	add    dh,al
     f52:	03 00                	add    eax,DWORD PTR [rax]
     f54:	00 0b                	add    BYTE PTR [rbx],cl
     f56:	42 09 00             	rex.X or DWORD PTR [rax],eax
     f59:	00 d1                	add    cl,dl
     f5b:	03 00                	add    eax,DWORD PTR [rax]
     f5d:	00 0d e4 09 00 00    	add    BYTE PTR [rip+0x9e4],cl        # 1947 <__abi_tag-0x3fea35>
     f63:	dc 03                	fadd   QWORD PTR [rbx]
     f65:	00 00                	add    BYTE PTR [rax],al
     f67:	00 0e                	add    BYTE PTR [rsi],cl
     f69:	c6 04 00 00          	mov    BYTE PTR [rax+rax*1],0x0
     f6d:	e3 16                	jrcxz  f85 <__abi_tag-0x3ff3f7>
     f6f:	40 00 00             	rex add BYTE PTR [rax],al
     f72:	00 00                	add    BYTE PTR [rax],al
     f74:	00 0e                	add    BYTE PTR [rsi],cl
     f76:	90                   	nop
     f77:	01 00                	add    DWORD PTR [rax],eax
     f79:	00 37                	add    BYTE PTR [rdi],dh
     f7b:	18 40 00             	sbb    BYTE PTR [rax+0x0],al
     f7e:	00 00                	add    BYTE PTR [rax],al
     f80:	00 00                	add    BYTE PTR [rax],al
     f82:	00 20                	add    BYTE PTR [rax],ah
     f84:	98                   	cwde   
     f85:	02 00                	add    al,BYTE PTR [rax]
     f87:	00 08                	add    BYTE PTR [rax],cl
     f89:	1d 0f 01 00 00       	sbb    eax,0x10f
     f8e:	10 dc                	adc    ah,bl
     f90:	04 00                	add    al,0x0
     f92:	00 10                	add    BYTE PTR [rax],dl
     f94:	e6 04                	out    0x4,al
     f96:	00 00                	add    BYTE PTR [rax],al
     f98:	00 02                	add    BYTE PTR [rdx],al
     f9a:	e1 04                	loope  fa0 <__abi_tag-0x3ff3dc>
     f9c:	00 00                	add    BYTE PTR [rax],al
     f9e:	11 89 03 00 00 02    	adc    DWORD PTR [rcx+0x2000003],ecx
     fa4:	eb 04                	jmp    faa <__abi_tag-0x3ff3d2>
     fa6:	00 00                	add    BYTE PTR [rax],al
     fa8:	21 e8                	and    eax,ebp
     faa:	03 00                	add    eax,DWORD PTR [rax]
     fac:	00 10                	add    BYTE PTR [rax],dl
     fae:	f6 04 00 00          	test   BYTE PTR [rax+rax*1],0x0
     fb2:	00 02                	add    BYTE PTR [rdx],al
     fb4:	fb                   	sti    
     fb5:	04 00                	add    al,0x0
     fb7:	00 22                	add    BYTE PTR [rdx],ah
     fb9:	00 6d 04             	add    BYTE PTR [rbp+0x4],ch
     fbc:	00 00                	add    BYTE PTR [rax],al
     fbe:	04 00                	add    al,0x0
     fc0:	01 05 00 00 08 01    	add    DWORD PTR [rip+0x1080000],eax        # 1080fc6 <__TMC_END__+0xc7be8e>
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	00 00                	add    BYTE PTR [rax],al
     fca:	0c 00                	or     al,0x0
     fcc:	fb                   	sti    
     fcd:	03 00                	add    eax,DWORD PTR [rax]
     fcf:	00 5d 07             	add    BYTE PTR [rbp+0x7],bl
     fd2:	00 00                	add    BYTE PTR [rax],al
     fd4:	5a                   	pop    rdx
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	00 50 18             	add    BYTE PTR [rax+0x18],dl
     fda:	40 00 00             	rex add BYTE PTR [rax],al
     fdd:	00 00                	add    BYTE PTR [rax],al
     fdf:	00 73 01             	add    BYTE PTR [rbx+0x1],dh
     fe2:	00 00                	add    BYTE PTR [rax],al
     fe4:	02 03                	add    al,BYTE PTR [rbx]
     fe6:	30 00                	xor    BYTE PTR [rax],al
     fe8:	00 00                	add    BYTE PTR [rax],al
     fea:	04 3c                	add    al,0x3c
     fec:	00 00                	add    BYTE PTR [rax],al
     fee:	00 56 02             	add    BYTE PTR [rsi+0x2],dl
     ff1:	00 00                	add    BYTE PTR [rax],al
     ff3:	03 bb 02 05 38 03    	add    edi,DWORD PTR [rbx+0x3380502]
     ff9:	b1 02                	mov    cl,0x2
     ffb:	06                   	(bad)  
     ffc:	09 02                	or     DWORD PTR [rdx],eax
     ffe:	00 00                	add    BYTE PTR [rax],al
    1000:	aa                   	stos   BYTE PTR es:[rdi],al
    1001:	00 00                	add    BYTE PTR [rax],al
    1003:	00 03                	add    BYTE PTR [rbx],al
    1005:	b3 02                	mov    bl,0x2
    1007:	00 06                	add    BYTE PTR [rsi],al
    1009:	10 02                	adc    BYTE PTR [rdx],al
    100b:	00 00                	add    BYTE PTR [rax],al
    100d:	aa                   	stos   BYTE PTR es:[rdi],al
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	00 03                	add    BYTE PTR [rbx],al
    1012:	b4 02                	mov    ah,0x2
    1014:	04 06                	add    al,0x6
    1016:	18 02                	sbb    BYTE PTR [rdx],al
    1018:	00 00                	add    BYTE PTR [rax],al
    101a:	d2 00                	rol    BYTE PTR [rax],cl
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	03 b5 02 08 06 21    	add    esi,DWORD PTR [rbp+0x21060802]
    1024:	02 00                	add    al,BYTE PTR [rax]
    1026:	00 fa                	add    dl,bh
    1028:	00 00                	add    BYTE PTR [rax],al
    102a:	00 03                	add    BYTE PTR [rbx],al
    102c:	b6 02                	mov    dh,0x2
    102e:	10 06                	adc    BYTE PTR [rsi],al
    1030:	29 02                	sub    DWORD PTR [rdx],eax
    1032:	00 00                	add    BYTE PTR [rax],al
    1034:	fa                   	cli    
    1035:	00 00                	add    BYTE PTR [rax],al
    1037:	00 03                	add    BYTE PTR [rbx],al
    1039:	b7 02                	mov    bh,0x2
    103b:	18 06                	sbb    BYTE PTR [rsi],al
    103d:	31 02                	xor    DWORD PTR [rdx],eax
    103f:	00 00                	add    BYTE PTR [rax],al
    1041:	05 01 00 00 03       	add    eax,0x3000001
    1046:	b8 02 20 06 46       	mov    eax,0x46062002
    104b:	02 00                	add    al,BYTE PTR [rax]
    104d:	00 05 01 00 00 03    	add    BYTE PTR [rip+0x3000001],al        # 3001054 <__TMC_END__+0x2bfbf1c>
    1053:	b9 02 28 06 4e       	mov    ecx,0x4e062802
    1058:	02 00                	add    al,BYTE PTR [rax]
    105a:	00 05 01 00 00 03    	add    BYTE PTR [rip+0x3000001],al        # 3001061 <__TMC_END__+0x2bfbf29>
    1060:	ba 02 30 00 07       	mov    edx,0x7003002
    1065:	b5 00                	mov    ch,0x0
    1067:	00 00                	add    BYTE PTR [rax],al
    1069:	0c 01                	or     al,0x1
    106b:	00 00                	add    BYTE PTR [rax],al
    106d:	03 21                	add    esp,DWORD PTR [rcx]
    106f:	07                   	(bad)  
    1070:	c0 00 00             	rol    BYTE PTR [rax],0x0
    1073:	00 03                	add    BYTE PTR [rbx],al
    1075:	01 00                	add    DWORD PTR [rax],eax
    1077:	00 02                	add    BYTE PTR [rdx],al
    1079:	1a 07                	sbb    al,BYTE PTR [rdi]
    107b:	cb                   	retf   
    107c:	00 00                	add    BYTE PTR [rax],al
    107e:	00 01                	add    BYTE PTR [rcx],al
    1080:	01 00                	add    DWORD PTR [rax],eax
    1082:	00 01                	add    BYTE PTR [rcx],al
    1084:	2a 08                	sub    cl,BYTE PTR [rax]
    1086:	24 01                	and    al,0x1
    1088:	00 00                	add    BYTE PTR [rax],al
    108a:	07                   	(bad)  
    108b:	04 07                	add    al,0x7
    108d:	dd 00                	fld    QWORD PTR [rax]
    108f:	00 00                	add    BYTE PTR [rax],al
    1091:	4f 01 00             	rex.WRXB add QWORD PTR [r8],r8
    1094:	00 03                	add    BYTE PTR [rbx],al
    1096:	30 07                	xor    BYTE PTR [rdi],al
    1098:	e8 00 00 00 33       	call   3300109d <__TMC_END__+0x32bfbf65>
    109d:	01 00                	add    DWORD PTR [rax],eax
    109f:	00 02                	add    BYTE PTR [rdx],al
    10a1:	1b 07                	sbb    eax,DWORD PTR [rdi]
    10a3:	f3 00 00             	repz add BYTE PTR [rax],al
    10a6:	00 31                	add    BYTE PTR [rcx],dh
    10a8:	01 00                	add    DWORD PTR [rax],eax
    10aa:	00 01                	add    BYTE PTR [rcx],al
    10ac:	2d 08 1f 01 00       	sub    eax,0x11f08
    10b1:	00 07                	add    BYTE PTR [rdi],al
    10b3:	08 07                	or     BYTE PTR [rdi],al
    10b5:	dd 00                	fld    QWORD PTR [rax]
    10b7:	00 00                	add    BYTE PTR [rax],al
    10b9:	3c 01                	cmp    al,0x1
    10bb:	00 00                	add    BYTE PTR [rax],al
    10bd:	03 2c 07             	add    ebp,DWORD PTR [rdi+rax*1]
    10c0:	dd 00                	fld    QWORD PTR [rax]
    10c2:	00 00                	add    BYTE PTR [rax],al
    10c4:	3a 02                	cmp    al,BYTE PTR [rdx]
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	03 27                	add    esp,DWORD PTR [rdi]
    10ca:	09 50 18             	or     DWORD PTR [rax+0x18],edx
    10cd:	40 00 00             	rex add BYTE PTR [rax],al
    10d0:	00 00                	add    BYTE PTR [rax],al
    10d2:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
    10d5:	00 00                	add    BYTE PTR [rax],al
    10d7:	01 57 48             	add    DWORD PTR [rdi+0x48],edx
    10da:	01 00                	add    DWORD PTR [rax],eax
    10dc:	00 0a                	add    BYTE PTR [rdx],cl
    10de:	41 0a 00             	or     al,BYTE PTR [r8]
    10e1:	00 50 01             	add    BYTE PTR [rax+0x1],dl
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	0a 77 0a             	or     dh,BYTE PTR [rdi+0xa]
    10e9:	00 00                	add    BYTE PTR [rax],al
    10eb:	5b                   	pop    rbx
    10ec:	01 00                	add    DWORD PTR [rax],eax
    10ee:	00 0b                	add    BYTE PTR [rbx],cl
    10f0:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    10f1:	0a 00                	or     al,BYTE PTR [rax]
    10f3:	00 66 01             	add    BYTE PTR [rsi+0x1],ah
    10f6:	00 00                	add    BYTE PTR [rax],al
    10f8:	0b d0                	or     edx,eax
    10fa:	0a 00                	or     al,BYTE PTR [rax]
    10fc:	00 71 01             	add    BYTE PTR [rcx+0x1],dh
    10ff:	00 00                	add    BYTE PTR [rax],al
    1101:	00 0c 32             	add    BYTE PTR [rdx+rsi*1],cl
    1104:	04 00                	add    al,0x0
    1106:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
    1109:	01 0d 42 04 00 00    	add    DWORD PTR [rip+0x442],ecx        # 1551 <__abi_tag-0x3fee2b>
    110f:	04 07                	add    al,0x7
    1111:	7d 01                	jge    1114 <__abi_tag-0x3ff268>
    1113:	00 00                	add    BYTE PTR [rax],al
    1115:	0d 47 04 00 00       	or     eax,0x447
    111a:	04 07                	add    al,0x7
    111c:	2b 00                	sub    eax,DWORD PTR [rax]
    111e:	00 00                	add    BYTE PTR [rax],al
    1120:	0e                   	(bad)  
    1121:	4c 04 00             	rex.WR add al,0x0
    1124:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    1127:	82                   	(bad)  
    1128:	01 00                	add    DWORD PTR [rax],eax
    112a:	00 0e                	add    BYTE PTR [rsi],cl
    112c:	e9 03 00 00 04       	jmp    4001134 <__TMC_END__+0x3bfbffc>
    1131:	0e                   	(bad)  
    1132:	82                   	(bad)  
    1133:	01 00                	add    DWORD PTR [rax],eax
    1135:	00 00                	add    BYTE PTR [rax],al
    1137:	03 82 01 00 00 03    	add    eax,DWORD PTR [rdx+0x3000001]
    113d:	87 01                	xchg   DWORD PTR [rcx],eax
    113f:	00 00                	add    BYTE PTR [rax],al
    1141:	07                   	(bad)  
    1142:	92                   	xchg   edx,eax
    1143:	01 00                	add    DWORD PTR [rax],eax
    1145:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
    1148:	00 00                	add    BYTE PTR [rax],al
    114a:	05 24 0f 66 02       	add    eax,0x2660f24
    114f:	00 00                	add    BYTE PTR [rax],al
    1151:	10 05 21 10 fa 01    	adc    BYTE PTR [rip+0x1fa1021],al        # 1fa2178 <__TMC_END__+0x1b9d040>
    1157:	00 00                	add    BYTE PTR [rax],al
    1159:	2b 00                	sub    eax,DWORD PTR [rax]
    115b:	00 00                	add    BYTE PTR [rax],al
    115d:	05 22 00 10 61       	add    eax,0x61100022
    1162:	02 00                	add    al,BYTE PTR [rax]
    1164:	00 b3 01 00 00 05    	add    BYTE PTR [rbx+0x5000001],dh
    116a:	23 08                	and    ecx,DWORD PTR [rax]
    116c:	00 03                	add    BYTE PTR [rbx],al
    116e:	92                   	xchg   edx,eax
    116f:	01 00                	add    DWORD PTR [rax],eax
    1171:	00 11                	add    BYTE PTR [rcx],dl
    1173:	a0 18 40 00 00 00 00 	movabs al,ds:0xb400000000004018
    117a:	00 b4 
    117c:	00 00                	add    BYTE PTR [rax],al
    117e:	00 01                	add    BYTE PTR [rcx],al
    1180:	57                   	push   rdi
    1181:	82                   	(bad)  
    1182:	02 00                	add    al,BYTE PTR [rax]
    1184:	00 04 15 af 02 00 00 	add    BYTE PTR [rdx*1+0x2af],al
    118b:	12 f3                	adc    dh,bl
    118d:	0a 00                	or     al,BYTE PTR [rax]
    118f:	00 7b 02             	add    BYTE PTR [rbx+0x2],bh
    1192:	00 00                	add    BYTE PTR [rax],al
    1194:	04 15                	add    al,0x15
    1196:	b6 02                	mov    dh,0x2
    1198:	00 00                	add    BYTE PTR [rax],al
    119a:	13 68 0b             	adc    ebp,DWORD PTR [rax+0xb]
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	63 04 00             	movsxd eax,DWORD PTR [rax+rax*1]
    11a2:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    11a5:	4d 03 00             	add    r8,QWORD PTR [r8]
    11a8:	00 14 d0             	add    BYTE PTR [rax+rdx*8],dl
    11ab:	00 00                	add    BYTE PTR [rax],al
    11ad:	00 13                	add    BYTE PTR [rbx],dl
    11af:	9e                   	sahf   
    11b0:	0b 00                	or     eax,DWORD PTR [rax]
    11b2:	00 6f 04             	add    BYTE PTR [rdi+0x4],ch
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	04 1c                	add    al,0x1c
    11b9:	33 04 00             	xor    eax,DWORD PTR [rax+rax*1]
    11bc:	00 15 48 01 00 00    	add    BYTE PTR [rip+0x148],dl        # 130a <__abi_tag-0x3ff072>
    11c2:	a0 00 00 00 04 1e 05 	movabs al,ds:0xb0a051e04000000
    11c9:	0a 0b 
    11cb:	0c 00                	or     al,0x0
    11cd:	00 50 01             	add    BYTE PTR [rax+0x1],dl
    11d0:	00 00                	add    BYTE PTR [rax],al
    11d2:	0a d5                	or     dl,ch
    11d4:	0b 00                	or     eax,DWORD PTR [rax]
    11d6:	00 5b 01             	add    BYTE PTR [rbx+0x1],bl
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	0b 41 0c             	or     eax,DWORD PTR [rcx+0xc]
    11de:	00 00                	add    BYTE PTR [rax],al
    11e0:	66 01 00             	add    WORD PTR [rax],ax
    11e3:	00 0b                	add    BYTE PTR [rbx],cl
    11e5:	77 0c                	ja     11f3 <__abi_tag-0x3ff189>
    11e7:	00 00                	add    BYTE PTR [rax],al
    11e9:	71 01                	jno    11ec <__abi_tag-0x3ff190>
    11eb:	00 00                	add    BYTE PTR [rax],al
    11ed:	00 00                	add    BYTE PTR [rax],al
    11ef:	00 11                	add    BYTE PTR [rcx],dl
    11f1:	60                   	(bad)  
    11f2:	19 40 00             	sbb    DWORD PTR [rax+0x0],eax
    11f5:	00 00                	add    BYTE PTR [rax],al
    11f7:	00 00                	add    BYTE PTR [rax],al
    11f9:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    11fc:	00 01                	add    BYTE PTR [rcx],al
    11fe:	57                   	push   rdi
    11ff:	98                   	cwde   
    1200:	02 00                	add    al,BYTE PTR [rax]
    1202:	00 04 23             	add    BYTE PTR [rbx+riz*1],al
    1205:	2a 00                	sub    al,BYTE PTR [rax]
    1207:	00 00                	add    BYTE PTR [rax],al
    1209:	12 9a 0c 00 00 42    	adc    bl,BYTE PTR [rdx+0x4200000c]
    120f:	04 00                	add    al,0x0
    1211:	00 04 23             	add    BYTE PTR [rbx+riz*1],al
    1214:	50                   	push   rax
    1215:	04 00                	add    al,0x0
    1217:	00 12                	add    BYTE PTR [rdx],dl
    1219:	f9                   	stc    
    121a:	0c 00                	or     al,0x0
    121c:	00 73 04             	add    BYTE PTR [rbx+0x4],dh
    121f:	00 00                	add    BYTE PTR [rax],al
    1221:	04 23                	add    al,0x23
    1223:	5a                   	pop    rdx
    1224:	04 00                	add    al,0x0
    1226:	00 13                	add    BYTE PTR [rbx],dl
    1228:	55                   	push   rbp
    1229:	0d 00 00 e9 03       	or     eax,0x3e90000
    122e:	00 00                	add    BYTE PTR [rax],al
    1230:	04 24                	add    al,0x24
    1232:	50                   	push   rax
    1233:	04 00                	add    al,0x0
    1235:	00 16                	add    BYTE PTR [rsi],dl
    1237:	01 5f 86             	add    DWORD PTR [rdi-0x7a],ebx
    123a:	19 40 00             	sbb    DWORD PTR [rax+0x0],eax
    123d:	00 00                	add    BYTE PTR [rax],al
    123f:	00 00                	add    BYTE PTR [rax],al
    1241:	00 11                	add    BYTE PTR [rcx],dl
    1243:	b0 19                	mov    al,0x19
    1245:	40 00 00             	rex add BYTE PTR [rax],al
    1248:	00 00                	add    BYTE PTR [rax],al
    124a:	00 13                	add    BYTE PTR [rbx],dl
    124c:	00 00                	add    BYTE PTR [rax],al
    124e:	00 01                	add    BYTE PTR [rcx],al
    1250:	57                   	push   rdi
    1251:	50                   	push   rax
    1252:	04 00                	add    al,0x0
    1254:	00 04 2d af 02 00 00 	add    BYTE PTR [rbp*1+0x2af],al
    125b:	17                   	(bad)  
    125c:	01 55 9c             	add    DWORD PTR [rbp-0x64],edx
    125f:	02 00                	add    al,BYTE PTR [rax]
    1261:	00 04 2d 6a 04 00 00 	add    BYTE PTR [rbp*1+0x46a],al
    1268:	00 08                	add    BYTE PTR [rax],cl
    126a:	2d 01 00 00 05       	sub    eax,0x5000001
    126f:	04 03                	add    al,0x3
    1271:	bb 02 00 00 07       	mov    ebx,0x7000002
    1276:	c6 02 00             	mov    BYTE PTR [rdx],0x0
    1279:	00 79 02             	add    BYTE PTR [rcx+0x2],bh
    127c:	00 00                	add    BYTE PTR [rax],al
    127e:	05 2f 18 40 05       	add    eax,0x540182f
    1283:	26 10 ca             	es adc dl,cl
    1286:	01 00                	add    DWORD PTR [rax],eax
    1288:	00 2b                	add    BYTE PTR [rbx],ch
    128a:	03 00                	add    eax,DWORD PTR [rax]
    128c:	00 05 27 00 10 dd    	add    BYTE PTR [rip+0xffffffffdd100027],al        # ffffffffdd1012b9 <__TMC_END__+0xffffffffdccfc181>
    1292:	01 00                	add    DWORD PTR [rax],eax
    1294:	00 4d 03             	add    BYTE PTR [rbp+0x3],cl
    1297:	00 00                	add    BYTE PTR [rax],al
    1299:	05 28 08 10 ea       	add    eax,0xea100828
    129e:	01 00                	add    DWORD PTR [rax],eax
    12a0:	00 2b                	add    BYTE PTR [rbx],ch
    12a2:	03 00                	add    eax,DWORD PTR [rax]
    12a4:	00 05 29 10 10 e6    	add    BYTE PTR [rip+0xffffffffe6101029],al        # ffffffffe61022d3 <__TMC_END__+0xffffffffe5cfd19b>
    12aa:	01 00                	add    DWORD PTR [rax],eax
    12ac:	00 4d 03             	add    BYTE PTR [rbp+0x3],cl
    12af:	00 00                	add    BYTE PTR [rax],al
    12b1:	05 2a 18 10 f6       	add    eax,0xf610182a
    12b6:	01 00                	add    DWORD PTR [rax],eax
    12b8:	00 2b                	add    BYTE PTR [rbx],ch
    12ba:	03 00                	add    eax,DWORD PTR [rax]
    12bc:	00 05 2b 20 10 f2    	add    BYTE PTR [rip+0xfffffffff210202b],al        # fffffffff21032ed <__TMC_END__+0xfffffffff1cfe1b5>
    12c2:	01 00                	add    DWORD PTR [rax],eax
    12c4:	00 4d 03             	add    BYTE PTR [rbp+0x3],cl
    12c7:	00 00                	add    BYTE PTR [rax],al
    12c9:	05 2c 28 10 e0       	add    eax,0xe010282c
    12ce:	02 00                	add    al,BYTE PTR [rax]
    12d0:	00 58 03             	add    BYTE PTR [rax+0x3],bl
    12d3:	00 00                	add    BYTE PTR [rax],al
    12d5:	05 2d 30 10 3c       	add    eax,0x3c10302d
    12da:	04 00                	add    al,0x0
    12dc:	00 82 01 00 00 05    	add    BYTE PTR [rdx+0x5000001],al
    12e2:	2e 38 00             	cs cmp BYTE PTR [rax],al
    12e5:	03 30                	add    esi,DWORD PTR [rax]
    12e7:	03 00                	add    eax,DWORD PTR [rax]
    12e9:	00 07                	add    BYTE PTR [rdi],al
    12eb:	3b 03                	cmp    eax,DWORD PTR [rbx]
    12ed:	00 00                	add    BYTE PTR [rax],al
    12ef:	d5                   	(bad)  
    12f0:	01 00                	add    DWORD PTR [rax],eax
    12f2:	00 02                	add    BYTE PTR [rdx],al
    12f4:	18 07                	sbb    BYTE PTR [rdi],al
    12f6:	46 03 00             	rex.RX add r8d,DWORD PTR [rax]
    12f9:	00 d3                	add    bl,dl
    12fb:	01 00                	add    DWORD PTR [rax],eax
    12fd:	00 01                	add    BYTE PTR [rcx],al
    12ff:	26 08 9f 00 00 00 08 	es or  BYTE PTR [rdi+0x8000000],bl
    1306:	01 07                	add    DWORD PTR [rdi],eax
    1308:	f3 00 00             	repz add BYTE PTR [rax],al
    130b:	00 dd                	add    ch,bl
    130d:	04 00                	add    al,0x0
    130f:	00 06                	add    BYTE PTR [rsi],al
    1311:	2e 03 5d 03          	cs add ebx,DWORD PTR [rbp+0x3]
    1315:	00 00                	add    BYTE PTR [rax],al
    1317:	07                   	(bad)  
    1318:	68 03 00 00 a5       	push   0xffffffffa5000003
    131d:	01 00                	add    DWORD PTR [rax],eax
    131f:	00 03                	add    BYTE PTR [rbx],al
    1321:	61                   	(bad)  
    1322:	18 40 03             	sbb    BYTE PTR [rax+0x3],al
    1325:	51                   	push   rcx
    1326:	10 97 00 00 00 15    	adc    BYTE PTR [rdi+0x15000000],dl
    132c:	04 00                	add    al,0x0
    132e:	00 03                	add    BYTE PTR [rbx],al
    1330:	53                   	push   rbx
    1331:	00 10                	add    BYTE PTR [rax],dl
    1333:	c1 00 00             	rol    DWORD PTR [rax],0x0
    1336:	00 28                	add    BYTE PTR [rax],ch
    1338:	04 00                	add    al,0x0
    133a:	00 03                	add    BYTE PTR [rbx],al
    133c:	54                   	push   rsp
    133d:	10 10                	adc    BYTE PTR [rax],dl
    133f:	ed                   	in     eax,dx
    1340:	00 00                	add    BYTE PTR [rax],al
    1342:	00 28                	add    BYTE PTR [rax],ch
    1344:	04 00                	add    al,0x0
    1346:	00 03                	add    BYTE PTR [rbx],al
    1348:	55                   	push   rbp
    1349:	12 10                	adc    dl,BYTE PTR [rax]
    134b:	f7 00 00 00 aa 00    	test   DWORD PTR [rax],0xaa0000
    1351:	00 00                	add    BYTE PTR [rax],al
    1353:	03 56 14             	add    edx,DWORD PTR [rsi+0x14]
    1356:	10 17                	adc    BYTE PTR [rdi],dl
    1358:	01 00                	add    DWORD PTR [rax],eax
    135a:	00 fa                	add    dl,bh
    135c:	00 00                	add    BYTE PTR [rax],al
    135e:	00 03                	add    BYTE PTR [rbx],al
    1360:	57                   	push   rdi
    1361:	18 10                	sbb    BYTE PTR [rax],dl
    1363:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
    1366:	00 d2                	add    dl,dl
    1368:	00 00                	add    BYTE PTR [rax],al
    136a:	00 03                	add    BYTE PTR [rbx],al
    136c:	58                   	pop    rax
    136d:	20 10                	and    BYTE PTR [rax],dl
    136f:	59                   	pop    rcx
    1370:	01 00                	add    DWORD PTR [rax],eax
    1372:	00 d2                	add    dl,dl
    1374:	00 00                	add    BYTE PTR [rax],al
    1376:	00 03                	add    BYTE PTR [rbx],al
    1378:	59                   	pop    rcx
    1379:	28 10                	sub    BYTE PTR [rax],dl
    137b:	61                   	(bad)  
    137c:	01 00                	add    DWORD PTR [rax],eax
    137e:	00 aa 00 00 00 03    	add    BYTE PTR [rdx+0x3000000],ch
    1384:	5a                   	pop    rdx
    1385:	30 10                	xor    BYTE PTR [rax],dl
    1387:	69 01 00 00 28 04    	imul   eax,DWORD PTR [rcx],0x4280000
    138d:	00 00                	add    BYTE PTR [rax],al
    138f:	03 5b 34             	add    ebx,DWORD PTR [rbx+0x34]
    1392:	10 72 01             	adc    BYTE PTR [rdx+0x1],dh
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	28 04 00             	sub    BYTE PTR [rax+rax*1],al
    139a:	00 03                	add    BYTE PTR [rbx],al
    139c:	5c                   	pop    rsp
    139d:	36 10 7e 01          	ss adc BYTE PTR [rsi+0x1],bh
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	28 04 00             	sub    BYTE PTR [rax+rax*1],al
    13a6:	00 03                	add    BYTE PTR [rbx],al
    13a8:	5d                   	pop    rbp
    13a9:	38 10                	cmp    BYTE PTR [rax],dl
    13ab:	86 01                	xchg   BYTE PTR [rcx],al
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	28 04 00             	sub    BYTE PTR [rax+rax*1],al
    13b2:	00 03                	add    BYTE PTR [rbx],al
    13b4:	5e                   	pop    rsi
    13b5:	3a 10                	cmp    dl,BYTE PTR [rax]
    13b7:	92                   	xchg   edx,eax
    13b8:	01 00                	add    DWORD PTR [rax],eax
    13ba:	00 28                	add    BYTE PTR [rax],ch
    13bc:	04 00                	add    al,0x0
    13be:	00 03                	add    BYTE PTR [rbx],al
    13c0:	5f                   	pop    rdi
    13c1:	3c 10                	cmp    al,0x10
    13c3:	9a                   	(bad)  
    13c4:	01 00                	add    DWORD PTR [rax],eax
    13c6:	00 28                	add    BYTE PTR [rax],ch
    13c8:	04 00                	add    al,0x0
    13ca:	00 03                	add    BYTE PTR [rbx],al
    13cc:	60                   	(bad)  
    13cd:	3e 00 19             	ds add BYTE PTR [rcx],bl
    13d0:	46 03 00             	rex.RX add r8d,DWORD PTR [rax]
    13d3:	00 1a                	add    BYTE PTR [rdx],bl
    13d5:	21 04 00             	and    DWORD PTR [rax+rax*1],eax
    13d8:	00 10                	add    BYTE PTR [rax],dl
    13da:	00 1b                	add    BYTE PTR [rbx],bl
    13dc:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    13dd:	00 00                	add    BYTE PTR [rax],al
    13df:	00 08                	add    BYTE PTR [rax],cl
    13e1:	07                   	(bad)  
    13e2:	07                   	(bad)  
    13e3:	33 04 00             	xor    eax,DWORD PTR [rax+rax*1]
    13e6:	00 e2                	add    dl,ah
    13e8:	00 00                	add    BYTE PTR [rax],al
    13ea:	00 03                	add    BYTE PTR [rbx],al
    13ec:	1c 07                	sbb    al,0x7
    13ee:	3e 04 00             	ds add al,0x0
    13f1:	00 d9                	add    cl,bl
    13f3:	00 00                	add    BYTE PTR [rax],al
    13f5:	00 02                	add    BYTE PTR [rdx],al
    13f7:	19 07                	sbb    DWORD PTR [rdi],eax
    13f9:	49 04 00             	rex.WB add al,0x0
    13fc:	00 d7                	add    bh,dl
    13fe:	00 00                	add    BYTE PTR [rax],al
    1400:	00 01                	add    BYTE PTR [rcx],al
    1402:	28 08                	sub    BYTE PTR [rax],cl
    1404:	c8 00 00 00          	enter  0x0,0x0
    1408:	07                   	(bad)  
    1409:	02 03                	add    al,BYTE PTR [rbx]
    140b:	55                   	push   rbp
    140c:	04 00                	add    al,0x0
    140e:	00 1c 87             	add    BYTE PTR [rdi+rax*4],bl
    1411:	01 00                	add    DWORD PTR [rax],eax
    1413:	00 03                	add    BYTE PTR [rbx],al
    1415:	5f                   	pop    rdi
    1416:	04 00                	add    al,0x0
    1418:	00 1d af 02 00 00    	add    BYTE PTR [rip+0x2af],bl        # 16cd <__abi_tag-0x3fecaf>
    141e:	1e                   	(bad)  
    141f:	6a 04                	push   0x4
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 03                	add    BYTE PTR [rbx],al
    1425:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1426:	04 00                	add    al,0x0
    1428:	00 1f                	add    BYTE PTR [rdi],bl
    142a:	00 4f 05             	add    BYTE PTR [rdi+0x5],cl
    142d:	00 00                	add    BYTE PTR [rax],al
    142f:	04 00                	add    al,0x0
    1431:	74 06                	je     1439 <__abi_tag-0x3fef43>
    1433:	00 00                	add    BYTE PTR [rax],al
    1435:	08 01                	or     BYTE PTR [rcx],al
    1437:	00 00                	add    BYTE PTR [rax],al
    1439:	00 00                	add    BYTE PTR [rax],al
    143b:	0c 00                	or     al,0x0
    143d:	7c 04                	jl     1443 <__abi_tag-0x3fef39>
    143f:	00 00                	add    BYTE PTR [rax],al
    1441:	51                   	push   rcx
    1442:	09 00                	or     DWORD PTR [rax],eax
    1444:	00 5a 00             	add    BYTE PTR [rdx+0x0],bl
    1447:	00 00                	add    BYTE PTR [rax],al
    1449:	d0 19                	rcr    BYTE PTR [rcx],1
    144b:	40 00 00             	rex add BYTE PTR [rax],al
    144e:	00 00                	add    BYTE PTR [rax],al
    1450:	00 74 01 00          	add    BYTE PTR [rcx+rax*1+0x0],dh
    1454:	00 02                	add    BYTE PTR [rdx],al
    1456:	03 d0                	add    edx,eax
    1458:	19 40 00             	sbb    DWORD PTR [rax+0x0],eax
    145b:	00 00                	add    BYTE PTR [rax],al
    145d:	00 00                	add    BYTE PTR [rax],al
    145f:	56                   	push   rsi
    1460:	00 00                	add    BYTE PTR [rax],al
    1462:	00 01                	add    BYTE PTR [rcx],al
    1464:	57                   	push   rdi
    1465:	cc                   	int3   
    1466:	02 00                	add    al,BYTE PTR [rax]
    1468:	00 01                	add    BYTE PTR [rcx],al
    146a:	07                   	(bad)  
    146b:	b6 00                	mov    dh,0x0
    146d:	00 00                	add    BYTE PTR [rax],al
    146f:	04 b1                	add    al,0xb1
    1471:	0d 00 00 c7 04       	or     eax,0x4c70000
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	01 07                	add    DWORD PTR [rdi],eax
    147a:	72 02                	jb     147e <__abi_tag-0x3feefe>
    147c:	00 00                	add    BYTE PTR [rax],al
    147e:	05 fd 0d 00 00       	add    eax,0xdfd
    1483:	cb                   	retf   
    1484:	04 00                	add    al,0x0
    1486:	00 01                	add    BYTE PTR [rcx],al
    1488:	08 b6 00 00 00 06    	or     BYTE PTR [rsi+0x6000000],dh
    148e:	9f                   	lahf   
    148f:	00 00                	add    BYTE PTR [rax],al
    1491:	00 f0                	add    al,dh
    1493:	19 40 00             	sbb    DWORD PTR [rax+0x0],eax
    1496:	00 00                	add    BYTE PTR [rax],al
    1498:	00 00                	add    BYTE PTR [rax],al
    149a:	07                   	(bad)  
    149b:	01 51 03             	add    DWORD PTR [rcx+0x3],edx
    149e:	10 ff                	adc    bh,bh
    14a0:	03 07                	add    eax,DWORD PTR [rdi]
    14a2:	01 54 02 10          	add    DWORD PTR [rdx+rax*1+0x10],edx
    14a6:	41 00 08             	add    BYTE PTR [r8],cl
    14a9:	ce                   	(bad)  
    14aa:	00 00                	add    BYTE PTR [rax],al
    14ac:	00 05 1a 40 00 00    	add    BYTE PTR [rip+0x401a],al        # 54cc <__abi_tag-0x3faeb0>
    14b2:	00 00                	add    BYTE PTR [rax],al
    14b4:	00 06                	add    BYTE PTR [rsi],al
    14b6:	fe 00                	inc    BYTE PTR [rax]
    14b8:	00 00                	add    BYTE PTR [rax],al
    14ba:	0c 1a                	or     al,0x1a
    14bc:	40 00 00             	rex add BYTE PTR [rax],al
    14bf:	00 00                	add    BYTE PTR [rax],al
    14c1:	00 07                	add    BYTE PTR [rdi],al
    14c3:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    14c6:	76 00                	jbe    14c8 <__abi_tag-0x3feeb4>
    14c8:	00 00                	add    BYTE PTR [rax],al
    14ca:	09 b0 01 00 00 02    	or     DWORD PTR [rax+0x2000001],esi
    14d0:	b5 b6                	mov    ch,0xb6
    14d2:	00 00                	add    BYTE PTR [rax],al
    14d4:	00 0a                	add    BYTE PTR [rdx],cl
    14d6:	bd 00 00 00 0a       	mov    ebp,0xa000000
    14db:	b6 00                	mov    dh,0x0
    14dd:	00 00                	add    BYTE PTR [rax],al
    14df:	0b 00                	or     eax,DWORD PTR [rax]
    14e1:	0c 2d                	or     al,0x2d
    14e3:	01 00                	add    DWORD PTR [rax],eax
    14e5:	00 05 04 0d c2 00    	add    BYTE PTR [rip+0xc20d04],al        # c221ef <__TMC_END__+0x81d0b7>
    14eb:	00 00                	add    BYTE PTR [rax],al
    14ed:	0e                   	(bad)  
    14ee:	c7 00 00 00 0c a8    	mov    DWORD PTR [rax],0xa80c0000
    14f4:	00 00                	add    BYTE PTR [rax],al
    14f6:	00 06                	add    BYTE PTR [rsi],al
    14f8:	01 0f                	add    DWORD PTR [rdi],ecx
    14fa:	b3 04                	mov    bl,0x4
    14fc:	00 00                	add    BYTE PTR [rax],al
    14fe:	03 7a 01             	add    edi,DWORD PTR [rdx+0x1]
    1501:	ea                   	(bad)  
    1502:	00 00                	add    BYTE PTR [rax],al
    1504:	00 0a                	add    BYTE PTR [rdx],cl
    1506:	b6 00                	mov    dh,0x0
    1508:	00 00                	add    BYTE PTR [rax],al
    150a:	0a f1                	or     dh,cl
    150c:	00 00                	add    BYTE PTR [rax],al
    150e:	00 0a                	add    BYTE PTR [rdx],cl
    1510:	f7 00 00 00 00 0c    	test   DWORD PTR [rax],0xc000000
    1516:	b9 04 00 00 05       	mov    ecx,0x5000004
    151b:	08 0d f6 00 00 00    	or     BYTE PTR [rip+0xf6],cl        # 1617 <__abi_tag-0x3fed65>
    1521:	10 0c 1f             	adc    BYTE PTR [rdi+rbx*1],cl
    1524:	01 00                	add    DWORD PTR [rax],eax
    1526:	00 07                	add    BYTE PTR [rdi],al
    1528:	08 0f                	or     BYTE PTR [rdi],cl
    152a:	bf 01 00 00 03       	mov    edi,0x3000001
    152f:	66 01 b6 00 00 00 0a 	add    WORD PTR [rsi+0xa000000],si
    1536:	b6 00                	mov    dh,0x0
    1538:	00 00                	add    BYTE PTR [rax],al
    153a:	00 03                	add    BYTE PTR [rbx],al
    153c:	30 1a                	xor    BYTE PTR [rdx],bl
    153e:	40 00 00             	rex add BYTE PTR [rax],al
    1541:	00 00                	add    BYTE PTR [rax],al
    1543:	00 a2 00 00 00 01    	add    BYTE PTR [rdx+0x1000000],ah
    1549:	57                   	push   rdi
    154a:	b5 01                	mov    ch,0x1
    154c:	00 00                	add    BYTE PTR [rax],al
    154e:	01 12                	add    DWORD PTR [rdx],edx
    1550:	b6 00                	mov    dh,0x0
    1552:	00 00                	add    BYTE PTR [rax],al
    1554:	04 46                	add    al,0x46
    1556:	0e                   	(bad)  
    1557:	00 00                	add    BYTE PTR [rax],al
    1559:	ba 01 00 00 01       	mov    edx,0x1000001
    155e:	12 b6 00 00 00 04    	adc    dh,BYTE PTR [rsi+0x4000000]
    1564:	92                   	xchg   edx,eax
    1565:	0e                   	(bad)  
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	e8 04 00 00 01       	call   1001571 <__TMC_END__+0xbfc439>
    156d:	12 2d 05 00 00 04    	adc    ch,BYTE PTR [rip+0x4000005]        # 4001578 <__TMC_END__+0x3bfc440>
    1573:	f1                   	int1   
    1574:	0e                   	(bad)  
    1575:	00 00                	add    BYTE PTR [rax],al
    1577:	e2 01                	loop   157a <__abi_tag-0x3fee02>
    1579:	00 00                	add    BYTE PTR [rax],al
    157b:	01 12                	add    DWORD PTR [rdx],edx
    157d:	37                   	(bad)  
    157e:	05 00 00 11 4d       	add    eax,0x4d110000
    1583:	1a 40 00             	sbb    al,BYTE PTR [rax+0x0]
    1586:	00 00                	add    BYTE PTR [rax],al
    1588:	00 00                	add    BYTE PTR [rax],al
    158a:	71 00                	jno    158c <__abi_tag-0x3fedf0>
    158c:	00 00                	add    BYTE PTR [rax],al
    158e:	12 02                	adc    al,BYTE PTR [rdx]
    1590:	91                   	xchg   ecx,eax
    1591:	00 ce                	add    dh,cl
    1593:	04 00                	add    al,0x0
    1595:	00 01                	add    BYTE PTR [rcx],al
    1597:	14 20                	adc    al,0x20
    1599:	05 00 00 05 3d       	add    eax,0x3d050000
    159e:	0f 00 00             	sldt   WORD PTR [rax]
    15a1:	d3 04 00             	rol    DWORD PTR [rax+rax*1],cl
    15a4:	00 01                	add    BYTE PTR [rcx],al
    15a6:	15 3c 05 00 00       	adc    eax,0x53c
    15ab:	05 99 0f 00 00       	add    eax,0xf99
    15b0:	e4 04                	in     al,0x4
    15b2:	00 00                	add    BYTE PTR [rax],al
    15b4:	01 1d 32 05 00 00    	add    DWORD PTR [rip+0x532],ebx        # 1aec <__abi_tag-0x3fe890>
    15ba:	00 06                	add    BYTE PTR [rsi],al
    15bc:	b2 01                	mov    dl,0x1
    15be:	00 00                	add    BYTE PTR [rax],al
    15c0:	60                   	(bad)  
    15c1:	1a 40 00             	sbb    al,BYTE PTR [rax+0x0]
    15c4:	00 00                	add    BYTE PTR [rax],al
    15c6:	00 00                	add    BYTE PTR [rax],al
    15c8:	07                   	(bad)  
    15c9:	01 54 02 7f          	add    DWORD PTR [rdx+rax*1+0x7f],edx
    15cd:	00 07                	add    BYTE PTR [rdi],al
    15cf:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    15d2:	7c 00                	jl     15d4 <__abi_tag-0x3feda8>
    15d4:	07                   	(bad)  
    15d5:	01 51 03             	add    DWORD PTR [rcx+0x3],edx
    15d8:	10 80 40 00 00 0f    	adc    BYTE PTR [rax+0xf000040],al
    15de:	c2 04 00             	ret    0x4
    15e1:	00 03                	add    BYTE PTR [rbx],al
    15e3:	73 01                	jae    15e6 <__abi_tag-0x3fed96>
    15e5:	ea                   	(bad)  
    15e6:	00 00                	add    BYTE PTR [rax],al
    15e8:	00 0a                	add    BYTE PTR [rdx],cl
    15ea:	b6 00                	mov    dh,0x0
    15ec:	00 00                	add    BYTE PTR [rax],al
    15ee:	0a 2a                	or     ch,BYTE PTR [rdx]
    15f0:	00 00                	add    BYTE PTR [rax],al
    15f2:	00 0a                	add    BYTE PTR [rdx],cl
    15f4:	f7 00 00 00 00 03    	test   DWORD PTR [rax],0x3000000
    15fa:	e0 1a                	loopne 1616 <__abi_tag-0x3fed66>
    15fc:	40 00 00             	rex add BYTE PTR [rax],al
    15ff:	00 00                	add    BYTE PTR [rax],al
    1601:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
    1605:	00 01                	add    BYTE PTR [rcx],al
    1607:	57                   	push   rdi
    1608:	45 03 00             	add    r8d,DWORD PTR [r8]
    160b:	00 01                	add    BYTE PTR [rcx],al
    160d:	29 b6 00 00 00 04    	sub    DWORD PTR [rsi+0x4000000],esi
    1613:	cf                   	iret   
    1614:	0f 00 00             	sldt   WORD PTR [rax]
    1617:	f6 01 00             	test   BYTE PTR [rcx],0x0
    161a:	00 01                	add    BYTE PTR [rcx],al
    161c:	29 e7                	sub    edi,esp
    161e:	02 00                	add    al,BYTE PTR [rax]
    1620:	00 05 44 10 00 00    	add    BYTE PTR [rip+0x1044],al        # 266a <__abi_tag-0x3fdd12>
    1626:	cb                   	retf   
    1627:	04 00                	add    al,0x0
    1629:	00 01                	add    BYTE PTR [rcx],al
    162b:	2a b6 00 00 00 06    	sub    dh,BYTE PTR [rsi+0x6000000]
    1631:	9f                   	lahf   
    1632:	00 00                	add    BYTE PTR [rax],al
    1634:	00 f4                	add    ah,dh
    1636:	1a 40 00             	sbb    al,BYTE PTR [rax+0x0]
    1639:	00 00                	add    BYTE PTR [rax],al
    163b:	00 00                	add    BYTE PTR [rax],al
    163d:	07                   	(bad)  
    163e:	01 54 01 30          	add    DWORD PTR [rcx+rax*1+0x30],edx
    1642:	00 06                	add    BYTE PTR [rsi],al
    1644:	b2 01                	mov    dl,0x1
    1646:	00 00                	add    BYTE PTR [rax],al
    1648:	0a 1b                	or     bl,BYTE PTR [rbx]
    164a:	40 00 00             	rex add BYTE PTR [rax],al
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	00 07                	add    BYTE PTR [rdi],al
    1651:	01 54 02 73          	add    DWORD PTR [rdx+rax*1+0x73],edx
    1655:	00 07                	add    BYTE PTR [rdi],al
    1657:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    165a:	10 20                	adc    BYTE PTR [rax],ah
    165c:	00 06                	add    BYTE PTR [rsi],al
    165e:	fe 00                	inc    BYTE PTR [rax]
    1660:	00 00                	add    BYTE PTR [rax],al
    1662:	17                   	(bad)  
    1663:	1b 40 00             	sbb    eax,DWORD PTR [rax+0x0]
    1666:	00 00                	add    BYTE PTR [rax],al
    1668:	00 00                	add    BYTE PTR [rax],al
    166a:	07                   	(bad)  
    166b:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    166e:	76 00                	jbe    1670 <__abi_tag-0x3fed0c>
    1670:	00 06                	add    BYTE PTR [rsi],al
    1672:	5a                   	pop    rdx
    1673:	02 00                	add    al,BYTE PTR [rax]
    1675:	00 38                	add    BYTE PTR [rax],bh
    1677:	1b 40 00             	sbb    eax,DWORD PTR [rax+0x0]
    167a:	00 00                	add    BYTE PTR [rax],al
    167c:	00 00                	add    BYTE PTR [rax],al
    167e:	07                   	(bad)  
    167f:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    1682:	32 00                	xor    al,BYTE PTR [rax]
    1684:	00 0f                	add    BYTE PTR [rdi],cl
    1686:	4d 03 00             	add    r8,QWORD PTR [r8]
    1689:	00 04 96             	add    BYTE PTR [rsi+rdx*4],al
    168c:	01 b6 00 00 00 0a    	add    DWORD PTR [rsi+0xa000000],esi
    1692:	b6 00                	mov    dh,0x0
    1694:	00 00                	add    BYTE PTR [rax],al
    1696:	0a bd 00 00 00 0b    	or     bh,BYTE PTR [rbp+0xb000000]
    169c:	00 0d 77 02 00 00    	add    BYTE PTR [rip+0x277],cl        # 1919 <__abi_tag-0x3fea63>
    16a2:	13 82 02 00 00 79    	adc    eax,DWORD PTR [rdx+0x79000002]
    16a8:	02 00                	add    al,BYTE PTR [rax]
    16aa:	00 07                	add    BYTE PTR [rdi],al
    16ac:	2f                   	(bad)  
    16ad:	14 40                	adc    al,0x40
    16af:	07                   	(bad)  
    16b0:	26 15 ca 01 00 00    	es adc eax,0x1ca
    16b6:	e7 02                	out    0x2,eax
    16b8:	00 00                	add    BYTE PTR [rax],al
    16ba:	07                   	(bad)  
    16bb:	27                   	(bad)  
    16bc:	00 15 dd 01 00 00    	add    BYTE PTR [rip+0x1dd],dl        # 189f <__abi_tag-0x3feadd>
    16c2:	09 03                	or     DWORD PTR [rbx],eax
    16c4:	00 00                	add    BYTE PTR [rax],al
    16c6:	07                   	(bad)  
    16c7:	28 08                	sub    BYTE PTR [rax],cl
    16c9:	15 ea 01 00 00       	adc    eax,0x1ea
    16ce:	e7 02                	out    0x2,eax
    16d0:	00 00                	add    BYTE PTR [rax],al
    16d2:	07                   	(bad)  
    16d3:	29 10                	sub    DWORD PTR [rax],edx
    16d5:	15 e6 01 00 00       	adc    eax,0x1e6
    16da:	09 03                	or     DWORD PTR [rbx],eax
    16dc:	00 00                	add    BYTE PTR [rax],al
    16de:	07                   	(bad)  
    16df:	2a 18                	sub    bl,BYTE PTR [rax]
    16e1:	15 f6 01 00 00       	adc    eax,0x1f6
    16e6:	e7 02                	out    0x2,eax
    16e8:	00 00                	add    BYTE PTR [rax],al
    16ea:	07                   	(bad)  
    16eb:	2b 20                	sub    esp,DWORD PTR [rax]
    16ed:	15 f2 01 00 00       	adc    eax,0x1f2
    16f2:	09 03                	or     DWORD PTR [rbx],eax
    16f4:	00 00                	add    BYTE PTR [rax],al
    16f6:	07                   	(bad)  
    16f7:	2c 28                	sub    al,0x28
    16f9:	15 e0 02 00 00       	adc    eax,0x2e0
    16fe:	14 03                	adc    al,0x3
    1700:	00 00                	add    BYTE PTR [rax],al
    1702:	07                   	(bad)  
    1703:	2d 30 15 3c 04       	sub    eax,0x43c1530
    1708:	00 00                	add    BYTE PTR [rax],al
    170a:	60                   	(bad)  
    170b:	04 00                	add    al,0x0
    170d:	00 07                	add    BYTE PTR [rdi],al
    170f:	2e 38 00             	cs cmp BYTE PTR [rax],al
    1712:	0d ec 02 00 00       	or     eax,0x2ec
    1717:	13 f7                	adc    esi,edi
    1719:	02 00                	add    al,BYTE PTR [rax]
    171b:	00 d5                	add    ch,dl
    171d:	01 00                	add    DWORD PTR [rax],eax
    171f:	00 06                	add    BYTE PTR [rsi],al
    1721:	18 13                	sbb    BYTE PTR [rbx],dl
    1723:	02 03                	add    al,BYTE PTR [rbx]
    1725:	00 00                	add    BYTE PTR [rax],al
    1727:	d3 01                	rol    DWORD PTR [rcx],cl
    1729:	00 00                	add    BYTE PTR [rax],al
    172b:	05 26 0c 9f 00       	add    eax,0x9f0c26
    1730:	00 00                	add    BYTE PTR [rax],al
    1732:	08 01                	or     BYTE PTR [rcx],al
    1734:	13 f7                	adc    esi,edi
    1736:	00 00                	add    BYTE PTR [rax],al
    1738:	00 dd                	add    ch,bl
    173a:	04 00                	add    al,0x0
    173c:	00 08                	add    BYTE PTR [rax],cl
    173e:	2e 0d 19 03 00 00    	cs or  eax,0x319
    1744:	13 24 03             	adc    esp,DWORD PTR [rbx+rax*1]
    1747:	00 00                	add    BYTE PTR [rax],al
    1749:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    174a:	01 00                	add    DWORD PTR [rax],eax
    174c:	00 09                	add    BYTE PTR [rcx],cl
    174e:	61                   	(bad)  
    174f:	14 40                	adc    al,0x40
    1751:	09 51 15             	or     DWORD PTR [rcx+0x15],edx
    1754:	97                   	xchg   edi,eax
    1755:	00 00                	add    BYTE PTR [rax],al
    1757:	00 d1                	add    cl,dl
    1759:	03 00                	add    eax,DWORD PTR [rax]
    175b:	00 09                	add    BYTE PTR [rcx],cl
    175d:	53                   	push   rbx
    175e:	00 15 c1 00 00 00    	add    BYTE PTR [rip+0xc1],dl        # 1825 <__abi_tag-0x3feb57>
    1764:	e4 03                	in     al,0x3
    1766:	00 00                	add    BYTE PTR [rax],al
    1768:	09 54 10 15          	or     DWORD PTR [rax+rdx*1+0x15],edx
    176c:	ed                   	in     eax,dx
    176d:	00 00                	add    BYTE PTR [rax],al
    176f:	00 e4                	add    ah,ah
    1771:	03 00                	add    eax,DWORD PTR [rax]
    1773:	00 09                	add    BYTE PTR [rcx],cl
    1775:	55                   	push   rbp
    1776:	12 15 f7 00 00 00    	adc    dl,BYTE PTR [rip+0xf7]        # 1873 <__abi_tag-0x3feb09>
    177c:	0c 04                	or     al,0x4
    177e:	00 00                	add    BYTE PTR [rax],al
    1780:	09 56 14             	or     DWORD PTR [rsi+0x14],edx
    1783:	15 17 01 00 00       	adc    eax,0x117
    1788:	34 04                	xor    al,0x4
    178a:	00 00                	add    BYTE PTR [rax],al
    178c:	09 57 18             	or     DWORD PTR [rdi+0x18],edx
    178f:	15 47 01 00 00       	adc    eax,0x147
    1794:	55                   	push   rbp
    1795:	04 00                	add    al,0x0
    1797:	00 09                	add    BYTE PTR [rcx],cl
    1799:	58                   	pop    rax
    179a:	20 15 59 01 00 00    	and    BYTE PTR [rip+0x159],dl        # 18f9 <__abi_tag-0x3fea83>
    17a0:	55                   	push   rbp
    17a1:	04 00                	add    al,0x0
    17a3:	00 09                	add    BYTE PTR [rcx],cl
    17a5:	59                   	pop    rcx
    17a6:	28 15 61 01 00 00    	sub    BYTE PTR [rip+0x161],dl        # 190d <__abi_tag-0x3fea6f>
    17ac:	0c 04                	or     al,0x4
    17ae:	00 00                	add    BYTE PTR [rax],al
    17b0:	09 5a 30             	or     DWORD PTR [rdx+0x30],ebx
    17b3:	15 69 01 00 00       	adc    eax,0x169
    17b8:	e4 03                	in     al,0x3
    17ba:	00 00                	add    BYTE PTR [rax],al
    17bc:	09 5b 34             	or     DWORD PTR [rbx+0x34],ebx
    17bf:	15 72 01 00 00       	adc    eax,0x172
    17c4:	e4 03                	in     al,0x3
    17c6:	00 00                	add    BYTE PTR [rax],al
    17c8:	09 5c 36 15          	or     DWORD PTR [rsi+rsi*1+0x15],ebx
    17cc:	7e 01                	jle    17cf <__abi_tag-0x3febad>
    17ce:	00 00                	add    BYTE PTR [rax],al
    17d0:	e4 03                	in     al,0x3
    17d2:	00 00                	add    BYTE PTR [rax],al
    17d4:	09 5d 38             	or     DWORD PTR [rbp+0x38],ebx
    17d7:	15 86 01 00 00       	adc    eax,0x186
    17dc:	e4 03                	in     al,0x3
    17de:	00 00                	add    BYTE PTR [rax],al
    17e0:	09 5e 3a             	or     DWORD PTR [rsi+0x3a],ebx
    17e3:	15 92 01 00 00       	adc    eax,0x192
    17e8:	e4 03                	in     al,0x3
    17ea:	00 00                	add    BYTE PTR [rax],al
    17ec:	09 5f 3c             	or     DWORD PTR [rdi+0x3c],ebx
    17ef:	15 9a 01 00 00       	adc    eax,0x19a
    17f4:	e4 03                	in     al,0x3
    17f6:	00 00                	add    BYTE PTR [rax],al
    17f8:	09 60 3e             	or     DWORD PTR [rax+0x3e],esp
    17fb:	00 16                	add    BYTE PTR [rsi],dl
    17fd:	02 03                	add    al,BYTE PTR [rbx]
    17ff:	00 00                	add    BYTE PTR [rax],al
    1801:	17                   	(bad)  
    1802:	dd 03                	fld    QWORD PTR [rbx]
    1804:	00 00                	add    BYTE PTR [rax],al
    1806:	10 00                	adc    BYTE PTR [rax],al
    1808:	18 ad 00 00 00 08    	sbb    BYTE PTR [rbp+0x8000000],ch
    180e:	07                   	(bad)  
    180f:	13 ef                	adc    ebp,edi
    1811:	03 00                	add    eax,DWORD PTR [rax]
    1813:	00 e2                	add    dl,ah
    1815:	00 00                	add    BYTE PTR [rax],al
    1817:	00 09                	add    BYTE PTR [rcx],cl
    1819:	1c 13                	sbb    al,0x13
    181b:	fa                   	cli    
    181c:	03 00                	add    eax,DWORD PTR [rax]
    181e:	00 d9                	add    cl,bl
    1820:	00 00                	add    BYTE PTR [rax],al
    1822:	00 06                	add    BYTE PTR [rsi],al
    1824:	19 13                	sbb    DWORD PTR [rbx],edx
    1826:	05 04 00 00 d7       	add    eax,0xd7000004
    182b:	00 00                	add    BYTE PTR [rax],al
    182d:	00 05 28 0c c8 00    	add    BYTE PTR [rip+0xc80c28],al        # c8245b <__TMC_END__+0x87d323>
    1833:	00 00                	add    BYTE PTR [rax],al
    1835:	07                   	(bad)  
    1836:	02 13                	add    dl,BYTE PTR [rbx]
    1838:	17                   	(bad)  
    1839:	04 00                	add    al,0x0
    183b:	00 0c 01             	add    BYTE PTR [rcx+rax*1],cl
    183e:	00 00                	add    BYTE PTR [rax],al
    1840:	09 21                	or     DWORD PTR [rcx],esp
    1842:	13 22                	adc    esp,DWORD PTR [rdx]
    1844:	04 00                	add    al,0x0
    1846:	00 03                	add    BYTE PTR [rbx],al
    1848:	01 00                	add    DWORD PTR [rax],eax
    184a:	00 06                	add    BYTE PTR [rsi],al
    184c:	1a 13                	sbb    dl,BYTE PTR [rbx]
    184e:	2d 04 00 00 01       	sub    eax,0x1000004
    1853:	01 00                	add    DWORD PTR [rax],eax
    1855:	00 05 2a 0c 24 01    	add    BYTE PTR [rip+0x1240c2a],al        # 1242485 <__TMC_END__+0xe3d34d>
    185b:	00 00                	add    BYTE PTR [rax],al
    185d:	07                   	(bad)  
    185e:	04 13                	add    al,0x13
    1860:	3f                   	(bad)  
    1861:	04 00                	add    al,0x0
    1863:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
    1866:	00 00                	add    BYTE PTR [rax],al
    1868:	09 2c 13             	or     DWORD PTR [rbx+rdx*1],ebp
    186b:	4a 04 00             	rex.WX add al,0x0
    186e:	00 33                	add    BYTE PTR [rbx],dh
    1870:	01 00                	add    DWORD PTR [rax],eax
    1872:	00 06                	add    BYTE PTR [rsi],al
    1874:	1b 13                	sbb    edx,DWORD PTR [rbx]
    1876:	f7 00 00 00 31 01    	test   DWORD PTR [rax],0x1310000
    187c:	00 00                	add    BYTE PTR [rax],al
    187e:	05 2d 13 3f 04       	add    eax,0x43f132d
    1883:	00 00                	add    BYTE PTR [rax],al
    1885:	4f 01 00             	rex.WRXB add QWORD PTR [r8],r8
    1888:	00 09                	add    BYTE PTR [rcx],cl
    188a:	30 0d 65 04 00 00    	xor    BYTE PTR [rip+0x465],cl        # 1cf5 <__abi_tag-0x3fe687>
    1890:	13 70 04             	adc    esi,DWORD PTR [rax+0x4]
    1893:	00 00                	add    BYTE PTR [rax],al
    1895:	6d                   	ins    DWORD PTR es:[rdi],dx
    1896:	02 00                	add    al,BYTE PTR [rax]
    1898:	00 07                	add    BYTE PTR [rdi],al
    189a:	24 19                	and    al,0x19
    189c:	66 02 00             	data16 add al,BYTE PTR [rax]
    189f:	00 10                	add    BYTE PTR [rax],dl
    18a1:	07                   	(bad)  
    18a2:	21 15 fa 01 00 00    	and    DWORD PTR [rip+0x1fa],edx        # 1aa2 <__abi_tag-0x3fe8da>
    18a8:	91                   	xchg   ecx,eax
    18a9:	04 00                	add    al,0x0
    18ab:	00 07                	add    BYTE PTR [rdi],al
    18ad:	22 00                	and    al,BYTE PTR [rax]
    18af:	15 61 02 00 00       	adc    eax,0x261
    18b4:	1b 05 00 00 07 23    	sbb    eax,DWORD PTR [rip+0x23070000]        # 230718ba <__TMC_END__+0x22c6c782>
    18ba:	08 00                	or     BYTE PTR [rax],al
    18bc:	0d 96 04 00 00       	or     eax,0x496
    18c1:	1a a2 04 00 00 56    	sbb    ah,BYTE PTR [rdx+0x56000004]
    18c7:	02 00                	add    al,BYTE PTR [rax]
    18c9:	00 09                	add    BYTE PTR [rcx],cl
    18cb:	bb 02 1b 38 09       	mov    ebx,0x9381b02
    18d0:	b1 02                	mov    cl,0x2
    18d2:	1c 09                	sbb    al,0x9
    18d4:	02 00                	add    al,BYTE PTR [rax]
    18d6:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
    18d9:	00 00                	add    BYTE PTR [rax],al
    18db:	09 b3 02 00 1c 10    	or     DWORD PTR [rbx+0x101c0002],esi
    18e1:	02 00                	add    al,BYTE PTR [rax]
    18e3:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
    18e6:	00 00                	add    BYTE PTR [rax],al
    18e8:	09 b4 02 04 1c 18 02 	or     DWORD PTR [rdx+rax*1+0x2181c04],esi
    18ef:	00 00                	add    BYTE PTR [rax],al
    18f1:	55                   	push   rbp
    18f2:	04 00                	add    al,0x0
    18f4:	00 09                	add    BYTE PTR [rcx],cl
    18f6:	b5 02                	mov    ch,0x2
    18f8:	08 1c 21             	or     BYTE PTR [rcx+riz*1],bl
    18fb:	02 00                	add    al,BYTE PTR [rax]
    18fd:	00 34 04             	add    BYTE PTR [rsp+rax*1],dh
    1900:	00 00                	add    BYTE PTR [rax],al
    1902:	09 b6 02 10 1c 29    	or     DWORD PTR [rsi+0x291c1002],esi
    1908:	02 00                	add    al,BYTE PTR [rax]
    190a:	00 34 04             	add    BYTE PTR [rsp+rax*1],dh
    190d:	00 00                	add    BYTE PTR [rax],al
    190f:	09 b7 02 18 1c 31    	or     DWORD PTR [rdi+0x311c1802],esi
    1915:	02 00                	add    al,BYTE PTR [rax]
    1917:	00 10                	add    BYTE PTR [rax],dl
    1919:	05 00 00 09 b8       	add    eax,0xb8090000
    191e:	02 20                	add    ah,BYTE PTR [rax]
    1920:	1c 46                	sbb    al,0x46
    1922:	02 00                	add    al,BYTE PTR [rax]
    1924:	00 10                	add    BYTE PTR [rax],dl
    1926:	05 00 00 09 b9       	add    eax,0xb9090000
    192b:	02 28                	add    ch,BYTE PTR [rax]
    192d:	1c 4e                	sbb    al,0x4e
    192f:	02 00                	add    al,BYTE PTR [rax]
    1931:	00 10                	add    BYTE PTR [rax],dl
    1933:	05 00 00 09 ba       	add    eax,0xba090000
    1938:	02 30                	add    dh,BYTE PTR [rax]
    193a:	00 13                	add    BYTE PTR [rbx],dl
    193c:	3f                   	(bad)  
    193d:	04 00                	add    al,0x0
    193f:	00 3a                	add    BYTE PTR [rdx],bh
    1941:	02 00                	add    al,BYTE PTR [rax]
    1943:	00 09                	add    BYTE PTR [rcx],cl
    1945:	27                   	(bad)  
    1946:	0d 70 04 00 00       	or     eax,0x470
    194b:	16                   	(bad)  
    194c:	c7 00 00 00 1d dd    	mov    DWORD PTR [rax],0xdd1d0000
    1952:	03 00                	add    eax,DWORD PTR [rax]
    1954:	00 00                	add    BYTE PTR [rax],al
    1956:	20 00                	and    BYTE PTR [rax],al
    1958:	0d 32 05 00 00       	or     eax,0x532
    195d:	0d c7 00 00 00       	or     eax,0xc7
    1962:	0d 09 03 00 00       	or     eax,0x309
    1967:	13 47 05             	adc    eax,DWORD PTR [rdi+0x5]
    196a:	00 00                	add    BYTE PTR [rax],al
    196c:	dc 04 00             	fadd   QWORD PTR [rax+rax*1]
    196f:	00 0a                	add    BYTE PTR [rdx],cl
    1971:	6c                   	ins    BYTE PTR es:[rdi],dx
    1972:	13 ea                	adc    ebp,edx
    1974:	00 00                	add    BYTE PTR [rax],al
    1976:	00 da                	add    dl,bl
    1978:	04 00                	add    al,0x0
    197a:	00 05 c2 00 a3 05    	add    BYTE PTR [rip+0x5a300c2],al        # 5a31a42 <__TMC_END__+0x562c90a>
    1980:	00 00                	add    BYTE PTR [rax],al
    1982:	04 00                	add    al,0x0
    1984:	ce                   	(bad)  
    1985:	07                   	(bad)  
    1986:	00 00                	add    BYTE PTR [rax],al
    1988:	08 01                	or     BYTE PTR [rcx],al
    198a:	00 00                	add    BYTE PTR [rax],al
    198c:	00 00                	add    BYTE PTR [rax],al
    198e:	0c 00                	or     al,0x0
    1990:	ef                   	out    dx,eax
    1991:	04 00                	add    al,0x0
    1993:	00 6e 0b             	add    BYTE PTR [rsi+0xb],ch
    1996:	00 00                	add    BYTE PTR [rax],al
    1998:	5a                   	pop    rdx
    1999:	00 00                	add    BYTE PTR [rax],al
    199b:	00 50 1b             	add    BYTE PTR [rax+0x1b],dl
    199e:	40 00 00             	rex add BYTE PTR [rax],al
    19a1:	00 00                	add    BYTE PTR [rax],al
    19a3:	00 e3                	add    bl,ah
    19a5:	05 00 00 02 2f       	add    eax,0x2f020000
    19aa:	00 00                	add    BYTE PTR [rax],al
    19ac:	00 03                	add    BYTE PTR [rbx],al
    19ae:	3a 00                	cmp    al,BYTE PTR [rax]
    19b0:	00 00                	add    BYTE PTR [rax],al
    19b2:	d5                   	(bad)  
    19b3:	01 00                	add    DWORD PTR [rax],eax
    19b5:	00 02                	add    BYTE PTR [rdx],al
    19b7:	18 03                	sbb    BYTE PTR [rbx],al
    19b9:	45 00 00             	add    BYTE PTR [r8],r8b
    19bc:	00 d3                	add    bl,dl
    19be:	01 00                	add    DWORD PTR [rax],eax
    19c0:	00 01                	add    BYTE PTR [rcx],al
    19c2:	26 04 9f             	es add al,0x9f
    19c5:	00 00                	add    BYTE PTR [rax],al
    19c7:	00 08                	add    BYTE PTR [rax],cl
    19c9:	01 05 50 1b 40 00    	add    DWORD PTR [rip+0x401b50],eax        # 40351f <_IO_stdin_used+0x51f>
    19cf:	00 00                	add    BYTE PTR [rax],al
    19d1:	00 00                	add    BYTE PTR [rax],al
    19d3:	b2 00                	mov    dl,0x0
    19d5:	00 00                	add    BYTE PTR [rax],al
    19d7:	01 57 55             	add    DWORD PTR [rdi+0x55],edx
    19da:	03 00                	add    eax,DWORD PTR [rax]
    19dc:	00 03                	add    BYTE PTR [rbx],al
    19de:	07                   	(bad)  
    19df:	06                   	(bad)  
    19e0:	a0 10 00 00 ce 01 00 	movabs al,ds:0x3000001ce000010
    19e7:	00 03 
    19e9:	07                   	(bad)  
    19ea:	b7 02                	mov    bh,0x2
    19ec:	00 00                	add    BYTE PTR [rax],al
    19ee:	06                   	(bad)  
    19ef:	d6                   	(bad)  
    19f0:	10 00                	adc    BYTE PTR [rax],al
    19f2:	00 e2                	add    dl,ah
    19f4:	01 00                	add    DWORD PTR [rax],eax
    19f6:	00 03                	add    BYTE PTR [rbx],al
    19f8:	07                   	(bad)  
    19f9:	7f 03                	jg     19fe <__abi_tag-0x3fe97e>
    19fb:	00 00                	add    BYTE PTR [rax],al
    19fd:	06                   	(bad)  
    19fe:	0c 11                	or     al,0x11
    1a00:	00 00                	add    BYTE PTR [rax],al
    1a02:	76 05                	jbe    1a09 <__abi_tag-0x3fe973>
    1a04:	00 00                	add    BYTE PTR [rax],al
    1a06:	03 07                	add    eax,DWORD PTR [rdi]
    1a08:	8a 03                	mov    al,BYTE PTR [rbx]
    1a0a:	00 00                	add    BYTE PTR [rax],al
    1a0c:	07                   	(bad)  
    1a0d:	c8 1b 40 00          	enter  0x401b,0x0
    1a11:	00 00                	add    BYTE PTR [rax],al
    1a13:	00 00                	add    BYTE PTR [rax],al
    1a15:	22 00                	and    al,BYTE PTR [rax]
    1a17:	00 00                	add    BYTE PTR [rax],al
    1a19:	08 ee                	or     dh,ch
    1a1b:	11 00                	adc    DWORD PTR [rax],eax
    1a1d:	00 43 03             	add    BYTE PTR [rbx+0x3],al
    1a20:	00 00                	add    BYTE PTR [rax],al
    1a22:	03 09                	add    ecx,DWORD PTR [rcx]
    1a24:	7f 03                	jg     1a29 <__abi_tag-0x3fe953>
    1a26:	00 00                	add    BYTE PTR [rax],al
    1a28:	00 07                	add    BYTE PTR [rdi],al
    1a2a:	68 1b 40 00 00       	push   0x401b
    1a2f:	00 00                	add    BYTE PTR [rax],al
    1a31:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
    1a34:	00 00                	add    BYTE PTR [rax],al
    1a36:	08 6e 11             	or     BYTE PTR [rsi+0x11],ch
    1a39:	00 00                	add    BYTE PTR [rax],al
    1a3b:	43 03 00             	rex.XB add eax,DWORD PTR [r8]
    1a3e:	00 03                	add    BYTE PTR [rbx],al
    1a40:	0f 7f 03             	movq   QWORD PTR [rbx],mm0
    1a43:	00 00                	add    BYTE PTR [rax],al
    1a45:	07                   	(bad)  
    1a46:	95                   	xchg   ebp,eax
    1a47:	1b 40 00             	sbb    eax,DWORD PTR [rax+0x0]
    1a4a:	00 00                	add    BYTE PTR [rax],al
    1a4c:	00 00                	add    BYTE PTR [rax],al
    1a4e:	30 00                	xor    BYTE PTR [rax],al
    1a50:	00 00                	add    BYTE PTR [rax],al
    1a52:	08 b8 11 00 00 84    	or     BYTE PTR [rax-0x7bffffef],bh
    1a58:	05 00 00 03 10       	add    eax,0x10030000
    1a5d:	7f 03                	jg     1a62 <__abi_tag-0x3fe91a>
    1a5f:	00 00                	add    BYTE PTR [rax],al
    1a61:	00 00                	add    BYTE PTR [rax],al
    1a63:	00 05 10 1c 40 00    	add    BYTE PTR [rip+0x401c10],al        # 403679 <_IO_stdin_used+0x679>
    1a69:	00 00                	add    BYTE PTR [rax],al
    1a6b:	00 00                	add    BYTE PTR [rax],al
    1a6d:	1f                   	(bad)  
    1a6e:	01 00                	add    DWORD PTR [rax],eax
    1a70:	00 01                	add    BYTE PTR [rcx],al
    1a72:	57                   	push   rdi
    1a73:	3e 05 00 00 03 1b    	ds add eax,0x1b030000
    1a79:	06                   	(bad)  
    1a7a:	25 12 00 00 ce       	and    eax,0xce000012
    1a7f:	01 00                	add    DWORD PTR [rax],eax
    1a81:	00 03                	add    BYTE PTR [rbx],al
    1a83:	1b b7 02 00 00 06    	sbb    esi,DWORD PTR [rdi+0x6000002]
    1a89:	5b                   	pop    rbx
    1a8a:	12 00                	adc    al,BYTE PTR [rax]
    1a8c:	00 e2                	add    dl,ah
    1a8e:	01 00                	add    DWORD PTR [rax],eax
    1a90:	00 03                	add    BYTE PTR [rbx],al
    1a92:	1b 7f 03             	sbb    edi,DWORD PTR [rdi+0x3]
    1a95:	00 00                	add    BYTE PTR [rax],al
    1a97:	06                   	(bad)  
    1a98:	91                   	xchg   ecx,eax
    1a99:	12 00                	adc    al,BYTE PTR [rax]
    1a9b:	00 76 05             	add    BYTE PTR [rsi+0x5],dh
    1a9e:	00 00                	add    BYTE PTR [rax],al
    1aa0:	03 1b                	add    ebx,DWORD PTR [rbx]
    1aa2:	02 03                	add    al,BYTE PTR [rbx]
    1aa4:	00 00                	add    BYTE PTR [rax],al
    1aa6:	07                   	(bad)  
    1aa7:	ca 1c 40             	retf   0x401c
    1aaa:	00 00                	add    BYTE PTR [rax],al
    1aac:	00 00                	add    BYTE PTR [rax],al
    1aae:	00 46 00             	add    BYTE PTR [rsi+0x0],al
    1ab1:	00 00                	add    BYTE PTR [rax],al
    1ab3:	08 83 13 00 00 43    	or     BYTE PTR [rbx+0x43000013],al
    1ab9:	03 00                	add    eax,DWORD PTR [rax]
    1abb:	00 03                	add    BYTE PTR [rbx],al
    1abd:	1d 7f 03 00 00       	sbb    eax,0x37f
    1ac2:	00 07                	add    BYTE PTR [rdi],al
    1ac4:	2c 1c                	sub    al,0x1c
    1ac6:	40 00 00             	rex add BYTE PTR [rax],al
    1ac9:	00 00                	add    BYTE PTR [rax],al
    1acb:	00 9b 00 00 00 08    	add    BYTE PTR [rbx+0x8000000],bl
    1ad1:	f0 12 00             	lock adc al,BYTE PTR [rax]
    1ad4:	00 43 03             	add    BYTE PTR [rbx+0x3],al
    1ad7:	00 00                	add    BYTE PTR [rax],al
    1ad9:	03 27                	add    esp,DWORD PTR [rdi]
    1adb:	7f 03                	jg     1ae0 <__abi_tag-0x3fe89c>
    1add:	00 00                	add    BYTE PTR [rax],al
    1adf:	07                   	(bad)  
    1ae0:	60                   	(bad)  
    1ae1:	1c 40                	sbb    al,0x40
    1ae3:	00 00                	add    BYTE PTR [rax],al
    1ae5:	00 00                	add    BYTE PTR [rax],al
    1ae7:	00 67 00             	add    BYTE PTR [rdi+0x0],ah
    1aea:	00 00                	add    BYTE PTR [rax],al
    1aec:	08 3a                	or     BYTE PTR [rdx],bh
    1aee:	13 00                	adc    eax,DWORD PTR [rax]
    1af0:	00 84 05 00 00 03 28 	add    BYTE PTR [rbp+rax*1+0x28030000],al
    1af7:	7f 03                	jg     1afc <__abi_tag-0x3fe880>
    1af9:	00 00                	add    BYTE PTR [rax],al
    1afb:	00 00                	add    BYTE PTR [rax],al
    1afd:	09 f2                	or     edx,esi
    1aff:	01 00                	add    DWORD PTR [rax],eax
    1b01:	00 51 1c             	add    BYTE PTR [rcx+0x1c],dl
    1b04:	40 00 00             	rex add BYTE PTR [rax],al
    1b07:	00 00                	add    BYTE PTR [rax],al
    1b09:	00 0a                	add    BYTE PTR [rdx],cl
    1b0b:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    1b0e:	31 00                	xor    DWORD PTR [rax],eax
    1b10:	09 f2                	or     edx,esi
    1b12:	01 00                	add    DWORD PTR [rax],eax
    1b14:	00 8e 1c 40 00 00    	add    BYTE PTR [rsi+0x401c],cl
    1b1a:	00 00                	add    BYTE PTR [rax],al
    1b1c:	00 0a                	add    BYTE PTR [rdx],cl
    1b1e:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    1b21:	31 00                	xor    DWORD PTR [rax],eax
    1b23:	09 f2                	or     edx,esi
    1b25:	01 00                	add    DWORD PTR [rax],eax
    1b27:	00 b1 1c 40 00 00    	add    BYTE PTR [rcx+0x401c],dh
    1b2d:	00 00                	add    BYTE PTR [rax],al
    1b2f:	00 0a                	add    BYTE PTR [rdx],cl
    1b31:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    1b34:	31 00                	xor    DWORD PTR [rax],eax
    1b36:	09 f2                	or     edx,esi
    1b38:	01 00                	add    DWORD PTR [rax],eax
    1b3a:	00 e1                	add    cl,ah
    1b3c:	1c 40                	sbb    al,0x40
    1b3e:	00 00                	add    BYTE PTR [rax],al
    1b40:	00 00                	add    BYTE PTR [rax],al
    1b42:	00 0a                	add    BYTE PTR [rdx],cl
    1b44:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    1b47:	31 00                	xor    DWORD PTR [rax],eax
    1b49:	09 f2                	or     edx,esi
    1b4b:	01 00                	add    DWORD PTR [rax],eax
    1b4d:	00 07                	add    BYTE PTR [rdi],al
    1b4f:	1d 40 00 00 00       	sbb    eax,0x40
    1b54:	00 00                	add    BYTE PTR [rax],al
    1b56:	0a 01                	or     al,BYTE PTR [rcx]
    1b58:	55                   	push   rbp
    1b59:	01 31                	add    DWORD PTR [rcx],esi
    1b5b:	00 0b                	add    BYTE PTR [rbx],cl
    1b5d:	f2 01 00             	repnz add DWORD PTR [rax],eax
    1b60:	00 2f                	add    BYTE PTR [rdi],ch
    1b62:	1d 40 00 00 00       	sbb    eax,0x40
    1b67:	00 00                	add    BYTE PTR [rax],al
    1b69:	0a 01                	or     al,BYTE PTR [rcx]
    1b6b:	55                   	push   rbp
    1b6c:	01 31                	add    DWORD PTR [rcx],esi
    1b6e:	00 00                	add    BYTE PTR [rax],al
    1b70:	0c 4d                	or     al,0x4d
    1b72:	03 00                	add    eax,DWORD PTR [rax]
    1b74:	00 04 96             	add    BYTE PTR [rsi+rdx*4],al
    1b77:	01 0a                	add    DWORD PTR [rdx],ecx
    1b79:	02 00                	add    al,BYTE PTR [rax]
    1b7b:	00 0d 0a 02 00 00    	add    BYTE PTR [rip+0x20a],cl        # 1d8b <__abi_tag-0x3fe5f1>
    1b81:	0d 11 02 00 00       	or     eax,0x211
    1b86:	0e                   	(bad)  
    1b87:	00 04 2d 01 00 00 05 	add    BYTE PTR [rbp*1+0x5000001],al
    1b8e:	04 02                	add    al,0x2
    1b90:	16                   	(bad)  
    1b91:	02 00                	add    al,BYTE PTR [rax]
    1b93:	00 0f                	add    BYTE PTR [rdi],cl
    1b95:	1b 02                	sbb    eax,DWORD PTR [rdx]
    1b97:	00 00                	add    BYTE PTR [rax],al
    1b99:	04 a8                	add    al,0xa8
    1b9b:	00 00                	add    BYTE PTR [rax],al
    1b9d:	00 06                	add    BYTE PTR [rsi],al
    1b9f:	01 05 30 1d 40 00    	add    DWORD PTR [rip+0x401d30],eax        # 4038d5 <__GNU_EH_FRAME_HDR+0x251>
    1ba5:	00 00                	add    BYTE PTR [rax],al
    1ba7:	00 00                	add    BYTE PTR [rax],al
    1ba9:	79 01                	jns    1bac <__abi_tag-0x3fe7d0>
    1bab:	00 00                	add    BYTE PTR [rax],al
    1bad:	01 57 48             	add    DWORD PTR [rdi+0x48],edx
    1bb0:	05 00 00 03 37       	add    eax,0x37030000
    1bb5:	06                   	(bad)  
    1bb6:	ba 13 00 00 e4       	mov    edx,0xe4000013
    1bbb:	02 00                	add    al,BYTE PTR [rax]
    1bbd:	00 03                	add    BYTE PTR [rbx],al
    1bbf:	37                   	(bad)  
    1bc0:	a0 03 00 00 00 05 b0 	movabs al,ds:0x401eb00500000003
    1bc7:	1e 40 
    1bc9:	00 00                	add    BYTE PTR [rax],al
    1bcb:	00 00                	add    BYTE PTR [rax],al
    1bcd:	00 17                	add    BYTE PTR [rdi],dl
    1bcf:	00 00                	add    BYTE PTR [rax],al
    1bd1:	00 01                	add    BYTE PTR [rcx],al
    1bd3:	57                   	push   rdi
    1bd4:	59                   	pop    rcx
    1bd5:	05 00 00 03 63       	add    eax,0x63030000
    1bda:	10 02                	adc    BYTE PTR [rdx],al
    1bdc:	91                   	xchg   ecx,eax
    1bdd:	07                   	(bad)  
    1bde:	86 05 00 00 03 64    	xchg   BYTE PTR [rip+0x64030000],al        # 64031be4 <__TMC_END__+0x63c2caac>
    1be4:	c4                   	(bad)  
    1be5:	04 00                	add    al,0x0
    1be7:	00 11                	add    BYTE PTR [rcx],dl
    1be9:	d3 04 00             	rol    DWORD PTR [rax+rax*1],cl
    1bec:	00 03                	add    BYTE PTR [rbx],al
    1bee:	65 d0 04 00          	rol    BYTE PTR gs:[rax+rax*1],1
    1bf2:	00 09                	add    BYTE PTR [rcx],cl
    1bf4:	94                   	xchg   esp,eax
    1bf5:	02 00                	add    al,BYTE PTR [rax]
    1bf7:	00 c5                	add    ch,al
    1bf9:	1e                   	(bad)  
    1bfa:	40 00 00             	rex add BYTE PTR [rax],al
    1bfd:	00 00                	add    BYTE PTR [rax],al
    1bff:	00 0a                	add    BYTE PTR [rdx],cl
    1c01:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    1c04:	31 0a                	xor    DWORD PTR [rdx],ecx
    1c06:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    1c09:	31 0a                	xor    DWORD PTR [rdx],ecx
    1c0b:	01 54 02 91          	add    DWORD PTR [rdx+rax*1-0x6f],edx
    1c0f:	07                   	(bad)  
    1c10:	00 00                	add    BYTE PTR [rax],al
    1c12:	0c c2                	or     al,0xc2
    1c14:	04 00                	add    al,0x0
    1c16:	00 05 73 01 b0 02    	add    BYTE PTR [rip+0x2b00173],al        # 2b01d8f <__TMC_END__+0x26fcc57>
    1c1c:	00 00                	add    BYTE PTR [rax],al
    1c1e:	0d 0a 02 00 00       	or     eax,0x20a
    1c23:	0d b7 02 00 00       	or     eax,0x2b7
    1c28:	0d b8 02 00 00       	or     eax,0x2b8
    1c2d:	00 04 b9             	add    BYTE PTR [rcx+rdi*4],al
    1c30:	04 00                	add    al,0x0
    1c32:	00 05 08 12 04 1f    	add    BYTE PTR [rip+0x1f041208],al        # 1f042e40 <__TMC_END__+0x1ec3dd08>
    1c38:	01 00                	add    DWORD PTR [rax],eax
    1c3a:	00 07                	add    BYTE PTR [rdi],al
    1c3c:	08 13                	or     BYTE PTR [rbx],dl
    1c3e:	d0 1e                	rcr    BYTE PTR [rsi],1
    1c40:	40 00 00             	rex add BYTE PTR [rax],al
    1c43:	00 00                	add    BYTE PTR [rax],al
    1c45:	00 81 00 00 00 01    	add    BYTE PTR [rcx+0x1000000],al
    1c4b:	57                   	push   rdi
    1c4c:	da 02                	fiadd  DWORD PTR [rdx]
    1c4e:	00 00                	add    BYTE PTR [rax],al
    1c50:	14 01                	adc    al,0x1
    1c52:	55                   	push   rbp
    1c53:	e6 02                	out    0x2,al
    1c55:	00 00                	add    BYTE PTR [rax],al
    1c57:	00 15 2a 05 00 00    	add    BYTE PTR [rip+0x52a],dl        # 2187 <__abi_tag-0x3fe1f5>
    1c5d:	03 69 f2             	add    ebp,DWORD PTR [rcx-0xe]
    1c60:	02 00                	add    al,BYTE PTR [rax]
    1c62:	00 01                	add    BYTE PTR [rcx],al
    1c64:	16                   	(bad)  
    1c65:	c3                   	ret    
    1c66:	00 00                	add    BYTE PTR [rax],al
    1c68:	00 03                	add    BYTE PTR [rbx],al
    1c6a:	69 f7 02 00 00 00    	imul   esi,edi,0x2
    1c70:	02 1b                	add    bl,BYTE PTR [rbx]
    1c72:	02 00                	add    al,BYTE PTR [rax]
    1c74:	00 03                	add    BYTE PTR [rbx],al
    1c76:	02 03                	add    al,BYTE PTR [rbx]
    1c78:	00 00                	add    BYTE PTR [rax],al
    1c7a:	0c 01                	or     al,0x1
    1c7c:	00 00                	add    BYTE PTR [rax],al
    1c7e:	06                   	(bad)  
    1c7f:	21 03                	and    DWORD PTR [rbx],eax
    1c81:	0d 03 00 00 03       	or     eax,0x3000003
    1c86:	01 00                	add    DWORD PTR [rax],eax
    1c88:	00 02                	add    BYTE PTR [rdx],al
    1c8a:	1a 03                	sbb    al,BYTE PTR [rbx]
    1c8c:	18 03                	sbb    BYTE PTR [rbx],al
    1c8e:	00 00                	add    BYTE PTR [rax],al
    1c90:	01 01                	add    DWORD PTR [rcx],eax
    1c92:	00 00                	add    BYTE PTR [rax],al
    1c94:	01 2a                	add    DWORD PTR [rdx],ebp
    1c96:	04 24                	add    al,0x24
    1c98:	01 00                	add    DWORD PTR [rax],eax
    1c9a:	00 07                	add    BYTE PTR [rdi],al
    1c9c:	04 05                	add    al,0x5
    1c9e:	60                   	(bad)  
    1c9f:	1f                   	(bad)  
    1ca0:	40 00 00             	rex add BYTE PTR [rax],al
    1ca3:	00 00                	add    BYTE PTR [rax],al
    1ca5:	00 d3                	add    bl,dl
    1ca7:	01 00                	add    DWORD PTR [rax],eax
    1ca9:	00 01                	add    BYTE PTR [rcx],al
    1cab:	57                   	push   rdi
    1cac:	60                   	(bad)  
    1cad:	05 00 00 03 8c       	add    eax,0x8c030000
    1cb2:	06                   	(bad)  
    1cb3:	06                   	(bad)  
    1cb4:	14 00                	adc    al,0x0
    1cb6:	00 42 04             	add    BYTE PTR [rdx+0x4],al
    1cb9:	00 00                	add    BYTE PTR [rax],al
    1cbb:	03 8c e6 04 00 00 07 	add    ecx,DWORD PTR [rsi+riz*8+0x7000004]
    1cc2:	60                   	(bad)  
    1cc3:	1f                   	(bad)  
    1cc4:	40 00 00             	rex add BYTE PTR [rax],al
    1cc7:	00 00                	add    BYTE PTR [rax],al
    1cc9:	00 d1                	add    cl,dl
    1ccb:	01 00                	add    DWORD PTR [rax],eax
    1ccd:	00 08                	add    BYTE PTR [rax],cl
    1ccf:	52                   	push   rdx
    1cd0:	14 00                	adc    al,0x0
    1cd2:	00 8a 05 00 00 03    	add    BYTE PTR [rdx+0x3000005],cl
    1cd8:	8d                   	(bad)  
    1cd9:	e6 04                	out    0x4,al
    1cdb:	00 00                	add    BYTE PTR [rax],al
    1cdd:	17                   	(bad)  
    1cde:	da 02                	fiadd  DWORD PTR [rdx]
    1ce0:	00 00                	add    BYTE PTR [rax],al
    1ce2:	22 20                	and    ah,BYTE PTR [rax]
    1ce4:	40 00 00             	rex add BYTE PTR [rax],al
    1ce7:	00 00                	add    BYTE PTR [rax],al
    1ce9:	00 3e                	add    BYTE PTR [rsi],bh
    1ceb:	00 00                	add    BYTE PTR [rax],al
    1ced:	00 03                	add    BYTE PTR [rbx],al
    1cef:	92                   	xchg   edx,eax
    1cf0:	14 18                	adc    al,0x18
    1cf2:	88 14 00             	mov    BYTE PTR [rax+rax*1],dl
    1cf5:	00 e6                	add    dh,ah
    1cf7:	02 00                	add    al,BYTE PTR [rax]
    1cf9:	00 00                	add    BYTE PTR [rax],al
    1cfb:	00 00                	add    BYTE PTR [rax],al
    1cfd:	03 b8 02 00 00 dd    	add    edi,DWORD PTR [rax-0x22fffffe]
    1d03:	04 00                	add    al,0x0
    1d05:	00 07                	add    BYTE PTR [rdi],al
    1d07:	2e 03 95 03 00 00 7c 	cs add edx,DWORD PTR [rbp+0x7c000003]
    1d0e:	05 00 00 08 1a       	add    eax,0x1a080000
    1d13:	03 0a                	add    ecx,DWORD PTR [rdx]
    1d15:	02 00                	add    al,BYTE PTR [rax]
    1d17:	00 7a 05             	add    BYTE PTR [rdx+0x5],bh
    1d1a:	00 00                	add    BYTE PTR [rax],al
    1d1c:	01 29                	add    DWORD PTR [rcx],ebp
    1d1e:	02 a5 03 00 00 03    	add    ah,BYTE PTR [rbp+0x3000003]
    1d24:	b0 03                	mov    al,0x3
    1d26:	00 00                	add    BYTE PTR [rax],al
    1d28:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1d29:	01 00                	add    DWORD PTR [rax],eax
    1d2b:	00 06                	add    BYTE PTR [rsi],al
    1d2d:	61                   	(bad)  
    1d2e:	19 40 06             	sbb    DWORD PTR [rax+0x6],eax
    1d31:	51                   	push   rcx
    1d32:	1a 97 00 00 00 5d    	sbb    dl,BYTE PTR [rdi+0x5d000000]
    1d38:	04 00                	add    al,0x0
    1d3a:	00 06                	add    BYTE PTR [rsi],al
    1d3c:	53                   	push   rbx
    1d3d:	00 1a                	add    BYTE PTR [rdx],bl
    1d3f:	c1 00 00             	rol    DWORD PTR [rax],0x0
    1d42:	00 70 04             	add    BYTE PTR [rax+0x4],dh
    1d45:	00 00                	add    BYTE PTR [rax],al
    1d47:	06                   	(bad)  
    1d48:	54                   	push   rsp
    1d49:	10 1a                	adc    BYTE PTR [rdx],bl
    1d4b:	ed                   	in     eax,dx
    1d4c:	00 00                	add    BYTE PTR [rax],al
    1d4e:	00 70 04             	add    BYTE PTR [rax+0x4],dh
    1d51:	00 00                	add    BYTE PTR [rax],al
    1d53:	06                   	(bad)  
    1d54:	55                   	push   rbp
    1d55:	12 1a                	adc    bl,BYTE PTR [rdx]
    1d57:	f7 00 00 00 f7 02    	test   DWORD PTR [rax],0x2f70000
    1d5d:	00 00                	add    BYTE PTR [rax],al
    1d5f:	06                   	(bad)  
    1d60:	56                   	push   rsi
    1d61:	14 1a                	adc    al,0x1a
    1d63:	17                   	(bad)  
    1d64:	01 00                	add    DWORD PTR [rax],eax
    1d66:	00 98 04 00 00 06    	add    BYTE PTR [rax+0x6000004],bl
    1d6c:	57                   	push   rdi
    1d6d:	18 1a                	sbb    BYTE PTR [rdx],bl
    1d6f:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
    1d72:	00 b9 04 00 00 06    	add    BYTE PTR [rcx+0x6000004],bh
    1d78:	58                   	pop    rax
    1d79:	20 1a                	and    BYTE PTR [rdx],bl
    1d7b:	59                   	pop    rcx
    1d7c:	01 00                	add    DWORD PTR [rax],eax
    1d7e:	00 b9 04 00 00 06    	add    BYTE PTR [rcx+0x6000004],bh
    1d84:	59                   	pop    rcx
    1d85:	28 1a                	sub    BYTE PTR [rdx],bl
    1d87:	61                   	(bad)  
    1d88:	01 00                	add    DWORD PTR [rax],eax
    1d8a:	00 f7                	add    bh,dh
    1d8c:	02 00                	add    al,BYTE PTR [rax]
    1d8e:	00 06                	add    BYTE PTR [rsi],al
    1d90:	5a                   	pop    rdx
    1d91:	30 1a                	xor    BYTE PTR [rdx],bl
    1d93:	69 01 00 00 70 04    	imul   eax,DWORD PTR [rcx],0x4700000
    1d99:	00 00                	add    BYTE PTR [rax],al
    1d9b:	06                   	(bad)  
    1d9c:	5b                   	pop    rbx
    1d9d:	34 1a                	xor    al,0x1a
    1d9f:	72 01                	jb     1da2 <__abi_tag-0x3fe5da>
    1da1:	00 00                	add    BYTE PTR [rax],al
    1da3:	70 04                	jo     1da9 <__abi_tag-0x3fe5d3>
    1da5:	00 00                	add    BYTE PTR [rax],al
    1da7:	06                   	(bad)  
    1da8:	5c                   	pop    rsp
    1da9:	36 1a 7e 01          	ss sbb bh,BYTE PTR [rsi+0x1]
    1dad:	00 00                	add    BYTE PTR [rax],al
    1daf:	70 04                	jo     1db5 <__abi_tag-0x3fe5c7>
    1db1:	00 00                	add    BYTE PTR [rax],al
    1db3:	06                   	(bad)  
    1db4:	5d                   	pop    rbp
    1db5:	38 1a                	cmp    BYTE PTR [rdx],bl
    1db7:	86 01                	xchg   BYTE PTR [rcx],al
    1db9:	00 00                	add    BYTE PTR [rax],al
    1dbb:	70 04                	jo     1dc1 <__abi_tag-0x3fe5bb>
    1dbd:	00 00                	add    BYTE PTR [rax],al
    1dbf:	06                   	(bad)  
    1dc0:	5e                   	pop    rsi
    1dc1:	3a 1a                	cmp    bl,BYTE PTR [rdx]
    1dc3:	92                   	xchg   edx,eax
    1dc4:	01 00                	add    DWORD PTR [rax],eax
    1dc6:	00 70 04             	add    BYTE PTR [rax+0x4],dh
    1dc9:	00 00                	add    BYTE PTR [rax],al
    1dcb:	06                   	(bad)  
    1dcc:	5f                   	pop    rdi
    1dcd:	3c 1a                	cmp    al,0x1a
    1dcf:	9a                   	(bad)  
    1dd0:	01 00                	add    DWORD PTR [rax],eax
    1dd2:	00 70 04             	add    BYTE PTR [rax+0x4],dh
    1dd5:	00 00                	add    BYTE PTR [rax],al
    1dd7:	06                   	(bad)  
    1dd8:	60                   	(bad)  
    1dd9:	3e 00 1b             	ds add BYTE PTR [rbx],bl
    1ddc:	45 00 00             	add    BYTE PTR [r8],r8b
    1ddf:	00 1c 69             	add    BYTE PTR [rcx+rbp*2],bl
    1de2:	04 00                	add    al,0x0
    1de4:	00 10                	add    BYTE PTR [rax],dl
    1de6:	00 1d ad 00 00 00    	add    BYTE PTR [rip+0xad],bl        # 1e99 <__abi_tag-0x3fe4e3>
    1dec:	08 07                	or     BYTE PTR [rdi],al
    1dee:	03 7b 04             	add    edi,DWORD PTR [rbx+0x4]
    1df1:	00 00                	add    BYTE PTR [rax],al
    1df3:	e2 00                	loop   1df5 <__abi_tag-0x3fe587>
    1df5:	00 00                	add    BYTE PTR [rax],al
    1df7:	06                   	(bad)  
    1df8:	1c 03                	sbb    al,0x3
    1dfa:	86 04 00             	xchg   BYTE PTR [rax+rax*1],al
    1dfd:	00 d9                	add    cl,bl
    1dff:	00 00                	add    BYTE PTR [rax],al
    1e01:	00 02                	add    BYTE PTR [rdx],al
    1e03:	19 03                	sbb    DWORD PTR [rbx],eax
    1e05:	91                   	xchg   ecx,eax
    1e06:	04 00                	add    al,0x0
    1e08:	00 d7                	add    bh,dl
    1e0a:	00 00                	add    BYTE PTR [rax],al
    1e0c:	00 01                	add    BYTE PTR [rcx],al
    1e0e:	28 04 c8             	sub    BYTE PTR [rax+rcx*8],al
    1e11:	00 00                	add    BYTE PTR [rax],al
    1e13:	00 07                	add    BYTE PTR [rdi],al
    1e15:	02 03                	add    al,BYTE PTR [rbx]
    1e17:	a3 04 00 00 3c 01 00 	movabs ds:0x60000013c000004,eax
    1e1e:	00 06 
    1e20:	2c 03                	sub    al,0x3
    1e22:	ae                   	scas   al,BYTE PTR es:[rdi]
    1e23:	04 00                	add    al,0x0
    1e25:	00 33                	add    BYTE PTR [rbx],dh
    1e27:	01 00                	add    DWORD PTR [rax],eax
    1e29:	00 02                	add    BYTE PTR [rdx],al
    1e2b:	1b 03                	sbb    eax,DWORD PTR [rbx]
    1e2d:	b8 02 00 00 31       	mov    eax,0x31000002
    1e32:	01 00                	add    DWORD PTR [rax],eax
    1e34:	00 01                	add    BYTE PTR [rcx],al
    1e36:	2d 03 a3 04 00       	sub    eax,0x4a303
    1e3b:	00 4f 01             	add    BYTE PTR [rdi+0x1],cl
    1e3e:	00 00                	add    BYTE PTR [rax],al
    1e40:	06                   	(bad)  
    1e41:	30 1b                	xor    BYTE PTR [rbx],bl
    1e43:	1b 02                	sbb    eax,DWORD PTR [rdx]
    1e45:	00 00                	add    BYTE PTR [rax],al
    1e47:	1c 69                	sbb    al,0x69
    1e49:	04 00                	add    al,0x0
    1e4b:	00 01                	add    BYTE PTR [rcx],al
    1e4d:	00 03                	add    BYTE PTR [rbx],al
    1e4f:	db 04 00             	fild   DWORD PTR [rax+rax*1]
    1e52:	00 dc                	add    ah,bl
    1e54:	04 00                	add    al,0x0
    1e56:	00 09                	add    BYTE PTR [rcx],cl
    1e58:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e59:	03 b0 02 00 00 da    	add    esi,DWORD PTR [rax-0x25fffffe]
    1e5f:	04 00                	add    al,0x0
    1e61:	00 01                	add    BYTE PTR [rcx],al
    1e63:	c2 02 eb             	ret    0xeb02
    1e66:	04 00                	add    al,0x0
    1e68:	00 03                	add    BYTE PTR [rbx],al
    1e6a:	f6 04 00 00          	test   BYTE PTR [rax+rax*1],0x0
    1e6e:	6d                   	ins    DWORD PTR es:[rdi],dx
    1e6f:	02 00                	add    al,BYTE PTR [rax]
    1e71:	00 0a                	add    BYTE PTR [rdx],cl
    1e73:	24 1e                	and    al,0x1e
    1e75:	66 02 00             	data16 add al,BYTE PTR [rax]
    1e78:	00 10                	add    BYTE PTR [rax],dl
    1e7a:	0a 21                	or     ah,BYTE PTR [rcx]
    1e7c:	1a fa                	sbb    bh,dl
    1e7e:	01 00                	add    DWORD PTR [rax],eax
    1e80:	00 17                	add    BYTE PTR [rdi],dl
    1e82:	05 00 00 0a 22       	add    eax,0x220a0000
    1e87:	00 1a                	add    BYTE PTR [rdx],bl
    1e89:	61                   	(bad)  
    1e8a:	02 00                	add    al,BYTE PTR [rax]
    1e8c:	00 a1 05 00 00 0a    	add    BYTE PTR [rcx+0xa000005],ah
    1e92:	23 08                	and    ecx,DWORD PTR [rax]
    1e94:	00 02                	add    BYTE PTR [rdx],al
    1e96:	1c 05                	sbb    al,0x5
    1e98:	00 00                	add    BYTE PTR [rax],al
    1e9a:	1f                   	(bad)  
    1e9b:	28 05 00 00 56 02    	sub    BYTE PTR [rip+0x2560000],al        # 2561ea1 <__TMC_END__+0x215cd69>
    1ea1:	00 00                	add    BYTE PTR [rax],al
    1ea3:	06                   	(bad)  
    1ea4:	bb 02 20 38 06       	mov    ebx,0x6382002
    1ea9:	b1 02                	mov    cl,0x2
    1eab:	21 09                	and    DWORD PTR [rcx],ecx
    1ead:	02 00                	add    al,BYTE PTR [rax]
    1eaf:	00 f7                	add    bh,dh
    1eb1:	02 00                	add    al,BYTE PTR [rax]
    1eb3:	00 06                	add    BYTE PTR [rsi],al
    1eb5:	b3 02                	mov    bl,0x2
    1eb7:	00 21                	add    BYTE PTR [rcx],ah
    1eb9:	10 02                	adc    BYTE PTR [rdx],al
    1ebb:	00 00                	add    BYTE PTR [rax],al
    1ebd:	f7 02 00 00 06 b4    	test   DWORD PTR [rdx],0xb4060000
    1ec3:	02 04 21             	add    al,BYTE PTR [rcx+riz*1]
    1ec6:	18 02                	sbb    BYTE PTR [rdx],al
    1ec8:	00 00                	add    BYTE PTR [rax],al
    1eca:	b9 04 00 00 06       	mov    ecx,0x6000004
    1ecf:	b5 02                	mov    ch,0x2
    1ed1:	08 21                	or     BYTE PTR [rcx],ah
    1ed3:	21 02                	and    DWORD PTR [rdx],eax
    1ed5:	00 00                	add    BYTE PTR [rax],al
    1ed7:	98                   	cwde   
    1ed8:	04 00                	add    al,0x0
    1eda:	00 06                	add    BYTE PTR [rsi],al
    1edc:	b6 02                	mov    dh,0x2
    1ede:	10 21                	adc    BYTE PTR [rcx],ah
    1ee0:	29 02                	sub    DWORD PTR [rdx],eax
    1ee2:	00 00                	add    BYTE PTR [rax],al
    1ee4:	98                   	cwde   
    1ee5:	04 00                	add    al,0x0
    1ee7:	00 06                	add    BYTE PTR [rsi],al
    1ee9:	b7 02                	mov    bh,0x2
    1eeb:	18 21                	sbb    BYTE PTR [rcx],ah
    1eed:	31 02                	xor    DWORD PTR [rdx],eax
    1eef:	00 00                	add    BYTE PTR [rax],al
    1ef1:	96                   	xchg   esi,eax
    1ef2:	05 00 00 06 b8       	add    eax,0xb8060000
    1ef7:	02 20                	add    ah,BYTE PTR [rax]
    1ef9:	21 46 02             	and    DWORD PTR [rsi+0x2],eax
    1efc:	00 00                	add    BYTE PTR [rax],al
    1efe:	96                   	xchg   esi,eax
    1eff:	05 00 00 06 b9       	add    eax,0xb9060000
    1f04:	02 28                	add    ch,BYTE PTR [rax]
    1f06:	21 4e 02             	and    DWORD PTR [rsi+0x2],ecx
    1f09:	00 00                	add    BYTE PTR [rax],al
    1f0b:	96                   	xchg   esi,eax
    1f0c:	05 00 00 06 ba       	add    eax,0xba060000
    1f11:	02 30                	add    dh,BYTE PTR [rax]
    1f13:	00 03                	add    BYTE PTR [rbx],al
    1f15:	a3 04 00 00 3a 02 00 	movabs ds:0x60000023a000004,eax
    1f1c:	00 06 
    1f1e:	27                   	(bad)  
    1f1f:	02 f6                	add    dh,dh
    1f21:	04 00                	add    al,0x0
    1f23:	00 00                	add    BYTE PTR [rax],al
    1f25:	9d                   	popf   
    1f26:	04 00                	add    al,0x0
    1f28:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1f2b:	68 09 00 00 08       	push   0x8000009
    1f30:	01 00                	add    DWORD PTR [rax],eax
    1f32:	00 00                	add    BYTE PTR [rax],al
    1f34:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    1f37:	8f 05 00 00 1e 10    	pop    QWORD PTR [rip+0x101e0000]        # 101e1f3d <__TMC_END__+0xfddce05>
    1f3d:	00 00                	add    BYTE PTR [rax],al
    1f3f:	5a                   	pop    rdx
    1f40:	00 00                	add    BYTE PTR [rax],al
    1f42:	00 40 21             	add    BYTE PTR [rax+0x21],al
    1f45:	40 00 00             	rex add BYTE PTR [rax],al
    1f48:	00 00                	add    BYTE PTR [rax],al
    1f4a:	00 07                	add    BYTE PTR [rdi],al
    1f4c:	02 00                	add    al,BYTE PTR [rax]
    1f4e:	00 02                	add    BYTE PTR [rdx],al
    1f50:	c6 05 00 00 3f 00 00 	mov    BYTE PTR [rip+0x3f0000],0x0        # 3f1f57 <__abi_tag-0xe425>
    1f57:	00 01                	add    BYTE PTR [rcx],al
    1f59:	07                   	(bad)  
    1f5a:	09 03                	or     DWORD PTR [rbx],eax
    1f5c:	a0 50 40 00 00 00 00 	movabs al,ds:0x300000000004050
    1f63:	00 03 
    1f65:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    1f68:	00 04 52             	add    BYTE PTR [rdx+rdx*2],al
    1f6b:	00 00                	add    BYTE PTR [rax],al
    1f6d:	00 51 00             	add    BYTE PTR [rcx+0x0],dl
    1f70:	05 9f 00 00 00       	add    eax,0x9f
    1f75:	08 01                	or     BYTE PTR [rcx],al
    1f77:	06                   	(bad)  
    1f78:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1f79:	00 00                	add    BYTE PTR [rax],al
    1f7b:	00 08                	add    BYTE PTR [rax],cl
    1f7d:	07                   	(bad)  
    1f7e:	02 d8                	add    bl,al
    1f80:	05 00 00 6e 00       	add    eax,0x6e0000
    1f85:	00 00                	add    BYTE PTR [rax],al
    1f87:	01 14 09             	add    DWORD PTR [rcx+rcx*1],edx
    1f8a:	03 00                	add    eax,DWORD PTR [rax]
    1f8c:	51                   	push   rcx
    1f8d:	40 00 00             	rex add BYTE PTR [rax],al
    1f90:	00 00                	add    BYTE PTR [rax],al
    1f92:	00 03                	add    BYTE PTR [rbx],al
    1f94:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    1f97:	00 04 52             	add    BYTE PTR [rdx+rdx*2],al
    1f9a:	00 00                	add    BYTE PTR [rax],al
    1f9c:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
    1f9f:	07                   	(bad)  
    1fa0:	7f 00                	jg     1fa2 <__abi_tag-0x3fe3da>
    1fa2:	00 00                	add    BYTE PTR [rax],al
    1fa4:	08 8a 00 00 00 03    	or     BYTE PTR [rdx+0x3000000],cl
    1faa:	01 00                	add    DWORD PTR [rax],eax
    1fac:	00 03                	add    BYTE PTR [rbx],al
    1fae:	1a 08                	sbb    cl,BYTE PTR [rax]
    1fb0:	95                   	xchg   ebp,eax
    1fb1:	00 00                	add    BYTE PTR [rax],al
    1fb3:	00 01                	add    BYTE PTR [rcx],al
    1fb5:	01 00                	add    DWORD PTR [rax],eax
    1fb7:	00 02                	add    BYTE PTR [rdx],al
    1fb9:	2a 05 24 01 00 00    	sub    al,BYTE PTR [rip+0x124]        # 20e3 <__abi_tag-0x3fe299>
    1fbf:	07                   	(bad)  
    1fc0:	04 09                	add    al,0x9
    1fc2:	40 21 40 00          	rex and DWORD PTR [rax+0x0],eax
    1fc6:	00 00                	add    BYTE PTR [rax],al
    1fc8:	00 00                	add    BYTE PTR [rax],al
    1fca:	fe 00                	inc    BYTE PTR [rax]
    1fcc:	00 00                	add    BYTE PTR [rax],al
    1fce:	01 57 af             	add    DWORD PTR [rdi-0x51],edx
    1fd1:	02 00                	add    al,BYTE PTR [rax]
    1fd3:	00 01                	add    BYTE PTR [rcx],al
    1fd5:	1b 14 02             	sbb    edx,DWORD PTR [rdx+rax*1]
    1fd8:	00 00                	add    BYTE PTR [rax],al
    1fda:	0a ab 14 00 00 7b    	or     ch,BYTE PTR [rbx+0x7b000014]
    1fe0:	02 00                	add    al,BYTE PTR [rax]
    1fe2:	00 01                	add    BYTE PTR [rcx],al
    1fe4:	1b 04 03             	sbb    eax,DWORD PTR [rbx+rax*1]
    1fe7:	00 00                	add    BYTE PTR [rax],al
    1fe9:	0b f7                	or     esi,edi
    1feb:	14 00                	adc    al,0x0
    1fed:	00 5d 03             	add    BYTE PTR [rbp+0x3],bl
    1ff0:	00 00                	add    BYTE PTR [rax],al
    1ff2:	01 1c 37             	add    DWORD PTR [rdi+rsi*1],ebx
    1ff5:	01 00                	add    DWORD PTR [rax],eax
    1ff7:	00 0c f5 00 00 00 5a 	add    BYTE PTR [rsi*8+0x5a000000],cl
    1ffe:	21 40 00             	and    DWORD PTR [rax+0x0],eax
    2001:	00 00                	add    BYTE PTR [rax],al
    2003:	00 00                	add    BYTE PTR [rax],al
    2005:	0d 21 02 00 00       	or     eax,0x221
    200a:	32 22                	xor    ah,BYTE PTR [rdx]
    200c:	40 00 00             	rex add BYTE PTR [rax],al
    200f:	00 00                	add    BYTE PTR [rax],al
    2011:	00 0e                	add    BYTE PTR [rsi],cl
    2013:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    2016:	7f 00                	jg     2018 <__abi_tag-0x3fe364>
    2018:	00 00                	add    BYTE PTR [rax],al
    201a:	0f 98 02             	sets   BYTE PTR [rdx]
    201d:	00 00                	add    BYTE PTR [rax],al
    201f:	04 1d                	add    al,0x1d
    2021:	0b 01                	or     eax,DWORD PTR [rcx]
    2023:	00 00                	add    BYTE PTR [rax],al
    2025:	10 0c 01             	adc    BYTE PTR [rcx+rax*1],cl
    2028:	00 00                	add    BYTE PTR [rax],al
    202a:	10 04 02             	adc    BYTE PTR [rdx+rax*1],al
    202d:	00 00                	add    BYTE PTR [rax],al
    202f:	00 11                	add    BYTE PTR [rcx],dl
    2031:	07                   	(bad)  
    2032:	11 01                	adc    DWORD PTR [rcx],eax
    2034:	00 00                	add    BYTE PTR [rax],al
    2036:	12 16                	adc    dl,BYTE PTR [rsi]
    2038:	01 00                	add    DWORD PTR [rax],eax
    203a:	00 13                	add    BYTE PTR [rbx],dl
    203c:	66 02 00             	data16 add al,BYTE PTR [rax]
    203f:	00 10                	add    BYTE PTR [rax],dl
    2041:	06                   	(bad)  
    2042:	21 14 fa             	and    DWORD PTR [rdx+rdi*8],edx
    2045:	01 00                	add    DWORD PTR [rax],eax
    2047:	00 37                	add    BYTE PTR [rdi],dh
    2049:	01 00                	add    DWORD PTR [rax],eax
    204b:	00 06                	add    BYTE PTR [rsi],al
    204d:	22 00                	and    al,BYTE PTR [rax]
    204f:	14 61                	adc    al,0x61
    2051:	02 00                	add    al,BYTE PTR [rax]
    2053:	00 ff                	add    bh,bh
    2055:	01 00                	add    DWORD PTR [rax],eax
    2057:	00 06                	add    BYTE PTR [rsi],al
    2059:	23 08                	and    ecx,DWORD PTR [rax]
    205b:	00 07                	add    BYTE PTR [rdi],al
    205d:	3c 01                	cmp    al,0x1
    205f:	00 00                	add    BYTE PTR [rax],al
    2061:	15 48 01 00 00       	adc    eax,0x148
    2066:	56                   	push   rsi
    2067:	02 00                	add    al,BYTE PTR [rax]
    2069:	00 05 bb 02 16 38    	add    BYTE PTR [rip+0x381602bb],al        # 3816232a <__TMC_END__+0x37d5d1f2>
    206f:	05 b1 02 17 09       	add    eax,0x91702b1
    2074:	02 00                	add    al,BYTE PTR [rax]
    2076:	00 b6 01 00 00 05    	add    BYTE PTR [rsi+0x5000001],dh
    207c:	b3 02                	mov    bl,0x2
    207e:	00 17                	add    BYTE PTR [rdi],dl
    2080:	10 02                	adc    BYTE PTR [rdx],al
    2082:	00 00                	add    BYTE PTR [rax],al
    2084:	b6 01                	mov    dh,0x1
    2086:	00 00                	add    BYTE PTR [rax],al
    2088:	05 b4 02 04 17       	add    eax,0x170402b4
    208d:	18 02                	sbb    BYTE PTR [rdx],al
    208f:	00 00                	add    BYTE PTR [rax],al
    2091:	c1 01 00             	rol    DWORD PTR [rcx],0x0
    2094:	00 05 b5 02 08 17    	add    BYTE PTR [rip+0x170802b5],al        # 1708234f <__TMC_END__+0x16c7d217>
    209a:	21 02                	and    DWORD PTR [rdx],eax
    209c:	00 00                	add    BYTE PTR [rax],al
    209e:	e9 01 00 00 05       	jmp    50020a4 <__TMC_END__+0x4bfcf6c>
    20a3:	b6 02                	mov    dh,0x2
    20a5:	10 17                	adc    BYTE PTR [rdi],dl
    20a7:	29 02                	sub    DWORD PTR [rdx],eax
    20a9:	00 00                	add    BYTE PTR [rax],al
    20ab:	e9 01 00 00 05       	jmp    50020b1 <__TMC_END__+0x4bfcf79>
    20b0:	b7 02                	mov    bh,0x2
    20b2:	18 17                	sbb    BYTE PTR [rdi],dl
    20b4:	31 02                	xor    DWORD PTR [rdx],eax
    20b6:	00 00                	add    BYTE PTR [rax],al
    20b8:	f4                   	hlt    
    20b9:	01 00                	add    DWORD PTR [rax],eax
    20bb:	00 05 b8 02 20 17    	add    BYTE PTR [rip+0x172002b8],al        # 17202379 <__TMC_END__+0x16dfd241>
    20c1:	46 02 00             	rex.RX add r8b,BYTE PTR [rax]
    20c4:	00 f4                	add    ah,dh
    20c6:	01 00                	add    DWORD PTR [rax],eax
    20c8:	00 05 b9 02 28 17    	add    BYTE PTR [rip+0x172802b9],al        # 17282387 <__TMC_END__+0x16e7d24f>
    20ce:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    20d1:	00 f4                	add    ah,dh
    20d3:	01 00                	add    DWORD PTR [rax],eax
    20d5:	00 05 ba 02 30 00    	add    BYTE PTR [rip+0x3002ba],al        # 302395 <__abi_tag-0xfdfe7>
    20db:	08 7f 00             	or     BYTE PTR [rdi+0x0],bh
    20de:	00 00                	add    BYTE PTR [rax],al
    20e0:	0c 01                	or     al,0x1
    20e2:	00 00                	add    BYTE PTR [rax],al
    20e4:	05 21 08 cc 01       	add    eax,0x1cc0821
    20e9:	00 00                	add    BYTE PTR [rax],al
    20eb:	4f 01 00             	rex.WRXB add QWORD PTR [r8],r8
    20ee:	00 05 30 08 d7 01    	add    BYTE PTR [rip+0x1d70830],al        # 1d72924 <__TMC_END__+0x196d7ec>
    20f4:	00 00                	add    BYTE PTR [rax],al
    20f6:	33 01                	xor    eax,DWORD PTR [rcx]
    20f8:	00 00                	add    BYTE PTR [rax],al
    20fa:	03 1b                	add    ebx,DWORD PTR [rbx]
    20fc:	08 e2                	or     dl,ah
    20fe:	01 00                	add    DWORD PTR [rax],eax
    2100:	00 31                	add    BYTE PTR [rcx],dh
    2102:	01 00                	add    DWORD PTR [rax],eax
    2104:	00 02                	add    BYTE PTR [rdx],al
    2106:	2d 05 1f 01 00       	sub    eax,0x11f05
    210b:	00 07                	add    BYTE PTR [rdi],al
    210d:	08 08                	or     BYTE PTR [rax],cl
    210f:	cc                   	int3   
    2110:	01 00                	add    DWORD PTR [rax],eax
    2112:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
    2115:	00 00                	add    BYTE PTR [rax],al
    2117:	05 2c 08 cc 01       	add    eax,0x1cc082c
    211c:	00 00                	add    BYTE PTR [rax],al
    211e:	3a 02                	cmp    al,BYTE PTR [rdx]
    2120:	00 00                	add    BYTE PTR [rax],al
    2122:	05 27 07 16 01       	add    eax,0x1160727
    2127:	00 00                	add    BYTE PTR [rax],al
    2129:	07                   	(bad)  
    212a:	09 02                	or     DWORD PTR [rdx],eax
    212c:	00 00                	add    BYTE PTR [rax],al
    212e:	18 14 02             	sbb    BYTE PTR [rdx+rax*1],dl
    2131:	00 00                	add    BYTE PTR [rax],al
    2133:	10 1b                	adc    BYTE PTR [rbx],bl
    2135:	02 00                	add    al,BYTE PTR [rax]
    2137:	00 00                	add    BYTE PTR [rax],al
    2139:	05 2d 01 00 00       	add    eax,0x12d
    213e:	05 04 07 20 02       	add    eax,0x2200704
    2143:	00 00                	add    BYTE PTR [rax],al
    2145:	19 1a                	sbb    DWORD PTR [rdx],ebx
    2147:	40 22 40 00          	rex and al,BYTE PTR [rax+0x0]
    214b:	00 00                	add    BYTE PTR [rax],al
    214d:	00 00                	add    BYTE PTR [rax],al
    214f:	07                   	(bad)  
    2150:	01 00                	add    DWORD PTR [rax],eax
    2152:	00 01                	add    BYTE PTR [rcx],al
    2154:	57                   	push   rdi
    2155:	ee                   	out    dx,al
    2156:	05 00 00 01 38       	add    eax,0x38010000
    215b:	0a 1a                	or     bl,BYTE PTR [rdx]
    215d:	15 00 00 7b 02       	adc    eax,0x27b0000
    2162:	00 00                	add    BYTE PTR [rax],al
    2164:	01 38                	add    DWORD PTR [rax],edi
    2166:	04 03                	add    al,0x3
    2168:	00 00                	add    BYTE PTR [rax],al
    216a:	0c d2                	or     al,0xd2
    216c:	02 00                	add    al,BYTE PTR [rax]
    216e:	00 59 22             	add    BYTE PTR [rcx+0x22],bl
    2171:	40 00 00             	rex add BYTE PTR [rax],al
    2174:	00 00                	add    BYTE PTR [rax],al
    2176:	00 0c d2             	add    BYTE PTR [rdx+rdx*8],cl
    2179:	02 00                	add    al,BYTE PTR [rax]
    217b:	00 7c 22 40          	add    BYTE PTR [rdx+riz*1+0x40],bh
    217f:	00 00                	add    BYTE PTR [rax],al
    2181:	00 00                	add    BYTE PTR [rax],al
    2183:	00 0c d2             	add    BYTE PTR [rdx+rdx*8],cl
    2186:	02 00                	add    al,BYTE PTR [rax]
    2188:	00 9f 22 40 00 00    	add    BYTE PTR [rdi+0x4022],bl
    218e:	00 00                	add    BYTE PTR [rax],al
    2190:	00 0c d2             	add    BYTE PTR [rdx+rdx*8],cl
    2193:	02 00                	add    al,BYTE PTR [rax]
    2195:	00 c2                	add    dl,al
    2197:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    219a:	00 00                	add    BYTE PTR [rax],al
    219c:	00 00                	add    BYTE PTR [rax],al
    219e:	0d ed 02 00 00       	or     eax,0x2ed
    21a3:	ea                   	(bad)  
    21a4:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    21a7:	00 00                	add    BYTE PTR [rax],al
    21a9:	00 00                	add    BYTE PTR [rax],al
    21ab:	0e                   	(bad)  
    21ac:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    21af:	30 0e                	xor    BYTE PTR [rsi],cl
    21b1:	01 54 02 10          	add    DWORD PTR [rdx+rax*1+0x10],edx
    21b5:	51                   	push   rcx
    21b6:	00 0d ed 02 00 00    	add    BYTE PTR [rip+0x2ed],cl        # 24a9 <__abi_tag-0x3fded3>
    21bc:	07                   	(bad)  
    21bd:	23 40 00             	and    eax,DWORD PTR [rax+0x0]
    21c0:	00 00                	add    BYTE PTR [rax],al
    21c2:	00 00                	add    BYTE PTR [rax],al
    21c4:	0e                   	(bad)  
    21c5:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    21c8:	30 00                	xor    BYTE PTR [rax],al
    21ca:	0d ed 02 00 00       	or     eax,0x2ed
    21cf:	2d 23 40 00 00       	sub    eax,0x4023
    21d4:	00 00                	add    BYTE PTR [rax],al
    21d6:	00 0e                	add    BYTE PTR [rsi],cl
    21d8:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    21db:	30 0e                	xor    BYTE PTR [rsi],cl
    21dd:	01 54 02 10          	add    DWORD PTR [rdx+rax*1+0x10],edx
    21e1:	34 00                	xor    al,0x0
    21e3:	1b ed                	sbb    ebp,ebp
    21e5:	02 00                	add    al,BYTE PTR [rax]
    21e7:	00 47 23             	add    BYTE PTR [rdi+0x23],al
    21ea:	40 00 00             	rex add BYTE PTR [rax],al
    21ed:	00 00                	add    BYTE PTR [rax],al
    21ef:	00 0e                	add    BYTE PTR [rsi],cl
    21f1:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    21f4:	30 00                	xor    BYTE PTR [rax],al
    21f6:	00 0f                	add    BYTE PTR [rdi],cl
    21f8:	e3 05                	jrcxz  21ff <__abi_tag-0x3fe17d>
    21fa:	00 00                	add    BYTE PTR [rax],al
    21fc:	04 2b                	add    al,0x2b
    21fe:	95                   	xchg   ebp,eax
    21ff:	00 00                	add    BYTE PTR [rax],al
    2201:	00 10                	add    BYTE PTR [rax],dl
    2203:	e8 02 00 00 10       	call   1000220a <__TMC_END__+0xfbfd0d2>
    2208:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    220b:	00 00                	add    BYTE PTR [rax],al
    220d:	07                   	(bad)  
    220e:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    2211:	00 1c 55 03 00 00 04 	add    BYTE PTR [rdx*2+0x4000003],bl
    2218:	15 10 0b 01 00       	adc    eax,0x10b10
    221d:	00 10                	add    BYTE PTR [rax],dl
    221f:	e2 01                	loop   2222 <__abi_tag-0x3fe15a>
    2221:	00 00                	add    BYTE PTR [rax],al
    2223:	10 14 02             	adc    BYTE PTR [rdx+rax*1],dl
    2226:	00 00                	add    BYTE PTR [rax],al
    2228:	00 07                	add    BYTE PTR [rdi],al
    222a:	09 03                	or     DWORD PTR [rbx],eax
    222c:	00 00                	add    BYTE PTR [rax],al
    222e:	08 14 03             	or     BYTE PTR [rbx+rax*1],dl
    2231:	00 00                	add    BYTE PTR [rax],al
    2233:	79 02                	jns    2237 <__abi_tag-0x3fe145>
    2235:	00 00                	add    BYTE PTR [rax],al
    2237:	06                   	(bad)  
    2238:	2f                   	(bad)  
    2239:	1d 40 06 26 14       	sbb    eax,0x14260640
    223e:	ca 01 00             	retf   0x1
    2241:	00 79 03             	add    BYTE PTR [rcx+0x3],bh
    2244:	00 00                	add    BYTE PTR [rax],al
    2246:	06                   	(bad)  
    2247:	27                   	(bad)  
    2248:	00 14 dd 01 00 00 94 	add    BYTE PTR [rbx*8-0x6bffffff],dl
    224f:	03 00                	add    eax,DWORD PTR [rax]
    2251:	00 06                	add    BYTE PTR [rsi],al
    2253:	28 08                	sub    BYTE PTR [rax],cl
    2255:	14 ea                	adc    al,0xea
    2257:	01 00                	add    DWORD PTR [rax],eax
    2259:	00 79 03             	add    BYTE PTR [rcx+0x3],bh
    225c:	00 00                	add    BYTE PTR [rax],al
    225e:	06                   	(bad)  
    225f:	29 10                	sub    DWORD PTR [rax],edx
    2261:	14 e6                	adc    al,0xe6
    2263:	01 00                	add    DWORD PTR [rax],eax
    2265:	00 94 03 00 00 06 2a 	add    BYTE PTR [rbx+rax*1+0x2a060000],dl
    226c:	18 14 f6             	sbb    BYTE PTR [rsi+rsi*8],dl
    226f:	01 00                	add    DWORD PTR [rax],eax
    2271:	00 79 03             	add    BYTE PTR [rcx+0x3],bh
    2274:	00 00                	add    BYTE PTR [rax],al
    2276:	06                   	(bad)  
    2277:	2b 20                	sub    esp,DWORD PTR [rax]
    2279:	14 f2                	adc    al,0xf2
    227b:	01 00                	add    DWORD PTR [rax],eax
    227d:	00 94 03 00 00 06 2c 	add    BYTE PTR [rbx+rax*1+0x2c060000],dl
    2284:	28 14 e0             	sub    BYTE PTR [rax+riz*8],dl
    2287:	02 00                	add    al,BYTE PTR [rax]
    2289:	00 9f 03 00 00 06    	add    BYTE PTR [rdi+0x6000003],bl
    228f:	2d 30 14 3c 04       	sub    eax,0x43c1430
    2294:	00 00                	add    BYTE PTR [rax],al
    2296:	90                   	nop
    2297:	04 00                	add    al,0x0
    2299:	00 06                	add    BYTE PTR [rsi],al
    229b:	2e 38 00             	cs cmp BYTE PTR [rax],al
    229e:	07                   	(bad)  
    229f:	7e 03                	jle    22a4 <__abi_tag-0x3fe0d8>
    22a1:	00 00                	add    BYTE PTR [rax],al
    22a3:	08 89 03 00 00 d5    	or     BYTE PTR [rcx-0x2afffffd],cl
    22a9:	01 00                	add    DWORD PTR [rax],eax
    22ab:	00 03                	add    BYTE PTR [rbx],al
    22ad:	18 08                	sbb    BYTE PTR [rax],cl
    22af:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    22b2:	00 d3                	add    bl,dl
    22b4:	01 00                	add    DWORD PTR [rax],eax
    22b6:	00 02                	add    BYTE PTR [rdx],al
    22b8:	26 08 e2             	es or  dl,ah
    22bb:	01 00                	add    DWORD PTR [rax],eax
    22bd:	00 dd                	add    ch,bl
    22bf:	04 00                	add    al,0x0
    22c1:	00 07                	add    BYTE PTR [rdi],al
    22c3:	2e 07                	cs (bad) 
    22c5:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    22c6:	03 00                	add    eax,DWORD PTR [rax]
    22c8:	00 08                	add    BYTE PTR [rax],cl
    22ca:	af                   	scas   eax,DWORD PTR es:[rdi]
    22cb:	03 00                	add    eax,DWORD PTR [rax]
    22cd:	00 a5 01 00 00 05    	add    BYTE PTR [rbp+0x5000001],ah
    22d3:	61                   	(bad)  
    22d4:	1d 40 05 51 14       	sbb    eax,0x14510540
    22d9:	97                   	xchg   edi,eax
    22da:	00 00                	add    BYTE PTR [rax],al
    22dc:	00 5c 04 00          	add    BYTE PTR [rsp+rax*1+0x0],bl
    22e0:	00 05 53 00 14 c1    	add    BYTE PTR [rip+0xffffffffc1140053],al        # ffffffffc1142339 <__TMC_END__+0xffffffffc0d3d201>
    22e6:	00 00                	add    BYTE PTR [rax],al
    22e8:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    22eb:	00 00                	add    BYTE PTR [rax],al
    22ed:	05 54 10 14 ed       	add    eax,0xed141054
    22f2:	00 00                	add    BYTE PTR [rax],al
    22f4:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    22f7:	00 00                	add    BYTE PTR [rax],al
    22f9:	05 55 12 14 f7       	add    eax,0xf7141255
    22fe:	00 00                	add    BYTE PTR [rax],al
    2300:	00 b6 01 00 00 05    	add    BYTE PTR [rsi+0x5000001],dh
    2306:	56                   	push   rsi
    2307:	14 14                	adc    al,0x14
    2309:	17                   	(bad)  
    230a:	01 00                	add    DWORD PTR [rax],eax
    230c:	00 e9                	add    cl,ch
    230e:	01 00                	add    DWORD PTR [rax],eax
    2310:	00 05 57 18 14 47    	add    BYTE PTR [rip+0x47141857],al        # 47143b6d <__TMC_END__+0x46d3ea35>
    2316:	01 00                	add    DWORD PTR [rax],eax
    2318:	00 c1                	add    cl,al
    231a:	01 00                	add    DWORD PTR [rax],eax
    231c:	00 05 58 20 14 59    	add    BYTE PTR [rip+0x59142058],al        # 5914437a <__TMC_END__+0x58d3f242>
    2322:	01 00                	add    DWORD PTR [rax],eax
    2324:	00 c1                	add    cl,al
    2326:	01 00                	add    DWORD PTR [rax],eax
    2328:	00 05 59 28 14 61    	add    BYTE PTR [rip+0x61142859],al        # 61144b87 <__TMC_END__+0x60d3fa4f>
    232e:	01 00                	add    DWORD PTR [rax],eax
    2330:	00 b6 01 00 00 05    	add    BYTE PTR [rsi+0x5000001],dh
    2336:	5a                   	pop    rdx
    2337:	30 14 69             	xor    BYTE PTR [rcx+rbp*2],dl
    233a:	01 00                	add    DWORD PTR [rax],eax
    233c:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    233f:	00 00                	add    BYTE PTR [rax],al
    2341:	05 5b 34 14 72       	add    eax,0x7214345b
    2346:	01 00                	add    DWORD PTR [rax],eax
    2348:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    234b:	00 00                	add    BYTE PTR [rax],al
    234d:	05 5c 36 14 7e       	add    eax,0x7e14365c
    2352:	01 00                	add    DWORD PTR [rax],eax
    2354:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    2357:	00 00                	add    BYTE PTR [rax],al
    2359:	05 5d 38 14 86       	add    eax,0x8614385d
    235e:	01 00                	add    DWORD PTR [rax],eax
    2360:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    2363:	00 00                	add    BYTE PTR [rax],al
    2365:	05 5e 3a 14 92       	add    eax,0x92143a5e
    236a:	01 00                	add    DWORD PTR [rax],eax
    236c:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    236f:	00 00                	add    BYTE PTR [rax],al
    2371:	05 5f 3c 14 9a       	add    eax,0x9a143c5f
    2376:	01 00                	add    DWORD PTR [rax],eax
    2378:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    237b:	00 00                	add    BYTE PTR [rax],al
    237d:	05 60 3e 00 03       	add    eax,0x3003e60
    2382:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    2385:	00 04 52             	add    BYTE PTR [rdx+rdx*2],al
    2388:	00 00                	add    BYTE PTR [rax],al
    238a:	00 10                	add    BYTE PTR [rax],dl
    238c:	00 08                	add    BYTE PTR [rax],cl
    238e:	73 04                	jae    2394 <__abi_tag-0x3fdfe8>
    2390:	00 00                	add    BYTE PTR [rax],al
    2392:	e2 00                	loop   2394 <__abi_tag-0x3fdfe8>
    2394:	00 00                	add    BYTE PTR [rax],al
    2396:	05 1c 08 7e 04       	add    eax,0x47e081c
    239b:	00 00                	add    BYTE PTR [rax],al
    239d:	d9 00                	fld    DWORD PTR [rax]
    239f:	00 00                	add    BYTE PTR [rax],al
    23a1:	03 19                	add    ebx,DWORD PTR [rcx]
    23a3:	08 89 04 00 00 d7    	or     BYTE PTR [rcx-0x28fffffc],cl
    23a9:	00 00                	add    BYTE PTR [rax],al
    23ab:	00 02                	add    BYTE PTR [rdx],al
    23ad:	28 05 c8 00 00 00    	sub    BYTE PTR [rip+0xc8],al        # 247b <__abi_tag-0x3fdf01>
    23b3:	07                   	(bad)  
    23b4:	02 07                	add    al,BYTE PTR [rdi]
    23b6:	95                   	xchg   ebp,eax
    23b7:	04 00                	add    al,0x0
    23b9:	00 08                	add    BYTE PTR [rax],cl
    23bb:	16                   	(bad)  
    23bc:	01 00                	add    DWORD PTR [rax],eax
    23be:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
    23c1:	00 00                	add    BYTE PTR [rax],al
    23c3:	06                   	(bad)  
    23c4:	24 00                	and    al,0x0
    23c6:	7f 01                	jg     23c9 <__abi_tag-0x3fdfb3>
    23c8:	00 00                	add    BYTE PTR [rax],al
    23ca:	04 00                	add    al,0x0
    23cc:	da 0a                	fimul  DWORD PTR [rdx]
    23ce:	00 00                	add    BYTE PTR [rax],al
    23d0:	08 01                	or     BYTE PTR [rcx],al
    23d2:	00 00                	add    BYTE PTR [rax],al
    23d4:	00 00                	add    BYTE PTR [rax],al
    23d6:	0c 00                	or     al,0x0
    23d8:	01 06                	add    DWORD PTR [rsi],eax
    23da:	00 00                	add    BYTE PTR [rax],al
    23dc:	17                   	(bad)  
    23dd:	12 00                	adc    al,BYTE PTR [rax]
    23df:	00 5a 00             	add    BYTE PTR [rdx+0x0],bl
    23e2:	00 00                	add    BYTE PTR [rax],al
    23e4:	50                   	push   rax
    23e5:	23 40 00             	and    eax,DWORD PTR [rax+0x0]
    23e8:	00 00                	add    BYTE PTR [rax],al
    23ea:	00 00                	add    BYTE PTR [rax],al
    23ec:	44 00 00             	add    BYTE PTR [rax],r8b
    23ef:	00 02                	add    BYTE PTR [rdx],al
    23f1:	2f                   	(bad)  
    23f2:	00 00                	add    BYTE PTR [rax],al
    23f4:	00 03                	add    BYTE PTR [rbx],al
    23f6:	3a 00                	cmp    al,BYTE PTR [rax]
    23f8:	00 00                	add    BYTE PTR [rax],al
    23fa:	d9 00                	fld    DWORD PTR [rax]
    23fc:	00 00                	add    BYTE PTR [rax],al
    23fe:	02 19                	add    bl,BYTE PTR [rcx]
    2400:	03 45 00             	add    eax,DWORD PTR [rbp+0x0]
    2403:	00 00                	add    BYTE PTR [rax],al
    2405:	d7                   	xlat   BYTE PTR ds:[rbx]
    2406:	00 00                	add    BYTE PTR [rax],al
    2408:	00 01                	add    BYTE PTR [rcx],al
    240a:	28 04 c8             	sub    BYTE PTR [rax+rcx*8],al
    240d:	00 00                	add    BYTE PTR [rax],al
    240f:	00 07                	add    BYTE PTR [rdi],al
    2411:	02 02                	add    al,BYTE PTR [rdx]
    2413:	51                   	push   rcx
    2414:	00 00                	add    BYTE PTR [rax],al
    2416:	00 03                	add    BYTE PTR [rbx],al
    2418:	5c                   	pop    rsp
    2419:	00 00                	add    BYTE PTR [rax],al
    241b:	00 03                	add    BYTE PTR [rbx],al
    241d:	01 00                	add    DWORD PTR [rax],eax
    241f:	00 02                	add    BYTE PTR [rdx],al
    2421:	1a 03                	sbb    al,BYTE PTR [rbx]
    2423:	67 00 00             	add    BYTE PTR [eax],al
    2426:	00 01                	add    BYTE PTR [rcx],al
    2428:	01 00                	add    DWORD PTR [rax],eax
    242a:	00 01                	add    BYTE PTR [rcx],al
    242c:	2a 04 24             	sub    al,BYTE PTR [rsp]
    242f:	01 00                	add    DWORD PTR [rax],eax
    2431:	00 07                	add    BYTE PTR [rdi],al
    2433:	04 02                	add    al,0x2
    2435:	73 00                	jae    2437 <__abi_tag-0x3fdf45>
    2437:	00 00                	add    BYTE PTR [rax],al
    2439:	03 7e 00             	add    edi,DWORD PTR [rsi+0x0]
    243c:	00 00                	add    BYTE PTR [rax],al
    243e:	33 01                	xor    eax,DWORD PTR [rcx]
    2440:	00 00                	add    BYTE PTR [rax],al
    2442:	02 1b                	add    bl,BYTE PTR [rbx]
    2444:	03 89 00 00 00 31    	add    ecx,DWORD PTR [rcx+0x31000000]
    244a:	01 00                	add    DWORD PTR [rax],eax
    244c:	00 01                	add    BYTE PTR [rcx],al
    244e:	2d 04 1f 01 00       	sub    eax,0x11f04
    2453:	00 07                	add    BYTE PTR [rdi],al
    2455:	08 05 50 23 40 00    	or     BYTE PTR [rip+0x402350],al        # 4047ab <__FRAME_END__+0xb43>
    245b:	00 00                	add    BYTE PTR [rax],al
    245d:	00 00                	add    BYTE PTR [rax],al
    245f:	13 00                	adc    eax,DWORD PTR [rax]
    2461:	00 00                	add    BYTE PTR [rax],al
    2463:	01 57 3e             	add    DWORD PTR [rdi+0x3e],edx
    2466:	06                   	(bad)  
    2467:	00 00                	add    BYTE PTR [rax],al
    2469:	03 07                	add    eax,DWORD PTR [rdi]
    246b:	60                   	(bad)  
    246c:	01 00                	add    DWORD PTR [rax],eax
    246e:	00 06                	add    BYTE PTR [rsi],al
    2470:	01 55 ce             	add    DWORD PTR [rbp-0x32],edx
    2473:	01 00                	add    DWORD PTR [rax],eax
    2475:	00 03                	add    BYTE PTR [rbx],al
    2477:	07                   	(bad)  
    2478:	7d 01                	jge    247b <__abi_tag-0x3fdf01>
    247a:	00 00                	add    BYTE PTR [rax],al
    247c:	06                   	(bad)  
    247d:	01 54 5e 06          	add    DWORD PTR [rsi+rbx*2+0x6],edx
    2481:	00 00                	add    BYTE PTR [rax],al
    2483:	03 07                	add    eax,DWORD PTR [rdi]
    2485:	60                   	(bad)  
    2486:	01 00                	add    DWORD PTR [rax],eax
    2488:	00 00                	add    BYTE PTR [rax],al
    248a:	05 70 23 40 00       	add    eax,0x402370
    248f:	00 00                	add    BYTE PTR [rax],al
    2491:	00 00                	add    BYTE PTR [rax],al
    2493:	10 00                	adc    BYTE PTR [rax],al
    2495:	00 00                	add    BYTE PTR [rax],al
    2497:	01 57 48             	add    DWORD PTR [rdi+0x48],edx
    249a:	06                   	(bad)  
    249b:	00 00                	add    BYTE PTR [rax],al
    249d:	03 0f                	add    ecx,DWORD PTR [rdi]
    249f:	2f                   	(bad)  
    24a0:	00 00                	add    BYTE PTR [rax],al
    24a2:	00 06                	add    BYTE PTR [rsi],al
    24a4:	01 55 ce             	add    DWORD PTR [rbp-0x32],edx
    24a7:	01 00                	add    DWORD PTR [rax],eax
    24a9:	00 03                	add    BYTE PTR [rbx],al
    24ab:	0f 7d                	(bad)  
    24ad:	01 00                	add    DWORD PTR [rax],eax
    24af:	00 06                	add    BYTE PTR [rsi],al
    24b1:	01 54 5e 06          	add    DWORD PTR [rsi+rbx*2+0x6],edx
    24b5:	00 00                	add    BYTE PTR [rax],al
    24b7:	03 0f                	add    ecx,DWORD PTR [rdi]
    24b9:	60                   	(bad)  
    24ba:	01 00                	add    DWORD PTR [rax],eax
    24bc:	00 00                	add    BYTE PTR [rax],al
    24be:	05 80 23 40 00       	add    eax,0x402380
    24c3:	00 00                	add    BYTE PTR [rax],al
    24c5:	00 00                	add    BYTE PTR [rax],al
    24c7:	0f 00 00             	sldt   WORD PTR [rax]
    24ca:	00 01                	add    BYTE PTR [rcx],al
    24cc:	57                   	push   rdi
    24cd:	e3 05                	jrcxz  24d4 <__abi_tag-0x3fdea8>
    24cf:	00 00                	add    BYTE PTR [rax],al
    24d1:	03 17                	add    edx,DWORD PTR [rdi]
    24d3:	51                   	push   rcx
    24d4:	00 00                	add    BYTE PTR [rax],al
    24d6:	00 06                	add    BYTE PTR [rsi],al
    24d8:	01 55 ce             	add    DWORD PTR [rbp-0x32],edx
    24db:	01 00                	add    DWORD PTR [rax],eax
    24dd:	00 03                	add    BYTE PTR [rbx],al
    24df:	17                   	(bad)  
    24e0:	7d 01                	jge    24e3 <__abi_tag-0x3fde99>
    24e2:	00 00                	add    BYTE PTR [rax],al
    24e4:	06                   	(bad)  
    24e5:	01 54 5e 06          	add    DWORD PTR [rsi+rbx*2+0x6],edx
    24e9:	00 00                	add    BYTE PTR [rax],al
    24eb:	03 17                	add    edx,DWORD PTR [rdi]
    24ed:	60                   	(bad)  
    24ee:	01 00                	add    DWORD PTR [rax],eax
    24f0:	00 00                	add    BYTE PTR [rax],al
    24f2:	05 90 23 40 00       	add    eax,0x402390
    24f7:	00 00                	add    BYTE PTR [rax],al
    24f9:	00 00                	add    BYTE PTR [rax],al
    24fb:	04 00                	add    al,0x0
    24fd:	00 00                	add    BYTE PTR [rax],al
    24ff:	01 57 53             	add    DWORD PTR [rdi+0x53],edx
    2502:	06                   	(bad)  
    2503:	00 00                	add    BYTE PTR [rax],al
    2505:	03 1f                	add    ebx,DWORD PTR [rdi]
    2507:	73 00                	jae    2509 <__abi_tag-0x3fde73>
    2509:	00 00                	add    BYTE PTR [rax],al
    250b:	06                   	(bad)  
    250c:	01 55 ce             	add    DWORD PTR [rbp-0x32],edx
    250f:	01 00                	add    DWORD PTR [rax],eax
    2511:	00 03                	add    BYTE PTR [rbx],al
    2513:	1f                   	(bad)  
    2514:	7d 01                	jge    2517 <__abi_tag-0x3fde65>
    2516:	00 00                	add    BYTE PTR [rax],al
    2518:	06                   	(bad)  
    2519:	01 54 5e 06          	add    DWORD PTR [rsi+rbx*2+0x6],edx
    251d:	00 00                	add    BYTE PTR [rax],al
    251f:	03 1f                	add    ebx,DWORD PTR [rdi]
    2521:	60                   	(bad)  
    2522:	01 00                	add    DWORD PTR [rax],eax
    2524:	00 00                	add    BYTE PTR [rax],al
    2526:	03 6b 01             	add    ebp,DWORD PTR [rbx+0x1]
    2529:	00 00                	add    BYTE PTR [rax],al
    252b:	d5                   	(bad)  
    252c:	01 00                	add    DWORD PTR [rax],eax
    252e:	00 02                	add    BYTE PTR [rdx],al
    2530:	18 03                	sbb    BYTE PTR [rbx],al
    2532:	76 01                	jbe    2535 <__abi_tag-0x3fde47>
    2534:	00 00                	add    BYTE PTR [rax],al
    2536:	d3 01                	rol    DWORD PTR [rcx],cl
    2538:	00 00                	add    BYTE PTR [rax],al
    253a:	01 26                	add    DWORD PTR [rsi],esp
    253c:	04 9f                	add    al,0x9f
    253e:	00 00                	add    BYTE PTR [rax],al
    2540:	00 08                	add    BYTE PTR [rax],cl
    2542:	01 02                	add    DWORD PTR [rdx],eax
    2544:	60                   	(bad)  
    2545:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 05 03    	add    DWORD PTR [rip+0x305130e],esp        # 3051316 <__TMC_END__+0x2c4c1de>
   8:	0e                   	(bad)  
   9:	10 17                	adc    BYTE PTR [rdi],dl
   b:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   d:	11 01                	adc    DWORD PTR [rcx],eax
   f:	12 06                	adc    al,BYTE PTR [rsi]
  11:	00 00                	add    BYTE PTR [rax],al
  13:	02 0f                	add    cl,BYTE PTR [rdi]
  15:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
  1d:	03 0e                	add    ecx,DWORD PTR [rsi]
  1f:	3e 0b 0b             	ds or  ecx,DWORD PTR [rbx]
  22:	0b 00                	or     eax,DWORD PTR [rax]
  24:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
  27:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
  2a:	03 0e                	add    ecx,DWORD PTR [rsi]
  2c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  2e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  30:	00 00                	add    BYTE PTR [rax],al
  32:	05 13 01 0b 0b       	add    eax,0xb0b0113
  37:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  39:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  3b:	00 00                	add    BYTE PTR [rax],al
  3d:	06                   	(bad)  
  3e:	0d 00 03 0e 49       	or     eax,0x490e0300
  43:	13 3a                	adc    edi,DWORD PTR [rdx]
  45:	0b 3b                	or     edi,DWORD PTR [rbx]
  47:	0b 38                	or     edi,DWORD PTR [rax]
  49:	0b 00                	or     eax,DWORD PTR [rax]
  4b:	00 07                	add    BYTE PTR [rdi],al
  4d:	01 01                	add    DWORD PTR [rcx],eax
  4f:	49 13 00             	adc    rax,QWORD PTR [r8]
  52:	00 08                	add    BYTE PTR [rax],cl
  54:	21 00                	and    DWORD PTR [rax],eax
  56:	49 13 37             	adc    rsi,QWORD PTR [r15]
  59:	0b 00                	or     eax,DWORD PTR [rax]
  5b:	00 09                	add    BYTE PTR [rcx],cl
  5d:	24 00                	and    al,0x0
  5f:	03 0e                	add    ecx,DWORD PTR [rsi]
  61:	0b 0b                	or     ecx,DWORD PTR [rbx]
  63:	3e 0b 00             	ds or  eax,DWORD PTR [rax]
  66:	00 0a                	add    BYTE PTR [rdx],cl
  68:	0f 00 00             	sldt   WORD PTR [rax]
  6b:	00 0b                	add    BYTE PTR [rbx],cl
  6d:	2e 01 11             	cs add DWORD PTR [rcx],edx
  70:	01 12                	add    DWORD PTR [rdx],edx
  72:	06                   	(bad)  
  73:	40 18 97 42 19 31 13 	rex sbb BYTE PTR [rdi+0x13311942],dl
  7a:	00 00                	add    BYTE PTR [rax],al
  7c:	0c 05                	or     al,0x5
  7e:	00 02                	add    BYTE PTR [rdx],al
  80:	17                   	(bad)  
  81:	31 13                	xor    DWORD PTR [rbx],edx
  83:	00 00                	add    BYTE PTR [rax],al
  85:	0d 34 00 02 17       	or     eax,0x17020034
  8a:	31 13                	xor    DWORD PTR [rbx],edx
  8c:	00 00                	add    BYTE PTR [rax],al
  8e:	0e                   	(bad)  
  8f:	89 82 01 01 31 13    	mov    DWORD PTR [rdx+0x13310101],eax
  95:	11 01                	adc    DWORD PTR [rcx],eax
  97:	00 00                	add    BYTE PTR [rax],al
  99:	0f 8a 82 01 00 02    	jp     2000221 <__TMC_END__+0x1bfb0e9>
  9f:	18 91 42 18 00 00    	sbb    BYTE PTR [rcx+0x1842],dl
  a5:	10 2e                	adc    BYTE PTR [rsi],ch
  a7:	01 03                	add    DWORD PTR [rbx],eax
  a9:	0e                   	(bad)  
  aa:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  ac:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  ae:	27                   	(bad)  
  af:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  b2:	3c 19                	cmp    al,0x19
  b4:	3f                   	(bad)  
  b5:	19 00                	sbb    DWORD PTR [rax],eax
  b7:	00 11                	add    BYTE PTR [rcx],dl
  b9:	05 00 49 13 00       	add    eax,0x134900
  be:	00 12                	add    BYTE PTR [rdx],dl
  c0:	18 00                	sbb    BYTE PTR [rax],al
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	13 26                	adc    esp,DWORD PTR [rsi]
  c6:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
  c9:	00 00                	add    BYTE PTR [rax],al
  cb:	14 2e                	adc    al,0x2e
  cd:	01 03                	add    DWORD PTR [rbx],eax
  cf:	0e                   	(bad)  
  d0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  d2:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 134919ff <__TMC_END__+0x1308c8c7>
  d8:	3c 19                	cmp    al,0x19
  da:	3f                   	(bad)  
  db:	19 00                	sbb    DWORD PTR [rax],eax
  dd:	00 15 2e 01 11 01    	add    BYTE PTR [rip+0x111012e],dl        # 1110211 <__TMC_END__+0xd0b0d9>
  e3:	12 06                	adc    al,BYTE PTR [rsi]
  e5:	40 18 97 42 19 03 0e 	rex sbb BYTE PTR [rdi+0xe031942],dl
  ec:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  ee:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  f0:	27                   	(bad)  
  f1:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  f4:	3f                   	(bad)  
  f5:	19 00                	sbb    DWORD PTR [rax],eax
  f7:	00 16                	add    BYTE PTR [rsi],dl
  f9:	05 00 02 17 03       	add    eax,0x3170200
  fe:	0e                   	(bad)  
  ff:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 101:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 103:	49 13 00             	adc    rax,QWORD PTR [r8]
 106:	00 17                	add    BYTE PTR [rdi],dl
 108:	2e 01 03             	cs add DWORD PTR [rbx],eax
 10b:	0e                   	(bad)  
 10c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 10e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 110:	27                   	(bad)  
 111:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 114:	3f                   	(bad)  
 115:	19 20                	sbb    DWORD PTR [rax],esp
 117:	0b 00                	or     eax,DWORD PTR [rax]
 119:	00 18                	add    BYTE PTR [rax],bl
 11b:	05 00 03 0e 3a       	add    eax,0x3a0e0300
 120:	0b 3b                	or     edi,DWORD PTR [rbx]
 122:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 125:	00 00                	add    BYTE PTR [rax],al
 127:	19 34 00             	sbb    DWORD PTR [rax+rax*1],esi
 12a:	03 0e                	add    ecx,DWORD PTR [rsi]
 12c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 12e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 130:	49 13 00             	adc    rax,QWORD PTR [r8]
 133:	00 1a                	add    BYTE PTR [rdx],bl
 135:	13 01                	adc    eax,DWORD PTR [rcx]
 137:	03 0e                	add    ecx,DWORD PTR [rsi]
 139:	0b 0b                	or     ecx,DWORD PTR [rbx]
 13b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 13d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 13f:	00 00                	add    BYTE PTR [rax],al
 141:	1b 16                	sbb    edx,DWORD PTR [rsi]
 143:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 146:	03 0e                	add    ecx,DWORD PTR [rsi]
 148:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 14a:	3b 05 00 00 1c 13    	cmp    eax,DWORD PTR [rip+0x131c0000]        # 131c0150 <__TMC_END__+0x12dbb018>
 150:	01 0b                	add    DWORD PTR [rbx],ecx
 152:	0b 3a                	or     edi,DWORD PTR [rdx]
 154:	0b 3b                	or     edi,DWORD PTR [rbx]
 156:	05 00 00 1d 0d       	add    eax,0xd1d0000
 15b:	00 03                	add    BYTE PTR [rbx],al
 15d:	0e                   	(bad)  
 15e:	49 13 3a             	adc    rdi,QWORD PTR [r10]
 161:	0b 3b                	or     edi,DWORD PTR [rbx]
 163:	05 38 0b 00 00       	add    eax,0xb38
 168:	1e                   	(bad)  
 169:	34 00                	xor    al,0x0
 16b:	02 18                	add    bl,BYTE PTR [rax]
 16d:	03 0e                	add    ecx,DWORD PTR [rsi]
 16f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 171:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 173:	49 13 00             	adc    rax,QWORD PTR [r8]
 176:	00 1f                	add    BYTE PTR [rdi],bl
 178:	1d 01 31 13 55       	sbb    eax,0x55133101
 17d:	17                   	(bad)  
 17e:	58                   	pop    rax
 17f:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
 182:	57                   	push   rdi
 183:	0b 00                	or     eax,DWORD PTR [rax]
 185:	00 20                	add    BYTE PTR [rax],ah
 187:	89 82 01 00 31 13    	mov    DWORD PTR [rdx+0x13310001],eax
 18d:	11 01                	adc    DWORD PTR [rcx],eax
 18f:	00 00                	add    BYTE PTR [rax],al
 191:	21 15 01 49 13 27    	and    DWORD PTR [rip+0x27134901],edx        # 27134a98 <__TMC_END__+0x26d2f960>
 197:	19 00                	sbb    DWORD PTR [rax],eax
 199:	00 22                	add    BYTE PTR [rdx],ah
 19b:	26 00 00             	es add BYTE PTR [rax],al
 19e:	00 00                	add    BYTE PTR [rax],al
 1a0:	01 11                	add    DWORD PTR [rcx],edx
 1a2:	01 25 0e 13 05 03    	add    DWORD PTR [rip+0x305130e],esp        # 30514b6 <__TMC_END__+0x2c4c37e>
 1a8:	0e                   	(bad)  
 1a9:	10 17                	adc    BYTE PTR [rdi],dl
 1ab:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
 1ad:	11 01                	adc    DWORD PTR [rcx],eax
 1af:	12 06                	adc    al,BYTE PTR [rsi]
 1b1:	00 00                	add    BYTE PTR [rax],al
 1b3:	02 0f                	add    cl,BYTE PTR [rdi]
 1b5:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 1b8:	00 00                	add    BYTE PTR [rax],al
 1ba:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
 1bd:	03 0e                	add    ecx,DWORD PTR [rsi]
 1bf:	3e 0b 0b             	ds or  ecx,DWORD PTR [rbx]
 1c2:	0b 00                	or     eax,DWORD PTR [rax]
 1c4:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
 1c7:	01 11                	add    DWORD PTR [rcx],edx
 1c9:	01 12                	add    DWORD PTR [rdx],edx
 1cb:	06                   	(bad)  
 1cc:	40 18 97 42 19 31 13 	rex sbb BYTE PTR [rdi+0x13311942],dl
 1d3:	00 00                	add    BYTE PTR [rax],al
 1d5:	05 05 00 02 18       	add    eax,0x18020005
 1da:	31 13                	xor    DWORD PTR [rbx],edx
 1dc:	00 00                	add    BYTE PTR [rax],al
 1de:	06                   	(bad)  
 1df:	05 00 02 17 31       	add    eax,0x31170200
 1e4:	13 00                	adc    eax,DWORD PTR [rax]
 1e6:	00 07                	add    BYTE PTR [rdi],al
 1e8:	0b 01                	or     eax,DWORD PTR [rcx]
 1ea:	11 01                	adc    DWORD PTR [rcx],eax
 1ec:	12 06                	adc    al,BYTE PTR [rsi]
 1ee:	00 00                	add    BYTE PTR [rax],al
 1f0:	08 34 00             	or     BYTE PTR [rax+rax*1],dh
 1f3:	02 17                	add    dl,BYTE PTR [rdi]
 1f5:	31 13                	xor    DWORD PTR [rbx],edx
 1f7:	00 00                	add    BYTE PTR [rax],al
 1f9:	09 2e                	or     DWORD PTR [rsi],ebp
 1fb:	01 03                	add    DWORD PTR [rbx],eax
 1fd:	0e                   	(bad)  
 1fe:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 200:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 202:	27                   	(bad)  
 203:	19 3f                	sbb    DWORD PTR [rdi],edi
 205:	19 20                	sbb    DWORD PTR [rax],esp
 207:	0b 00                	or     eax,DWORD PTR [rax]
 209:	00 0a                	add    BYTE PTR [rdx],cl
 20b:	05 00 03 0e 3a       	add    eax,0x3a0e0300
 210:	0b 3b                	or     edi,DWORD PTR [rbx]
 212:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 215:	00 00                	add    BYTE PTR [rax],al
 217:	0b 0b                	or     ecx,DWORD PTR [rbx]
 219:	01 00                	add    DWORD PTR [rax],eax
 21b:	00 0c 34             	add    BYTE PTR [rsp+rsi*1],cl
 21e:	00 03                	add    BYTE PTR [rbx],al
 220:	0e                   	(bad)  
 221:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 223:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 225:	49 13 00             	adc    rax,QWORD PTR [r8]
 228:	00 0d 0f 00 00 00    	add    BYTE PTR [rip+0xf],cl        # 23d <__abi_tag-0x40013f>
 22e:	0e                   	(bad)  
 22f:	16                   	(bad)  
 230:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 233:	03 0e                	add    ecx,DWORD PTR [rsi]
 235:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 237:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 239:	00 00                	add    BYTE PTR [rax],al
 23b:	0f 26                	(bad)  
 23d:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 240:	00 00                	add    BYTE PTR [rax],al
 242:	10 2e                	adc    BYTE PTR [rsi],ch
 244:	01 11                	add    DWORD PTR [rcx],edx
 246:	01 12                	add    DWORD PTR [rdx],edx
 248:	06                   	(bad)  
 249:	40 18 97 42 19 03 0e 	rex sbb BYTE PTR [rdi+0xe031942],dl
 250:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 252:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 254:	27                   	(bad)  
 255:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 258:	3f                   	(bad)  
 259:	19 00                	sbb    DWORD PTR [rax],eax
 25b:	00 11                	add    BYTE PTR [rcx],dl
 25d:	05 00 02 17 03       	add    eax,0x3170200
 262:	0e                   	(bad)  
 263:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 265:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 267:	49 13 00             	adc    rax,QWORD PTR [r8]
 26a:	00 12                	add    BYTE PTR [rdx],dl
 26c:	34 00                	xor    al,0x0
 26e:	02 17                	add    dl,BYTE PTR [rdi]
 270:	03 0e                	add    ecx,DWORD PTR [rsi]
 272:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 274:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 276:	49 13 00             	adc    rax,QWORD PTR [r8]
 279:	00 13                	add    BYTE PTR [rbx],dl
 27b:	1d 01 31 13 11       	sbb    eax,0x11133101
 280:	01 12                	add    DWORD PTR [rdx],edx
 282:	06                   	(bad)  
 283:	58                   	pop    rax
 284:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
 287:	57                   	push   rdi
 288:	0b 00                	or     eax,DWORD PTR [rax]
 28a:	00 14 89             	add    BYTE PTR [rcx+rcx*4],dl
 28d:	82                   	(bad)  
 28e:	01 00                	add    DWORD PTR [rax],eax
 290:	31 13                	xor    DWORD PTR [rbx],edx
 292:	11 01                	adc    DWORD PTR [rcx],eax
 294:	00 00                	add    BYTE PTR [rax],al
 296:	15 89 82 01 01       	adc    eax,0x1018289
 29b:	31 13                	xor    DWORD PTR [rbx],edx
 29d:	11 01                	adc    DWORD PTR [rcx],eax
 29f:	00 00                	add    BYTE PTR [rax],al
 2a1:	16                   	(bad)  
 2a2:	8a 82 01 00 02 18    	mov    al,BYTE PTR [rdx+0x18020001]
 2a8:	91                   	xchg   ecx,eax
 2a9:	42 18 00             	rex.X sbb BYTE PTR [rax],al
 2ac:	00 17                	add    BYTE PTR [rdi],dl
 2ae:	2e 01 03             	cs add DWORD PTR [rbx],eax
 2b1:	0e                   	(bad)  
 2b2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2b4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 2b6:	27                   	(bad)  
 2b7:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 2ba:	3c 19                	cmp    al,0x19
 2bc:	3f                   	(bad)  
 2bd:	19 00                	sbb    DWORD PTR [rax],eax
 2bf:	00 18                	add    BYTE PTR [rax],bl
 2c1:	05 00 49 13 00       	add    eax,0x134900
 2c6:	00 19                	add    BYTE PTR [rcx],bl
 2c8:	13 01                	adc    eax,DWORD PTR [rcx]
 2ca:	03 0e                	add    ecx,DWORD PTR [rsi]
 2cc:	0b 0b                	or     ecx,DWORD PTR [rbx]
 2ce:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2d0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 2d2:	00 00                	add    BYTE PTR [rax],al
 2d4:	1a 0d 00 03 0e 49    	sbb    cl,BYTE PTR [rip+0x490e0300]        # 490e05da <__TMC_END__+0x48cdb4a2>
 2da:	13 3a                	adc    edi,DWORD PTR [rdx]
 2dc:	0b 3b                	or     edi,DWORD PTR [rbx]
 2de:	0b 38                	or     edi,DWORD PTR [rax]
 2e0:	0b 00                	or     eax,DWORD PTR [rax]
 2e2:	00 1b                	add    BYTE PTR [rbx],bl
 2e4:	16                   	(bad)  
 2e5:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 2e8:	03 0e                	add    ecx,DWORD PTR [rsi]
 2ea:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2ec:	3b 05 00 00 1c 13    	cmp    eax,DWORD PTR [rip+0x131c0000]        # 131c02f2 <__TMC_END__+0x12dbb1ba>
 2f2:	01 0b                	add    DWORD PTR [rbx],ecx
 2f4:	0b 3a                	or     edi,DWORD PTR [rdx]
 2f6:	0b 3b                	or     edi,DWORD PTR [rbx]
 2f8:	05 00 00 1d 0d       	add    eax,0xd1d0000
 2fd:	00 03                	add    BYTE PTR [rbx],al
 2ff:	0e                   	(bad)  
 300:	49 13 3a             	adc    rdi,QWORD PTR [r10]
 303:	0b 3b                	or     edi,DWORD PTR [rbx]
 305:	05 38 0b 00 00       	add    eax,0xb38
 30a:	1e                   	(bad)  
 30b:	15 01 49 13 27       	adc    eax,0x27134901
 310:	19 00                	sbb    DWORD PTR [rax],eax
 312:	00 1f                	add    BYTE PTR [rdi],bl
 314:	26 00 00             	es add BYTE PTR [rax],al
 317:	00 20                	add    BYTE PTR [rax],ah
 319:	2e 01 03             	cs add DWORD PTR [rbx],eax
 31c:	0e                   	(bad)  
 31d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 31f:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 13491c4c <__TMC_END__+0x1308cb14>
 325:	3c 19                	cmp    al,0x19
 327:	3f                   	(bad)  
 328:	19 00                	sbb    DWORD PTR [rax],eax
 32a:	00 21                	add    BYTE PTR [rcx],ah
 32c:	18 00                	sbb    BYTE PTR [rax],al
 32e:	00 00                	add    BYTE PTR [rax],al
 330:	22 2e                	and    ch,BYTE PTR [rsi]
 332:	01 03                	add    DWORD PTR [rbx],eax
 334:	0e                   	(bad)  
 335:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 337:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 339:	27                   	(bad)  
 33a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
 33d:	3f                   	(bad)  
 33e:	19 00                	sbb    DWORD PTR [rax],eax
 340:	00 23                	add    BYTE PTR [rbx],ah
 342:	13 01                	adc    eax,DWORD PTR [rcx]
 344:	0b 0b                	or     ecx,DWORD PTR [rbx]
 346:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 348:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 34a:	00 00                	add    BYTE PTR [rax],al
 34c:	24 01                	and    al,0x1
 34e:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
 351:	00 00                	add    BYTE PTR [rax],al
 353:	25 21 00 49 13       	and    eax,0x13490021
 358:	37                   	(bad)  
 359:	0b 00                	or     eax,DWORD PTR [rax]
 35b:	00 26                	add    BYTE PTR [rsi],ah
 35d:	24 00                	and    al,0x0
 35f:	03 0e                	add    ecx,DWORD PTR [rsi]
 361:	0b 0b                	or     ecx,DWORD PTR [rbx]
 363:	3e 0b 00             	ds or  eax,DWORD PTR [rax]
 366:	00 00                	add    BYTE PTR [rax],al
 368:	01 11                	add    DWORD PTR [rcx],edx
 36a:	01 25 0e 13 05 03    	add    DWORD PTR [rip+0x305130e],esp        # 305167e <__TMC_END__+0x2c4c546>
 370:	0e                   	(bad)  
 371:	10 17                	adc    BYTE PTR [rdi],dl
 373:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
 375:	11 01                	adc    DWORD PTR [rcx],eax
 377:	12 06                	adc    al,BYTE PTR [rsi]
 379:	00 00                	add    BYTE PTR [rax],al
 37b:	02 0f                	add    cl,BYTE PTR [rdi]
 37d:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 380:	00 00                	add    BYTE PTR [rax],al
 382:	03 16                	add    edx,DWORD PTR [rsi]
 384:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 387:	03 0e                	add    ecx,DWORD PTR [rsi]
 389:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 38b:	3b 05 00 00 04 13    	cmp    eax,DWORD PTR [rip+0x13040000]        # 13040391 <__TMC_END__+0x12c3b259>
 391:	01 0b                	add    DWORD PTR [rbx],ecx
 393:	0b 3a                	or     edi,DWORD PTR [rdx]
 395:	0b 3b                	or     edi,DWORD PTR [rbx]
 397:	05 00 00 05 0d       	add    eax,0xd050000
 39c:	00 03                	add    BYTE PTR [rbx],al
 39e:	0e                   	(bad)  
 39f:	49 13 3a             	adc    rdi,QWORD PTR [r10]
 3a2:	0b 3b                	or     edi,DWORD PTR [rbx]
 3a4:	05 38 0b 00 00       	add    eax,0xb38
 3a9:	06                   	(bad)  
 3aa:	16                   	(bad)  
 3ab:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 3ae:	03 0e                	add    ecx,DWORD PTR [rsi]
 3b0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 3b2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 3b4:	00 00                	add    BYTE PTR [rax],al
 3b6:	07                   	(bad)  
 3b7:	24 00                	and    al,0x0
 3b9:	03 0e                	add    ecx,DWORD PTR [rsi]
 3bb:	3e 0b 0b             	ds or  ecx,DWORD PTR [rbx]
 3be:	0b 00                	or     eax,DWORD PTR [rax]
 3c0:	00 08                	add    BYTE PTR [rax],cl
 3c2:	0f 00 00             	sldt   WORD PTR [rax]
 3c5:	00 09                	add    BYTE PTR [rcx],cl
 3c7:	2e 01 11             	cs add DWORD PTR [rcx],edx
 3ca:	01 12                	add    DWORD PTR [rdx],edx
 3cc:	06                   	(bad)  
 3cd:	40 18 97 42 19 31 13 	rex sbb BYTE PTR [rdi+0x13311942],dl
 3d4:	00 00                	add    BYTE PTR [rax],al
 3d6:	0a 05 00 02 18 31    	or     al,BYTE PTR [rip+0x31180200]        # 311805dc <__TMC_END__+0x30d7b4a4>
 3dc:	13 00                	adc    eax,DWORD PTR [rax]
 3de:	00 0b                	add    BYTE PTR [rbx],cl
 3e0:	05 00 02 17 31       	add    eax,0x31170200
 3e5:	13 00                	adc    eax,DWORD PTR [rax]
 3e7:	00 0c 0b             	add    BYTE PTR [rbx+rcx*1],cl
 3ea:	01 11                	add    DWORD PTR [rcx],edx
 3ec:	01 12                	add    DWORD PTR [rdx],edx
 3ee:	06                   	(bad)  
 3ef:	00 00                	add    BYTE PTR [rax],al
 3f1:	0d 34 00 02 17       	or     eax,0x17020034
 3f6:	31 13                	xor    DWORD PTR [rbx],edx
 3f8:	00 00                	add    BYTE PTR [rax],al
 3fa:	0e                   	(bad)  
 3fb:	89 82 01 00 31 13    	mov    DWORD PTR [rdx+0x13310001],eax
 401:	11 01                	adc    DWORD PTR [rcx],eax
 403:	00 00                	add    BYTE PTR [rax],al
 405:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
 408:	03 0e                	add    ecx,DWORD PTR [rsi]
 40a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 40c:	3b 05 27 19 3c 19    	cmp    eax,DWORD PTR [rip+0x193c1927]        # 193c1d39 <__TMC_END__+0x18fbcc01>
 412:	3f                   	(bad)  
 413:	19 00                	sbb    DWORD PTR [rax],eax
 415:	00 10                	add    BYTE PTR [rax],dl
 417:	05 00 49 13 00       	add    eax,0x134900
 41c:	00 11                	add    BYTE PTR [rcx],dl
 41e:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
 422:	00 00                	add    BYTE PTR [rax],al
 424:	12 2e                	adc    ch,BYTE PTR [rsi]
 426:	01 03                	add    DWORD PTR [rbx],eax
 428:	0e                   	(bad)  
 429:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 42b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 42d:	27                   	(bad)  
 42e:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 431:	3f                   	(bad)  
 432:	19 20                	sbb    DWORD PTR [rax],esp
 434:	0b 00                	or     eax,DWORD PTR [rax]
 436:	00 13                	add    BYTE PTR [rbx],dl
 438:	05 00 03 0e 3a       	add    eax,0x3a0e0300
 43d:	0b 3b                	or     edi,DWORD PTR [rbx]
 43f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 442:	00 00                	add    BYTE PTR [rax],al
 444:	14 0b                	adc    al,0xb
 446:	01 00                	add    DWORD PTR [rax],eax
 448:	00 15 34 00 03 0e    	add    BYTE PTR [rip+0xe030034],dl        # e030482 <__TMC_END__+0xdc2b34a>
 44e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 450:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 452:	49 13 00             	adc    rax,QWORD PTR [r8]
 455:	00 16                	add    BYTE PTR [rsi],dl
 457:	13 01                	adc    eax,DWORD PTR [rcx]
 459:	0b 0b                	or     ecx,DWORD PTR [rbx]
 45b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 45d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 45f:	00 00                	add    BYTE PTR [rax],al
 461:	17                   	(bad)  
 462:	0d 00 03 0e 49       	or     eax,0x490e0300
 467:	13 3a                	adc    edi,DWORD PTR [rdx]
 469:	0b 3b                	or     edi,DWORD PTR [rbx]
 46b:	0b 38                	or     edi,DWORD PTR [rax]
 46d:	0b 00                	or     eax,DWORD PTR [rax]
 46f:	00 18                	add    BYTE PTR [rax],bl
 471:	01 01                	add    DWORD PTR [rcx],eax
 473:	49 13 00             	adc    rax,QWORD PTR [r8]
 476:	00 19                	add    BYTE PTR [rcx],bl
 478:	21 00                	and    DWORD PTR [rax],eax
 47a:	49 13 37             	adc    rsi,QWORD PTR [r15]
 47d:	0b 00                	or     eax,DWORD PTR [rax]
 47f:	00 1a                	add    BYTE PTR [rdx],bl
 481:	24 00                	and    al,0x0
 483:	03 0e                	add    ecx,DWORD PTR [rsi]
 485:	0b 0b                	or     ecx,DWORD PTR [rbx]
 487:	3e 0b 00             	ds or  eax,DWORD PTR [rax]
 48a:	00 1b                	add    BYTE PTR [rbx],bl
 48c:	13 01                	adc    eax,DWORD PTR [rcx]
 48e:	03 0e                	add    ecx,DWORD PTR [rsi]
 490:	0b 0b                	or     ecx,DWORD PTR [rbx]
 492:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 494:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 496:	00 00                	add    BYTE PTR [rax],al
 498:	1c 2e                	sbb    al,0x2e
 49a:	01 11                	add    DWORD PTR [rcx],edx
 49c:	01 12                	add    DWORD PTR [rdx],edx
 49e:	06                   	(bad)  
 49f:	40 18 97 42 19 03 0e 	rex sbb BYTE PTR [rdi+0xe031942],dl
 4a6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 4a8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 4aa:	27                   	(bad)  
 4ab:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 4ae:	3f                   	(bad)  
 4af:	19 00                	sbb    DWORD PTR [rax],eax
 4b1:	00 1d 05 00 02 17    	add    BYTE PTR [rip+0x17020005],bl        # 170204bc <__TMC_END__+0x16c1b384>
 4b7:	03 0e                	add    ecx,DWORD PTR [rsi]
 4b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 4bb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 4bd:	49 13 00             	adc    rax,QWORD PTR [r8]
 4c0:	00 1e                	add    BYTE PTR [rsi],bl
 4c2:	34 00                	xor    al,0x0
 4c4:	02 17                	add    dl,BYTE PTR [rdi]
 4c6:	03 0e                	add    ecx,DWORD PTR [rsi]
 4c8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 4ca:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 4cc:	49 13 00             	adc    rax,QWORD PTR [r8]
 4cf:	00 1f                	add    BYTE PTR [rdi],bl
 4d1:	1d 01 31 13 55       	sbb    eax,0x55133101
 4d6:	17                   	(bad)  
 4d7:	58                   	pop    rax
 4d8:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
 4db:	57                   	push   rdi
 4dc:	0b 00                	or     eax,DWORD PTR [rax]
 4de:	00 20                	add    BYTE PTR [rax],ah
 4e0:	2e 01 03             	cs add DWORD PTR [rbx],eax
 4e3:	0e                   	(bad)  
 4e4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 4e6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 4e8:	27                   	(bad)  
 4e9:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 4ec:	3c 19                	cmp    al,0x19
 4ee:	3f                   	(bad)  
 4ef:	19 00                	sbb    DWORD PTR [rax],eax
 4f1:	00 21                	add    BYTE PTR [rcx],ah
 4f3:	15 01 49 13 27       	adc    eax,0x27134901
 4f8:	19 00                	sbb    DWORD PTR [rax],eax
 4fa:	00 22                	add    BYTE PTR [rdx],ah
 4fc:	26 00 00             	es add BYTE PTR [rax],al
 4ff:	00 00                	add    BYTE PTR [rax],al
 501:	01 11                	add    DWORD PTR [rcx],edx
 503:	01 25 0e 13 05 03    	add    DWORD PTR [rip+0x305130e],esp        # 3051817 <__TMC_END__+0x2c4c6df>
 509:	0e                   	(bad)  
 50a:	10 17                	adc    BYTE PTR [rdi],dl
 50c:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
 50e:	11 01                	adc    DWORD PTR [rcx],eax
 510:	12 06                	adc    al,BYTE PTR [rsi]
 512:	00 00                	add    BYTE PTR [rax],al
 514:	02 0f                	add    cl,BYTE PTR [rdi]
 516:	00 00                	add    BYTE PTR [rax],al
 518:	00 03                	add    BYTE PTR [rbx],al
 51a:	0f 00 49 13          	str    WORD PTR [rcx+0x13]
 51e:	00 00                	add    BYTE PTR [rax],al
 520:	04 16                	add    al,0x16
 522:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 525:	03 0e                	add    ecx,DWORD PTR [rsi]
 527:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 529:	3b 05 00 00 05 13    	cmp    eax,DWORD PTR [rip+0x13050000]        # 1305052f <__TMC_END__+0x12c4b3f7>
 52f:	01 0b                	add    DWORD PTR [rbx],ecx
 531:	0b 3a                	or     edi,DWORD PTR [rdx]
 533:	0b 3b                	or     edi,DWORD PTR [rbx]
 535:	05 00 00 06 0d       	add    eax,0xd060000
 53a:	00 03                	add    BYTE PTR [rbx],al
 53c:	0e                   	(bad)  
 53d:	49 13 3a             	adc    rdi,QWORD PTR [r10]
 540:	0b 3b                	or     edi,DWORD PTR [rbx]
 542:	05 38 0b 00 00       	add    eax,0xb38
 547:	07                   	(bad)  
 548:	16                   	(bad)  
 549:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 54c:	03 0e                	add    ecx,DWORD PTR [rsi]
 54e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 550:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 552:	00 00                	add    BYTE PTR [rax],al
 554:	08 24 00             	or     BYTE PTR [rax+rax*1],ah
 557:	03 0e                	add    ecx,DWORD PTR [rsi]
 559:	3e 0b 0b             	ds or  ecx,DWORD PTR [rbx]
 55c:	0b 00                	or     eax,DWORD PTR [rax]
 55e:	00 09                	add    BYTE PTR [rcx],cl
 560:	2e 01 11             	cs add DWORD PTR [rcx],edx
 563:	01 12                	add    DWORD PTR [rdx],edx
 565:	06                   	(bad)  
 566:	40 18 97 42 19 31 13 	rex sbb BYTE PTR [rdi+0x13311942],dl
 56d:	00 00                	add    BYTE PTR [rax],al
 56f:	0a 05 00 02 17 31    	or     al,BYTE PTR [rip+0x31170200]        # 31170775 <__TMC_END__+0x30d6b63d>
 575:	13 00                	adc    eax,DWORD PTR [rax]
 577:	00 0b                	add    BYTE PTR [rbx],cl
 579:	34 00                	xor    al,0x0
 57b:	02 17                	add    dl,BYTE PTR [rdi]
 57d:	31 13                	xor    DWORD PTR [rbx],edx
 57f:	00 00                	add    BYTE PTR [rax],al
 581:	0c 2e                	or     al,0x2e
 583:	01 03                	add    DWORD PTR [rbx],eax
 585:	0e                   	(bad)  
 586:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 588:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 58a:	27                   	(bad)  
 58b:	19 3f                	sbb    DWORD PTR [rdi],edi
 58d:	19 20                	sbb    DWORD PTR [rax],esp
 58f:	0b 00                	or     eax,DWORD PTR [rax]
 591:	00 0d 05 00 03 0e    	add    BYTE PTR [rip+0xe030005],cl        # e03059c <__TMC_END__+0xdc2b464>
 597:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 599:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 59b:	49 13 00             	adc    rax,QWORD PTR [r8]
 59e:	00 0e                	add    BYTE PTR [rsi],cl
 5a0:	34 00                	xor    al,0x0
 5a2:	03 0e                	add    ecx,DWORD PTR [rsi]
 5a4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 5a6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 5a8:	49 13 00             	adc    rax,QWORD PTR [r8]
 5ab:	00 0f                	add    BYTE PTR [rdi],cl
 5ad:	13 01                	adc    eax,DWORD PTR [rcx]
 5af:	03 0e                	add    ecx,DWORD PTR [rsi]
 5b1:	0b 0b                	or     ecx,DWORD PTR [rbx]
 5b3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 5b5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 5b7:	00 00                	add    BYTE PTR [rax],al
 5b9:	10 0d 00 03 0e 49    	adc    BYTE PTR [rip+0x490e0300],cl        # 490e08bf <__TMC_END__+0x48cdb787>
 5bf:	13 3a                	adc    edi,DWORD PTR [rdx]
 5c1:	0b 3b                	or     edi,DWORD PTR [rbx]
 5c3:	0b 38                	or     edi,DWORD PTR [rax]
 5c5:	0b 00                	or     eax,DWORD PTR [rax]
 5c7:	00 11                	add    BYTE PTR [rcx],dl
 5c9:	2e 01 11             	cs add DWORD PTR [rcx],edx
 5cc:	01 12                	add    DWORD PTR [rdx],edx
 5ce:	06                   	(bad)  
 5cf:	40 18 97 42 19 03 0e 	rex sbb BYTE PTR [rdi+0xe031942],dl
 5d6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 5d8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 5da:	27                   	(bad)  
 5db:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 5de:	3f                   	(bad)  
 5df:	19 00                	sbb    DWORD PTR [rax],eax
 5e1:	00 12                	add    BYTE PTR [rdx],dl
 5e3:	05 00 02 17 03       	add    eax,0x3170200
 5e8:	0e                   	(bad)  
 5e9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 5eb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 5ed:	49 13 00             	adc    rax,QWORD PTR [r8]
 5f0:	00 13                	add    BYTE PTR [rbx],dl
 5f2:	34 00                	xor    al,0x0
 5f4:	02 17                	add    dl,BYTE PTR [rdi]
 5f6:	03 0e                	add    ecx,DWORD PTR [rsi]
 5f8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 5fa:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 5fc:	49 13 00             	adc    rax,QWORD PTR [r8]
 5ff:	00 14 0b             	add    BYTE PTR [rbx+rcx*1],dl
 602:	01 55 17             	add    DWORD PTR [rbp+0x17],edx
 605:	00 00                	add    BYTE PTR [rax],al
 607:	15 1d 01 31 13       	adc    eax,0x1331011d
 60c:	55                   	push   rbp
 60d:	17                   	(bad)  
 60e:	58                   	pop    rax
 60f:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
 612:	57                   	push   rdi
 613:	0b 00                	or     eax,DWORD PTR [rax]
 615:	00 16                	add    BYTE PTR [rsi],dl
 617:	89 82 01 00 93 42    	mov    DWORD PTR [rdx+0x42930001],eax
 61d:	18 11                	sbb    BYTE PTR [rcx],dl
 61f:	01 00                	add    DWORD PTR [rax],eax
 621:	00 17                	add    BYTE PTR [rdi],dl
 623:	05 00 02 18 03       	add    eax,0x3180200
 628:	0e                   	(bad)  
 629:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 62b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 62d:	49 13 00             	adc    rax,QWORD PTR [r8]
 630:	00 18                	add    BYTE PTR [rax],bl
 632:	13 01                	adc    eax,DWORD PTR [rcx]
 634:	0b 0b                	or     ecx,DWORD PTR [rbx]
 636:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 638:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 63a:	00 00                	add    BYTE PTR [rax],al
 63c:	19 01                	sbb    DWORD PTR [rcx],eax
 63e:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
 641:	00 00                	add    BYTE PTR [rax],al
 643:	1a 21                	sbb    ah,BYTE PTR [rcx]
 645:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 648:	37                   	(bad)  
 649:	0b 00                	or     eax,DWORD PTR [rax]
 64b:	00 1b                	add    BYTE PTR [rbx],bl
 64d:	24 00                	and    al,0x0
 64f:	03 0e                	add    ecx,DWORD PTR [rsi]
 651:	0b 0b                	or     ecx,DWORD PTR [rbx]
 653:	3e 0b 00             	ds or  eax,DWORD PTR [rax]
 656:	00 1c 26             	add    BYTE PTR [rsi+riz*1],bl
 659:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 65c:	00 00                	add    BYTE PTR [rax],al
 65e:	1d 15 01 49 13       	sbb    eax,0x13490115
 663:	27                   	(bad)  
 664:	19 00                	sbb    DWORD PTR [rax],eax
 666:	00 1e                	add    BYTE PTR [rsi],bl
 668:	05 00 49 13 00       	add    eax,0x134900
 66d:	00 1f                	add    BYTE PTR [rdi],bl
 66f:	26 00 00             	es add BYTE PTR [rax],al
 672:	00 00                	add    BYTE PTR [rax],al
 674:	01 11                	add    DWORD PTR [rcx],edx
 676:	01 25 0e 13 05 03    	add    DWORD PTR [rip+0x305130e],esp        # 305198a <__TMC_END__+0x2c4c852>
 67c:	0e                   	(bad)  
 67d:	10 17                	adc    BYTE PTR [rdi],dl
 67f:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
 681:	11 01                	adc    DWORD PTR [rcx],eax
 683:	12 06                	adc    al,BYTE PTR [rsi]
 685:	00 00                	add    BYTE PTR [rax],al
 687:	02 0f                	add    cl,BYTE PTR [rdi]
 689:	00 00                	add    BYTE PTR [rax],al
 68b:	00 03                	add    BYTE PTR [rbx],al
 68d:	2e 01 11             	cs add DWORD PTR [rcx],edx
 690:	01 12                	add    DWORD PTR [rdx],edx
 692:	06                   	(bad)  
 693:	40 18 97 42 19 03 0e 	rex sbb BYTE PTR [rdi+0xe031942],dl
 69a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 69c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 69e:	27                   	(bad)  
 69f:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 6a2:	3f                   	(bad)  
 6a3:	19 00                	sbb    DWORD PTR [rax],eax
 6a5:	00 04 05 00 02 17 03 	add    BYTE PTR [rax*1+0x3170200],al
 6ac:	0e                   	(bad)  
 6ad:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 6af:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 6b1:	49 13 00             	adc    rax,QWORD PTR [r8]
 6b4:	00 05 34 00 02 17    	add    BYTE PTR [rip+0x17020034],al        # 170206ee <__TMC_END__+0x16c1b5b6>
 6ba:	03 0e                	add    ecx,DWORD PTR [rsi]
 6bc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 6be:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 6c0:	49 13 00             	adc    rax,QWORD PTR [r8]
 6c3:	00 06                	add    BYTE PTR [rsi],al
 6c5:	89 82 01 01 31 13    	mov    DWORD PTR [rdx+0x13310101],eax
 6cb:	11 01                	adc    DWORD PTR [rcx],eax
 6cd:	00 00                	add    BYTE PTR [rax],al
 6cf:	07                   	(bad)  
 6d0:	8a 82 01 00 02 18    	mov    al,BYTE PTR [rdx+0x18020001]
 6d6:	91                   	xchg   ecx,eax
 6d7:	42 18 00             	rex.X sbb BYTE PTR [rax],al
 6da:	00 08                	add    BYTE PTR [rax],cl
 6dc:	89 82 01 00 31 13    	mov    DWORD PTR [rdx+0x13310001],eax
 6e2:	11 01                	adc    DWORD PTR [rcx],eax
 6e4:	00 00                	add    BYTE PTR [rax],al
 6e6:	09 2e                	or     DWORD PTR [rsi],ebp
 6e8:	01 03                	add    DWORD PTR [rbx],eax
 6ea:	0e                   	(bad)  
 6eb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 6ed:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 6ef:	27                   	(bad)  
 6f0:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 6f3:	3c 19                	cmp    al,0x19
 6f5:	3f                   	(bad)  
 6f6:	19 00                	sbb    DWORD PTR [rax],eax
 6f8:	00 0a                	add    BYTE PTR [rdx],cl
 6fa:	05 00 49 13 00       	add    eax,0x134900
 6ff:	00 0b                	add    BYTE PTR [rbx],cl
 701:	18 00                	sbb    BYTE PTR [rax],al
 703:	00 00                	add    BYTE PTR [rax],al
 705:	0c 24                	or     al,0x24
 707:	00 03                	add    BYTE PTR [rbx],al
 709:	0e                   	(bad)  
 70a:	3e 0b 0b             	ds or  ecx,DWORD PTR [rbx]
 70d:	0b 00                	or     eax,DWORD PTR [rax]
 70f:	00 0d 0f 00 49 13    	add    BYTE PTR [rip+0x1349000f],cl        # 13490724 <__TMC_END__+0x1308b5ec>
 715:	00 00                	add    BYTE PTR [rax],al
 717:	0e                   	(bad)  
 718:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
 71c:	00 00                	add    BYTE PTR [rax],al
 71e:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
 721:	03 0e                	add    ecx,DWORD PTR [rsi]
 723:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 725:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 13492052 <__TMC_END__+0x1308cf1a>
 72b:	3c 19                	cmp    al,0x19
 72d:	3f                   	(bad)  
 72e:	19 00                	sbb    DWORD PTR [rax],eax
 730:	00 10                	add    BYTE PTR [rax],dl
 732:	26 00 00             	es add BYTE PTR [rax],al
 735:	00 11                	add    BYTE PTR [rcx],dl
 737:	0b 01                	or     eax,DWORD PTR [rcx]
 739:	11 01                	adc    DWORD PTR [rcx],eax
 73b:	12 06                	adc    al,BYTE PTR [rsi]
 73d:	00 00                	add    BYTE PTR [rax],al
 73f:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
 742:	02 18                	add    bl,BYTE PTR [rax]
 744:	03 0e                	add    ecx,DWORD PTR [rsi]
 746:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 748:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 74a:	49 13 00             	adc    rax,QWORD PTR [r8]
 74d:	00 13                	add    BYTE PTR [rbx],dl
 74f:	16                   	(bad)  
 750:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 753:	03 0e                	add    ecx,DWORD PTR [rsi]
 755:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 757:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 759:	00 00                	add    BYTE PTR [rax],al
 75b:	14 13                	adc    al,0x13
 75d:	01 0b                	add    DWORD PTR [rbx],ecx
 75f:	0b 3a                	or     edi,DWORD PTR [rdx]
 761:	0b 3b                	or     edi,DWORD PTR [rbx]
 763:	0b 00                	or     eax,DWORD PTR [rax]
 765:	00 15 0d 00 03 0e    	add    BYTE PTR [rip+0xe03000d],dl        # e030778 <__TMC_END__+0xdc2b640>
 76b:	49 13 3a             	adc    rdi,QWORD PTR [r10]
 76e:	0b 3b                	or     edi,DWORD PTR [rbx]
 770:	0b 38                	or     edi,DWORD PTR [rax]
 772:	0b 00                	or     eax,DWORD PTR [rax]
 774:	00 16                	add    BYTE PTR [rsi],dl
 776:	01 01                	add    DWORD PTR [rcx],eax
 778:	49 13 00             	adc    rax,QWORD PTR [r8]
 77b:	00 17                	add    BYTE PTR [rdi],dl
 77d:	21 00                	and    DWORD PTR [rax],eax
 77f:	49 13 37             	adc    rsi,QWORD PTR [r15]
 782:	0b 00                	or     eax,DWORD PTR [rax]
 784:	00 18                	add    BYTE PTR [rax],bl
 786:	24 00                	and    al,0x0
 788:	03 0e                	add    ecx,DWORD PTR [rsi]
 78a:	0b 0b                	or     ecx,DWORD PTR [rbx]
 78c:	3e 0b 00             	ds or  eax,DWORD PTR [rax]
 78f:	00 19                	add    BYTE PTR [rcx],bl
 791:	13 01                	adc    eax,DWORD PTR [rcx]
 793:	03 0e                	add    ecx,DWORD PTR [rsi]
 795:	0b 0b                	or     ecx,DWORD PTR [rbx]
 797:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 799:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 79b:	00 00                	add    BYTE PTR [rax],al
 79d:	1a 16                	sbb    dl,BYTE PTR [rsi]
 79f:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 7a2:	03 0e                	add    ecx,DWORD PTR [rsi]
 7a4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 7a6:	3b 05 00 00 1b 13    	cmp    eax,DWORD PTR [rip+0x131b0000]        # 131b07ac <__TMC_END__+0x12dab674>
 7ac:	01 0b                	add    DWORD PTR [rbx],ecx
 7ae:	0b 3a                	or     edi,DWORD PTR [rdx]
 7b0:	0b 3b                	or     edi,DWORD PTR [rbx]
 7b2:	05 00 00 1c 0d       	add    eax,0xd1c0000
 7b7:	00 03                	add    BYTE PTR [rbx],al
 7b9:	0e                   	(bad)  
 7ba:	49 13 3a             	adc    rdi,QWORD PTR [r10]
 7bd:	0b 3b                	or     edi,DWORD PTR [rbx]
 7bf:	05 38 0b 00 00       	add    eax,0xb38
 7c4:	1d 21 00 49 13       	sbb    eax,0x13490021
 7c9:	37                   	(bad)  
 7ca:	05 00 00 00 01       	add    eax,0x1000000
 7cf:	11 01                	adc    DWORD PTR [rcx],eax
 7d1:	25 0e 13 05 03       	and    eax,0x305130e
 7d6:	0e                   	(bad)  
 7d7:	10 17                	adc    BYTE PTR [rdi],dl
 7d9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
 7db:	11 01                	adc    DWORD PTR [rcx],eax
 7dd:	12 06                	adc    al,BYTE PTR [rsi]
 7df:	00 00                	add    BYTE PTR [rax],al
 7e1:	02 0f                	add    cl,BYTE PTR [rdi]
 7e3:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 7e6:	00 00                	add    BYTE PTR [rax],al
 7e8:	03 16                	add    edx,DWORD PTR [rsi]
 7ea:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 7ed:	03 0e                	add    ecx,DWORD PTR [rsi]
 7ef:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 7f1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 7f3:	00 00                	add    BYTE PTR [rax],al
 7f5:	04 24                	add    al,0x24
 7f7:	00 03                	add    BYTE PTR [rbx],al
 7f9:	0e                   	(bad)  
 7fa:	3e 0b 0b             	ds or  ecx,DWORD PTR [rbx]
 7fd:	0b 00                	or     eax,DWORD PTR [rax]
 7ff:	00 05 2e 01 11 01    	add    BYTE PTR [rip+0x111012e],al        # 1110933 <__TMC_END__+0xd0b7fb>
 805:	12 06                	adc    al,BYTE PTR [rsi]
 807:	40 18 97 42 19 03 0e 	rex sbb BYTE PTR [rdi+0xe031942],dl
 80e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 810:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 812:	27                   	(bad)  
 813:	19 3f                	sbb    DWORD PTR [rdi],edi
 815:	19 00                	sbb    DWORD PTR [rax],eax
 817:	00 06                	add    BYTE PTR [rsi],al
 819:	05 00 02 17 03       	add    eax,0x3170200
 81e:	0e                   	(bad)  
 81f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 821:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 823:	49 13 00             	adc    rax,QWORD PTR [r8]
 826:	00 07                	add    BYTE PTR [rdi],al
 828:	0b 01                	or     eax,DWORD PTR [rcx]
 82a:	11 01                	adc    DWORD PTR [rcx],eax
 82c:	12 06                	adc    al,BYTE PTR [rsi]
 82e:	00 00                	add    BYTE PTR [rax],al
 830:	08 34 00             	or     BYTE PTR [rax+rax*1],dh
 833:	02 17                	add    dl,BYTE PTR [rdi]
 835:	03 0e                	add    ecx,DWORD PTR [rsi]
 837:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 839:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 83b:	49 13 00             	adc    rax,QWORD PTR [r8]
 83e:	00 09                	add    BYTE PTR [rcx],cl
 840:	89 82 01 01 31 13    	mov    DWORD PTR [rdx+0x13310101],eax
 846:	11 01                	adc    DWORD PTR [rcx],eax
 848:	00 00                	add    BYTE PTR [rax],al
 84a:	0a 8a 82 01 00 02    	or     cl,BYTE PTR [rdx+0x2000182]
 850:	18 91 42 18 00 00    	sbb    BYTE PTR [rcx+0x1842],dl
 856:	0b 89 82 01 01 31    	or     ecx,DWORD PTR [rcx+0x31010182]
 85c:	13 95 42 19 11 01    	adc    edx,DWORD PTR [rbp+0x1111942]
 862:	00 00                	add    BYTE PTR [rax],al
 864:	0c 2e                	or     al,0x2e
 866:	01 03                	add    DWORD PTR [rbx],eax
 868:	0e                   	(bad)  
 869:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 86b:	3b 05 27 19 49 13    	cmp    eax,DWORD PTR [rip+0x13491927]        # 13492198 <__TMC_END__+0x1308d060>
 871:	3c 19                	cmp    al,0x19
 873:	3f                   	(bad)  
 874:	19 00                	sbb    DWORD PTR [rax],eax
 876:	00 0d 05 00 49 13    	add    BYTE PTR [rip+0x13490005],cl        # 13490881 <__TMC_END__+0x1308b749>
 87c:	00 00                	add    BYTE PTR [rax],al
 87e:	0e                   	(bad)  
 87f:	18 00                	sbb    BYTE PTR [rax],al
 881:	00 00                	add    BYTE PTR [rax],al
 883:	0f 26                	(bad)  
 885:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 888:	00 00                	add    BYTE PTR [rax],al
 88a:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
 88d:	02 18                	add    bl,BYTE PTR [rax]
 88f:	03 0e                	add    ecx,DWORD PTR [rsi]
 891:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 893:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 895:	49 13 00             	adc    rax,QWORD PTR [r8]
 898:	00 11                	add    BYTE PTR [rcx],dl
 89a:	34 00                	xor    al,0x0
 89c:	03 0e                	add    ecx,DWORD PTR [rsi]
 89e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 8a0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 8a2:	49 13 00             	adc    rax,QWORD PTR [r8]
 8a5:	00 12                	add    BYTE PTR [rdx],dl
 8a7:	0f 00 00             	sldt   WORD PTR [rax]
 8aa:	00 13                	add    BYTE PTR [rbx],dl
 8ac:	2e 01 11             	cs add DWORD PTR [rcx],edx
 8af:	01 12                	add    DWORD PTR [rdx],edx
 8b1:	06                   	(bad)  
 8b2:	40 18 97 42 19 31 13 	rex sbb BYTE PTR [rdi+0x13311942],dl
 8b9:	00 00                	add    BYTE PTR [rax],al
 8bb:	14 05                	adc    al,0x5
 8bd:	00 02                	add    BYTE PTR [rdx],al
 8bf:	18 31                	sbb    BYTE PTR [rcx],dh
 8c1:	13 00                	adc    eax,DWORD PTR [rax]
 8c3:	00 15 2e 01 03 0e    	add    BYTE PTR [rip+0xe03012e],dl        # e0309f7 <__TMC_END__+0xdc2b8bf>
 8c9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 8cb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 8cd:	27                   	(bad)  
 8ce:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 8d1:	3f                   	(bad)  
 8d2:	19 20                	sbb    DWORD PTR [rax],esp
 8d4:	0b 00                	or     eax,DWORD PTR [rax]
 8d6:	00 16                	add    BYTE PTR [rsi],dl
 8d8:	05 00 03 0e 3a       	add    eax,0x3a0e0300
 8dd:	0b 3b                	or     edi,DWORD PTR [rbx]
 8df:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 8e2:	00 00                	add    BYTE PTR [rax],al
 8e4:	17                   	(bad)  
 8e5:	1d 01 31 13 11       	sbb    eax,0x11133101
 8ea:	01 12                	add    DWORD PTR [rdx],edx
 8ec:	06                   	(bad)  
 8ed:	58                   	pop    rax
 8ee:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
 8f1:	57                   	push   rdi
 8f2:	0b 00                	or     eax,DWORD PTR [rax]
 8f4:	00 18                	add    BYTE PTR [rax],bl
 8f6:	05 00 02 17 31       	add    eax,0x31170200
 8fb:	13 00                	adc    eax,DWORD PTR [rax]
 8fd:	00 19                	add    BYTE PTR [rcx],bl
 8ff:	13 01                	adc    eax,DWORD PTR [rcx]
 901:	0b 0b                	or     ecx,DWORD PTR [rbx]
 903:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 905:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 907:	00 00                	add    BYTE PTR [rax],al
 909:	1a 0d 00 03 0e 49    	sbb    cl,BYTE PTR [rip+0x490e0300]        # 490e0c0f <__TMC_END__+0x48cdbad7>
 90f:	13 3a                	adc    edi,DWORD PTR [rdx]
 911:	0b 3b                	or     edi,DWORD PTR [rbx]
 913:	0b 38                	or     edi,DWORD PTR [rax]
 915:	0b 00                	or     eax,DWORD PTR [rax]
 917:	00 1b                	add    BYTE PTR [rbx],bl
 919:	01 01                	add    DWORD PTR [rcx],eax
 91b:	49 13 00             	adc    rax,QWORD PTR [r8]
 91e:	00 1c 21             	add    BYTE PTR [rcx+riz*1],bl
 921:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 924:	37                   	(bad)  
 925:	0b 00                	or     eax,DWORD PTR [rax]
 927:	00 1d 24 00 03 0e    	add    BYTE PTR [rip+0xe030024],bl        # e030951 <__TMC_END__+0xdc2b819>
 92d:	0b 0b                	or     ecx,DWORD PTR [rbx]
 92f:	3e 0b 00             	ds or  eax,DWORD PTR [rax]
 932:	00 1e                	add    BYTE PTR [rsi],bl
 934:	13 01                	adc    eax,DWORD PTR [rcx]
 936:	03 0e                	add    ecx,DWORD PTR [rsi]
 938:	0b 0b                	or     ecx,DWORD PTR [rbx]
 93a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 93c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 93e:	00 00                	add    BYTE PTR [rax],al
 940:	1f                   	(bad)  
 941:	16                   	(bad)  
 942:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 945:	03 0e                	add    ecx,DWORD PTR [rsi]
 947:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 949:	3b 05 00 00 20 13    	cmp    eax,DWORD PTR [rip+0x13200000]        # 1320094f <__TMC_END__+0x12dfb817>
 94f:	01 0b                	add    DWORD PTR [rbx],ecx
 951:	0b 3a                	or     edi,DWORD PTR [rdx]
 953:	0b 3b                	or     edi,DWORD PTR [rbx]
 955:	05 00 00 21 0d       	add    eax,0xd210000
 95a:	00 03                	add    BYTE PTR [rbx],al
 95c:	0e                   	(bad)  
 95d:	49 13 3a             	adc    rdi,QWORD PTR [r10]
 960:	0b 3b                	or     edi,DWORD PTR [rbx]
 962:	05 38 0b 00 00       	add    eax,0xb38
 967:	00 01                	add    BYTE PTR [rcx],al
 969:	11 01                	adc    DWORD PTR [rcx],eax
 96b:	25 0e 13 05 03       	and    eax,0x305130e
 970:	0e                   	(bad)  
 971:	10 17                	adc    BYTE PTR [rdi],dl
 973:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
 975:	11 01                	adc    DWORD PTR [rcx],eax
 977:	12 06                	adc    al,BYTE PTR [rsi]
 979:	00 00                	add    BYTE PTR [rax],al
 97b:	02 34 00             	add    dh,BYTE PTR [rax+rax*1]
 97e:	03 0e                	add    ecx,DWORD PTR [rsi]
 980:	49 13 3f             	adc    rdi,QWORD PTR [r15]
 983:	19 3a                	sbb    DWORD PTR [rdx],edi
 985:	0b 3b                	or     edi,DWORD PTR [rbx]
 987:	0b 02                	or     eax,DWORD PTR [rdx]
 989:	18 00                	sbb    BYTE PTR [rax],al
 98b:	00 03                	add    BYTE PTR [rbx],al
 98d:	01 01                	add    DWORD PTR [rcx],eax
 98f:	49 13 00             	adc    rax,QWORD PTR [r8]
 992:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
 995:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 998:	37                   	(bad)  
 999:	0b 00                	or     eax,DWORD PTR [rax]
 99b:	00 05 24 00 03 0e    	add    BYTE PTR [rip+0xe030024],al        # e0309c5 <__TMC_END__+0xdc2b88d>
 9a1:	3e 0b 0b             	ds or  ecx,DWORD PTR [rbx]
 9a4:	0b 00                	or     eax,DWORD PTR [rax]
 9a6:	00 06                	add    BYTE PTR [rsi],al
 9a8:	24 00                	and    al,0x0
 9aa:	03 0e                	add    ecx,DWORD PTR [rsi]
 9ac:	0b 0b                	or     ecx,DWORD PTR [rbx]
 9ae:	3e 0b 00             	ds or  eax,DWORD PTR [rax]
 9b1:	00 07                	add    BYTE PTR [rdi],al
 9b3:	0f 00 49 13          	str    WORD PTR [rcx+0x13]
 9b7:	00 00                	add    BYTE PTR [rax],al
 9b9:	08 16                	or     BYTE PTR [rsi],dl
 9bb:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 9be:	03 0e                	add    ecx,DWORD PTR [rsi]
 9c0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 9c2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 9c4:	00 00                	add    BYTE PTR [rax],al
 9c6:	09 2e                	or     DWORD PTR [rsi],ebp
 9c8:	01 11                	add    DWORD PTR [rcx],edx
 9ca:	01 12                	add    DWORD PTR [rdx],edx
 9cc:	06                   	(bad)  
 9cd:	40 18 97 42 19 03 0e 	rex sbb BYTE PTR [rdi+0xe031942],dl
 9d4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 9d6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 9d8:	27                   	(bad)  
 9d9:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 9dc:	3f                   	(bad)  
 9dd:	19 00                	sbb    DWORD PTR [rax],eax
 9df:	00 0a                	add    BYTE PTR [rdx],cl
 9e1:	05 00 02 17 03       	add    eax,0x3170200
 9e6:	0e                   	(bad)  
 9e7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 9e9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 9eb:	49 13 00             	adc    rax,QWORD PTR [r8]
 9ee:	00 0b                	add    BYTE PTR [rbx],cl
 9f0:	34 00                	xor    al,0x0
 9f2:	02 17                	add    dl,BYTE PTR [rdi]
 9f4:	03 0e                	add    ecx,DWORD PTR [rsi]
 9f6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 9f8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 9fa:	49 13 00             	adc    rax,QWORD PTR [r8]
 9fd:	00 0c 89             	add    BYTE PTR [rcx+rcx*4],cl
 a00:	82                   	(bad)  
 a01:	01 00                	add    DWORD PTR [rax],eax
 a03:	31 13                	xor    DWORD PTR [rbx],edx
 a05:	11 01                	adc    DWORD PTR [rcx],eax
 a07:	00 00                	add    BYTE PTR [rax],al
 a09:	0d 89 82 01 01       	or     eax,0x1018289
 a0e:	31 13                	xor    DWORD PTR [rbx],edx
 a10:	11 01                	adc    DWORD PTR [rcx],eax
 a12:	00 00                	add    BYTE PTR [rax],al
 a14:	0e                   	(bad)  
 a15:	8a 82 01 00 02 18    	mov    al,BYTE PTR [rdx+0x18020001]
 a1b:	91                   	xchg   ecx,eax
 a1c:	42 18 00             	rex.X sbb BYTE PTR [rax],al
 a1f:	00 0f                	add    BYTE PTR [rdi],cl
 a21:	2e 01 03             	cs add DWORD PTR [rbx],eax
 a24:	0e                   	(bad)  
 a25:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 a27:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 a29:	27                   	(bad)  
 a2a:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 a2d:	3c 19                	cmp    al,0x19
 a2f:	3f                   	(bad)  
 a30:	19 00                	sbb    DWORD PTR [rax],eax
 a32:	00 10                	add    BYTE PTR [rax],dl
 a34:	05 00 49 13 00       	add    eax,0x134900
 a39:	00 11                	add    BYTE PTR [rcx],dl
 a3b:	0f 00 00             	sldt   WORD PTR [rax]
 a3e:	00 12                	add    BYTE PTR [rdx],dl
 a40:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
 a44:	00 00                	add    BYTE PTR [rax],al
 a46:	13 13                	adc    edx,DWORD PTR [rbx]
 a48:	01 03                	add    DWORD PTR [rbx],eax
 a4a:	0e                   	(bad)  
 a4b:	0b 0b                	or     ecx,DWORD PTR [rbx]
 a4d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 a4f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 a51:	00 00                	add    BYTE PTR [rax],al
 a53:	14 0d                	adc    al,0xd
 a55:	00 03                	add    BYTE PTR [rbx],al
 a57:	0e                   	(bad)  
 a58:	49 13 3a             	adc    rdi,QWORD PTR [r10]
 a5b:	0b 3b                	or     edi,DWORD PTR [rbx]
 a5d:	0b 38                	or     edi,DWORD PTR [rax]
 a5f:	0b 00                	or     eax,DWORD PTR [rax]
 a61:	00 15 16 00 49 13    	add    BYTE PTR [rip+0x13490016],dl        # 13490a7d <__TMC_END__+0x1308b945>
 a67:	03 0e                	add    ecx,DWORD PTR [rsi]
 a69:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 a6b:	3b 05 00 00 16 13    	cmp    eax,DWORD PTR [rip+0x13160000]        # 13160a71 <__TMC_END__+0x12d5b939>
 a71:	01 0b                	add    DWORD PTR [rbx],ecx
 a73:	0b 3a                	or     edi,DWORD PTR [rdx]
 a75:	0b 3b                	or     edi,DWORD PTR [rbx]
 a77:	05 00 00 17 0d       	add    eax,0xd170000
 a7c:	00 03                	add    BYTE PTR [rbx],al
 a7e:	0e                   	(bad)  
 a7f:	49 13 3a             	adc    rdi,QWORD PTR [r10]
 a82:	0b 3b                	or     edi,DWORD PTR [rbx]
 a84:	05 38 0b 00 00       	add    eax,0xb38
 a89:	18 15 01 49 13 27    	sbb    BYTE PTR [rip+0x27134901],dl        # 27135390 <__TMC_END__+0x26d30258>
 a8f:	19 00                	sbb    DWORD PTR [rax],eax
 a91:	00 19                	add    BYTE PTR [rcx],bl
 a93:	26 00 00             	es add BYTE PTR [rax],al
 a96:	00 1a                	add    BYTE PTR [rdx],bl
 a98:	2e 01 11             	cs add DWORD PTR [rcx],edx
 a9b:	01 12                	add    DWORD PTR [rdx],edx
 a9d:	06                   	(bad)  
 a9e:	40 18 97 42 19 03 0e 	rex sbb BYTE PTR [rdi+0xe031942],dl
 aa5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 aa7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 aa9:	27                   	(bad)  
 aaa:	19 3f                	sbb    DWORD PTR [rdi],edi
 aac:	19 00                	sbb    DWORD PTR [rax],eax
 aae:	00 1b                	add    BYTE PTR [rbx],bl
 ab0:	89 82 01 01 31 13    	mov    DWORD PTR [rdx+0x13310101],eax
 ab6:	95                   	xchg   ebp,eax
 ab7:	42 19 11             	rex.X sbb DWORD PTR [rcx],edx
 aba:	01 00                	add    DWORD PTR [rax],eax
 abc:	00 1c 2e             	add    BYTE PTR [rsi+rbp*1],bl
 abf:	01 03                	add    DWORD PTR [rbx],eax
 ac1:	0e                   	(bad)  
 ac2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 ac4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 ac6:	27                   	(bad)  
 ac7:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
 aca:	3f                   	(bad)  
 acb:	19 00                	sbb    DWORD PTR [rax],eax
 acd:	00 1d 13 01 0b 0b    	add    BYTE PTR [rip+0xb0b0113],bl        # b0b0be6 <__TMC_END__+0xacabaae>
 ad3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 ad5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 ad7:	00 00                	add    BYTE PTR [rax],al
 ad9:	00 01                	add    BYTE PTR [rcx],al
 adb:	11 01                	adc    DWORD PTR [rcx],eax
 add:	25 0e 13 05 03       	and    eax,0x305130e
 ae2:	0e                   	(bad)  
 ae3:	10 17                	adc    BYTE PTR [rdi],dl
 ae5:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
 ae7:	11 01                	adc    DWORD PTR [rcx],eax
 ae9:	12 06                	adc    al,BYTE PTR [rsi]
 aeb:	00 00                	add    BYTE PTR [rax],al
 aed:	02 0f                	add    cl,BYTE PTR [rdi]
 aef:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	03 16                	add    edx,DWORD PTR [rsi]
 af6:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 af9:	03 0e                	add    ecx,DWORD PTR [rsi]
 afb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 afd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 aff:	00 00                	add    BYTE PTR [rax],al
 b01:	04 24                	add    al,0x24
 b03:	00 03                	add    BYTE PTR [rbx],al
 b05:	0e                   	(bad)  
 b06:	3e 0b 0b             	ds or  ecx,DWORD PTR [rbx]
 b09:	0b 00                	or     eax,DWORD PTR [rax]
 b0b:	00 05 2e 01 11 01    	add    BYTE PTR [rip+0x111012e],al        # 1110c3f <__TMC_END__+0xd0bb07>
 b11:	12 06                	adc    al,BYTE PTR [rsi]
 b13:	40 18 97 42 19 03 0e 	rex sbb BYTE PTR [rdi+0xe031942],dl
 b1a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 b1c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 b1e:	27                   	(bad)  
 b1f:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 b22:	3f                   	(bad)  
 b23:	19 00                	sbb    DWORD PTR [rax],eax
 b25:	00 06                	add    BYTE PTR [rsi],al
 b27:	05 00 02 18 03       	add    eax,0x3180200
 b2c:	0e                   	(bad)  
 b2d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 b2f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 b31:	49 13 00             	adc    rax,QWORD PTR [r8]
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
       0:	8c 02                	mov    WORD PTR [rdx],es
       2:	00 00                	add    BYTE PTR [rax],al
       4:	04 00                	add    al,0x0
       6:	14 01                	adc    al,0x1
       8:	00 00                	add    BYTE PTR [rax],al
       a:	01 01                	add    DWORD PTR [rcx],eax
       c:	01 fb                	add    ebx,edi
       e:	0e                   	(bad)  
       f:	0d 00 01 01 01       	or     eax,0x1010100
      14:	01 00                	add    DWORD PTR [rax],eax
      16:	00 00                	add    BYTE PTR [rax],al
      18:	01 00                	add    DWORD PTR [rax],eax
      1a:	00 01                	add    BYTE PTR [rcx],al
      1c:	2f                   	(bad)  
      1d:	75 73                	jne    92 <__abi_tag-0x4002ea>
      1f:	72 2f                	jb     50 <__abi_tag-0x40032c>
      21:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
      28:	00 2f                	add    BYTE PTR [rdi],ch
      2a:	75 73                	jne    9f <__abi_tag-0x4002dd>
      2c:	72 2f                	jb     5d <__abi_tag-0x40031f>
      2e:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
      35:	2f                   	(bad)  
      36:	78 38                	js     70 <__abi_tag-0x40030c>
      38:	36 5f                	ss pop rdi
      3a:	36 34 2d             	ss xor al,0x2d
      3d:	6c                   	ins    BYTE PTR es:[rdi],dx
      3e:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
      45:	75 2f                	jne    76 <__abi_tag-0x400306>
      47:	62                   	(bad)  
      48:	69 74 73 00 2f 6d 6e 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x746e6d2f
      4f:	74 
      50:	2f                   	(bad)  
      51:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      52:	66 73 2f             	data16 jae 84 <__abi_tag-0x4002f8>
      55:	68 6f 6d 65 73       	push   0x73656d6f
      5a:	2f                   	(bad)  
      5b:	6c                   	ins    BYTE PTR es:[rdi],dx
      5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      5d:	75 6d                	jne    cc <__abi_tag-0x4002b0>
      5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      60:	75 6c                	jne    ce <__abi_tag-0x4002ae>
      62:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
      68:	79 2d                	jns    97 <__abi_tag-0x4002e5>
      6a:	77 6f                	ja     db <__abi_tag-0x4002a1>
      6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      6d:	64 70 61             	fs jo  d1 <__abi_tag-0x4002ab>
      70:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
      73:	72 00                	jb     75 <__abi_tag-0x400307>
      75:	2f                   	(bad)  
      76:	75 73                	jne    eb <__abi_tag-0x400291>
      78:	72 2f                	jb     a9 <__abi_tag-0x4002d3>
      7a:	6c                   	ins    BYTE PTR es:[rdi],dx
      7b:	69 62 2f 6c 6c 76 6d 	imul   esp,DWORD PTR [rdx+0x2f],0x6d766c6c
      82:	2d 31 32 2f 6c       	sub    eax,0x6c2f3231
      87:	69 62 2f 63 6c 61 6e 	imul   esp,DWORD PTR [rdx+0x2f],0x6e616c63
      8e:	67 2f                	addr32 (bad) 
      90:	31 32                	xor    DWORD PTR [rdx],esi
      92:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
      95:	31 2f                	xor    DWORD PTR [rdi],ebp
      97:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
      9e:	00 00                	add    BYTE PTR [rax],al
      a0:	65 6c                	gs ins BYTE PTR es:[rdi],dx
      a2:	66 2e 68 00 01       	cs pushw 0x100
      a7:	00 00                	add    BYTE PTR [rax],al
      a9:	74 79                	je     124 <__abi_tag-0x400258>
      ab:	70 65                	jo     112 <__abi_tag-0x40026a>
      ad:	73 2e                	jae    dd <__abi_tag-0x40029f>
      af:	68 00 02 00 00       	push   0x200
      b4:	73 74                	jae    12a <__abi_tag-0x400252>
      b6:	64 69 6e 74 2d 75 69 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6e69752d
      bd:	6e 
      be:	74 6e                	je     12e <__abi_tag-0x40024e>
      c0:	2e 68 00 02 00 00    	cs push 0x200
      c6:	73 72                	jae    13a <__abi_tag-0x400242>
      c8:	63 2f                	movsxd ebp,DWORD PTR [rdi]
      ca:	6d                   	ins    DWORD PTR es:[rdi],dx
      cb:	61                   	(bad)  
      cc:	69 6e 2e 63 00 03 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x30063
      d3:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
      d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      d7:	74 6c                	je     145 <__abi_tag-0x400237>
      d9:	2e 68 00 01 00 00    	cs push 0x100
      df:	2e 2f                	cs (bad) 
      e1:	69 6e 63 2f 66 75 6e 	imul   ebp,DWORD PTR [rsi+0x63],0x6e75662f
      e8:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
      ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      ed:	73 2e                	jae    11d <__abi_tag-0x40025f>
      ef:	68 00 03 00 00       	push   0x300
      f4:	75 6e                	jne    164 <__abi_tag-0x400218>
      f6:	69 73 74 64 2e 68 00 	imul   esi,DWORD PTR [rbx+0x74],0x682e64
      fd:	01 00                	add    DWORD PTR [rax],eax
      ff:	00 2e                	add    BYTE PTR [rsi],ch
     101:	2f                   	(bad)  
     102:	69 6e 63 2f 77 6f 6f 	imul   ebp,DWORD PTR [rsi+0x63],0x6f6f772f
     109:	64 79 2e             	fs jns 13a <__abi_tag-0x400242>
     10c:	68 00 03 00 00       	push   0x300
     111:	73 74                	jae    187 <__abi_tag-0x4001f5>
     113:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x400
     11a:	04 
     11b:	00 00                	add    BYTE PTR [rax],al
     11d:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
     120:	00 09                	add    BYTE PTR [rcx],cl
     122:	02 00                	add    al,BYTE PTR [rax]
     124:	12 40 00             	adc    al,BYTE PTR [rax+0x0]
     127:	00 00                	add    BYTE PTR [rax],al
     129:	00 00                	add    BYTE PTR [rax],al
     12b:	16                   	(bad)  
     12c:	05 13 0a 75 05       	add    eax,0x5750a13
     131:	0e                   	(bad)  
     132:	06                   	(bad)  
     133:	4a 05 0c 06 91 05    	rex.WX add rax,0x591060c
     139:	07                   	(bad)  
     13a:	06                   	(bad)  
     13b:	3c 05                	cmp    al,0x5
     13d:	00 03                	add    BYTE PTR [rbx],al
     13f:	79 2e                	jns    16f <__abi_tag-0x40020d>
     141:	05 37 06 03 0b       	add    eax,0xb030637
     146:	2e 05 07 06 4a 05    	cs add eax,0x54a0607
     14c:	41 9e                	rex.B sahf 
     14e:	05 07 2e 05 05       	add    eax,0x5052e07
     153:	06                   	(bad)  
     154:	2f                   	(bad)  
     155:	06                   	(bad)  
     156:	03 74 9e 05          	add    esi,DWORD PTR [rsi+rbx*4+0x5]
     15a:	01 06                	add    DWORD PTR [rsi],eax
     15c:	03 11                	add    edx,DWORD PTR [rcx]
     15e:	58                   	pop    rax
     15f:	05 05 03 77 82       	add    eax,0x82770305
     164:	06                   	(bad)  
     165:	03 78 9e             	add    edi,DWORD PTR [rax-0x62]
     168:	05 01 06 03 11       	add    eax,0x11030601
     16d:	58                   	pop    rax
     16e:	05 03 80 06 03       	add    eax,0x3068003
     173:	71 74                	jno    1e9 <__abi_tag-0x400193>
     175:	05 01 06 03 11       	add    eax,0x11030601
     17a:	2e 05 00 bc 05 07    	cs add eax,0x705bc00
     180:	0a 4b 06             	or     cl,BYTE PTR [rbx+0x6]
     183:	ac                   	lods   al,BYTE PTR ds:[rsi]
     184:	03 6c 2e 05          	add    ebp,DWORD PTR [rsi+rbp*1+0x5]
     188:	1c 06                	sbb    al,0x6
     18a:	03 18                	add    ebx,DWORD PTR [rax]
     18c:	58                   	pop    rax
     18d:	05 07 06 4a 03       	add    eax,0x34a0607
     192:	68 2e 05 24 06       	push   0x624052e
     197:	03 1c 58             	add    ebx,DWORD PTR [rax+rbx*2]
     19a:	05 07 06 4a 03       	add    eax,0x34a0607
     19f:	64 2e 05 23 06 03 20 	fs cs add eax,0x20030623
     1a6:	58                   	pop    rax
     1a7:	05 07 06 4a 05       	add    eax,0x54a0607
     1ac:	12 06                	adc    al,BYTE PTR [rsi]
     1ae:	32 05 24 06 4a 05    	xor    al,BYTE PTR [rip+0x54a0624]        # 54a07d8 <__TMC_END__+0x509b6a0>
     1b4:	00 03                	add    BYTE PTR [rbx],al
     1b6:	5c                   	pop    rsp
     1b7:	f2 05 01 06 03 29    	repnz add eax,0x29030601
     1bd:	9e                   	sahf   
     1be:	05 00 f5 05 09       	add    eax,0x905f500
     1c3:	0a 59 05             	or     bl,BYTE PTR [rcx+0x5]
     1c6:	0a 08                	or     cl,BYTE PTR [rax]
     1c8:	5a                   	pop    rdx
     1c9:	05 07 06 3c 05       	add    eax,0x53c0607
     1ce:	13 06                	adc    eax,DWORD PTR [rsi]
     1d0:	03 57 2e             	add    edx,DWORD PTR [rdi+0x2e]
     1d3:	05 0e 06 4a 05       	add    eax,0x54a060e
     1d8:	0c 06                	or     al,0x6
     1da:	91                   	xchg   ecx,eax
     1db:	05 07 06 3c 05       	add    eax,0x53c0607
     1e0:	00 03                	add    BYTE PTR [rbx],al
     1e2:	79 2e                	jns    212 <__abi_tag-0x40016a>
     1e4:	05 37 06 03 0b       	add    eax,0xb030637
     1e9:	2e 05 07 06 82 05    	cs add eax,0x5820607
     1ef:	41 74 05             	rex.B je 1f7 <__abi_tag-0x400185>
     1f2:	07                   	(bad)  
     1f3:	2e 05 05 06 2f 03    	cs add eax,0x32f0605
     1f9:	24 74                	and    al,0x74
     1fb:	06                   	(bad)  
     1fc:	03 50 58             	add    edx,DWORD PTR [rax+0x58]
     1ff:	06                   	(bad)  
     200:	36 05 00 06 03 78    	ss add eax,0x78030600
     206:	58                   	pop    rax
     207:	05 05 06 03 34       	add    eax,0x34030605
     20c:	58                   	pop    rax
     20d:	05 00 06 03 4c       	add    eax,0x4c030600
     212:	58                   	pop    rax
     213:	05 01 06 03 d3       	add    eax,0xd3030601
     218:	00 9e 05 03 03 bc    	add    BYTE PTR [rsi-0x43fcfcfb],bl
     21e:	7f 66                	jg     286 <__abi_tag-0x4000f6>
     220:	05 27 03 28 74       	add    eax,0x74280327
     225:	05 12 06 4a 05       	add    eax,0x54a0612
     22a:	07                   	(bad)  
     22b:	06                   	(bad)  
     22c:	59                   	pop    rcx
     22d:	06                   	(bad)  
     22e:	74 05                	je     235 <__abi_tag-0x400147>
     230:	05 06 2f 06 03       	add    eax,0x3062f06
     235:	47 74 05             	rex.RXB je 23d <__abi_tag-0x40013f>
     238:	03 06                	add    eax,DWORD PTR [rsi]
     23a:	03 3c 3c             	add    edi,DWORD PTR [rsp+rdi*1]
     23d:	05 17 59 05 07       	add    eax,0x7055917
     242:	06                   	(bad)  
     243:	58                   	pop    rax
     244:	05 32 9e 05 07       	add    eax,0x7059e32
     249:	3c 03                	cmp    al,0x3
     24b:	43                   	rex.XB
     24c:	2e 06                	cs (bad) 
     24e:	03 c2                	add    eax,edx
     250:	00 3c 06             	add    BYTE PTR [rsi+rax*1],bh
     253:	74 05                	je     25a <__abi_tag-0x400122>
     255:	05 06 2f 6f 06       	add    eax,0x66f2f06
     25a:	03 42 74             	add    eax,DWORD PTR [rdx+0x74]
     25d:	05 07 06 03 c7       	add    eax,0xc7030607
     262:	00 3c 06             	add    BYTE PTR [rsi+rax*1],bh
     265:	74 05                	je     26c <__abi_tag-0x400110>
     267:	05 06 2f 06 03       	add    eax,0x3062f06
     26c:	b8 7f 74 05 03       	mov    eax,0x305747f
     271:	06                   	(bad)  
     272:	03 cc                	add    ecx,esp
     274:	00 3c 05 07 84 06 9e 	add    BYTE PTR [rax*1-0x61f97bf9],bh
     27b:	05 05 06 2f 06       	add    eax,0x62f0605
     280:	03 b1 7f 9e 05 01    	add    esi,DWORD PTR [rcx+0x1059e7f]
     286:	06                   	(bad)  
     287:	03 d3                	add    edx,ebx
     289:	00 2e                	add    BYTE PTR [rsi],ch
     28b:	02 06                	add    al,BYTE PTR [rsi]
     28d:	00 01                	add    BYTE PTR [rcx],al
     28f:	01 f8                	add    eax,edi
     291:	01 00                	add    DWORD PTR [rax],eax
     293:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     296:	0e                   	(bad)  
     297:	01 00                	add    DWORD PTR [rax],eax
     299:	00 01                	add    BYTE PTR [rcx],al
     29b:	01 01                	add    DWORD PTR [rcx],eax
     29d:	fb                   	sti    
     29e:	0e                   	(bad)  
     29f:	0d 00 01 01 01       	or     eax,0x1010100
     2a4:	01 00                	add    DWORD PTR [rax],eax
     2a6:	00 00                	add    BYTE PTR [rax],al
     2a8:	01 00                	add    DWORD PTR [rax],eax
     2aa:	00 01                	add    BYTE PTR [rcx],al
     2ac:	2f                   	(bad)  
     2ad:	6d                   	ins    DWORD PTR es:[rdi],dx
     2ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2af:	74 2f                	je     2e0 <__abi_tag-0x40009c>
     2b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2b2:	66 73 2f             	data16 jae 2e4 <__abi_tag-0x400098>
     2b5:	68 6f 6d 65 73       	push   0x73656d6f
     2ba:	2f                   	(bad)  
     2bb:	6c                   	ins    BYTE PTR es:[rdi],dx
     2bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2bd:	75 6d                	jne    32c <__abi_tag-0x400050>
     2bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2c0:	75 6c                	jne    32e <__abi_tag-0x40004e>
     2c2:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
     2c8:	79 2d                	jns    2f7 <__abi_tag-0x400085>
     2ca:	77 6f                	ja     33b <__abi_tag-0x400041>
     2cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2cd:	64 70 61             	fs jo  331 <__abi_tag-0x40004b>
     2d0:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
     2d3:	72 00                	jb     2d5 <__abi_tag-0x4000a7>
     2d5:	2f                   	(bad)  
     2d6:	75 73                	jne    34b <__abi_tag-0x400031>
     2d8:	72 2f                	jb     309 <__abi_tag-0x400073>
     2da:	6c                   	ins    BYTE PTR es:[rdi],dx
     2db:	69 62 2f 6c 6c 76 6d 	imul   esp,DWORD PTR [rdx+0x2f],0x6d766c6c
     2e2:	2d 31 32 2f 6c       	sub    eax,0x6c2f3231
     2e7:	69 62 2f 63 6c 61 6e 	imul   esp,DWORD PTR [rdx+0x2f],0x6e616c63
     2ee:	67 2f                	addr32 (bad) 
     2f0:	31 32                	xor    DWORD PTR [rdx],esi
     2f2:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
     2f5:	31 2f                	xor    DWORD PTR [rdi],ebp
     2f7:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     2fe:	00 2f                	add    BYTE PTR [rdi],ch
     300:	75 73                	jne    375 <__abi_tag-0x400007>
     302:	72 2f                	jb     333 <__abi_tag-0x400049>
     304:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     30b:	2f                   	(bad)  
     30c:	78 38                	js     346 <__abi_tag-0x400036>
     30e:	36 5f                	ss pop rdi
     310:	36 34 2d             	ss xor al,0x2d
     313:	6c                   	ins    BYTE PTR es:[rdi],dx
     314:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
     31b:	75 2f                	jne    34c <__abi_tag-0x400030>
     31d:	62                   	(bad)  
     31e:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
     325:	72 
     326:	2f                   	(bad)  
     327:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     32e:	00 00                	add    BYTE PTR [rax],al
     330:	73 72                	jae    3a4 <__abi_tag-0x3fffd8>
     332:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     334:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     336:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
     339:	70 74                	jo     3af <__abi_tag-0x3fffcd>
     33b:	69 6f 6e 2e 63 00 01 	imul   ebp,DWORD PTR [rdi+0x6e],0x100632e
     342:	00 00                	add    BYTE PTR [rax],al
     344:	73 74                	jae    3ba <__abi_tag-0x3fffc2>
     346:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x200
     34d:	02 
     34e:	00 00                	add    BYTE PTR [rax],al
     350:	74 79                	je     3cb <__abi_tag-0x3fffb1>
     352:	70 65                	jo     3b9 <__abi_tag-0x3fffc3>
     354:	73 2e                	jae    384 <__abi_tag-0x3ffff8>
     356:	68 00 03 00 00       	push   0x300
     35b:	73 74                	jae    3d1 <__abi_tag-0x3fffab>
     35d:	64 69 6e 74 2d 75 69 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6e69752d
     364:	6e 
     365:	74 6e                	je     3d5 <__abi_tag-0x3fffa7>
     367:	2e 68 00 03 00 00    	cs push 0x300
     36d:	2e 2f                	cs (bad) 
     36f:	69 6e 63 2f 66 75 6e 	imul   ebp,DWORD PTR [rsi+0x63],0x6e75662f
     376:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
     37a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     37b:	73 2e                	jae    3ab <__abi_tag-0x3fffd1>
     37d:	68 00 01 00 00       	push   0x100
     382:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     384:	66 2e 68 00 04       	cs pushw 0x400
     389:	00 00                	add    BYTE PTR [rax],al
     38b:	2e 2f                	cs (bad) 
     38d:	69 6e 63 2f 77 6f 6f 	imul   ebp,DWORD PTR [rsi+0x63],0x6f6f772f
     394:	64 79 2e             	fs jns 3c5 <__abi_tag-0x3fffb7>
     397:	68 00 01 00 00       	push   0x100
     39c:	73 74                	jae    412 <__abi_tag-0x3fff6a>
     39e:	64 69 6f 2e 68 00 04 	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x40068
     3a5:	00 
     3a6:	00 00                	add    BYTE PTR [rax],al
     3a8:	00 09                	add    BYTE PTR [rcx],cl
     3aa:	02 e0                	add    ah,al
     3ac:	13 40 00             	adc    eax,DWORD PTR [rax+0x0]
     3af:	00 00                	add    BYTE PTR [rax],al
     3b1:	00 00                	add    BYTE PTR [rax],al
     3b3:	18 05 18 0a 13 05    	sbb    BYTE PTR [rip+0x5130a18],al        # 5130dd1 <__TMC_END__+0x4d2bc99>
     3b9:	03 06                	add    eax,DWORD PTR [rsi]
     3bb:	3c 03                	cmp    al,0x3
     3bd:	78 66                	js     425 <__abi_tag-0x3fff57>
     3bf:	44 03 78 66          	add    r15d,DWORD PTR [rax+0x66]
     3c3:	44 05 21 06 9f 05    	rex.R add eax,0x59f0621
     3c9:	03 08                	add    ecx,DWORD PTR [rax]
     3cb:	57                   	push   rdi
     3cc:	05 21 08 9f 05       	add    eax,0x59f0821
     3d1:	1b 06                	sbb    eax,DWORD PTR [rsi]
     3d3:	58                   	pop    rax
     3d4:	05 18 58 05 20       	add    eax,0x20055818
     3d9:	06                   	(bad)  
     3da:	57                   	push   rdi
     3db:	05 03 06 4a 05       	add    eax,0x54a0603
     3e0:	21 06                	and    DWORD PTR [rsi],eax
     3e2:	59                   	pop    rcx
     3e3:	05 1b 06 08 d6       	add    eax,0xd608061b
     3e8:	05 18 58 05 21       	add    eax,0x21055818
     3ed:	4a 05 1b 08 ba 05    	rex.WX add rax,0x5ba081b
     3f3:	18 4a 05             	sbb    BYTE PTR [rdx+0x5],cl
     3f6:	01 06                	add    DWORD PTR [rsi],eax
     3f8:	4b 05 00 ae 05 23    	rex.WXB add rax,0x2305ae00
     3fe:	0a 85 05 12 06 4a    	or     al,BYTE PTR [rbp+0x4a061205]
     404:	05 0e 06 ca 05       	add    eax,0x5ca060e
     409:	0c 06                	or     al,0x6
     40b:	e4 05                	in     al,0x5
     40d:	10 06                	adc    BYTE PTR [rsi],al
     40f:	4b 05 07 83 06 9e    	rex.WXB add rax,0xffffffff9e068307
     415:	05 05 06 2f 06       	add    eax,0x62f0605
     41a:	03 6c 08 12          	add    ebp,DWORD PTR [rax+rcx*1+0x12]
     41e:	05 01 06 03 1e       	add    eax,0x1e030601
     423:	66 06                	data16 (bad) 
     425:	03 62 90             	add    esp,DWORD PTR [rdx-0x70]
     428:	05 03 06 03 18       	add    eax,0x18030603
     42d:	3c 05                	cmp    al,0x5
     42f:	10 bb 05 1a 06 4a    	adc    BYTE PTR [rbx+0x4a061a05],bh
     435:	05 03 4a 05 23       	add    eax,0x23054a03
     43a:	06                   	(bad)  
     43b:	77 05                	ja     442 <__abi_tag-0x3fff3a>
     43d:	18 03                	sbb    BYTE PTR [rbx],al
     43f:	6c                   	ins    BYTE PTR es:[rdi],dx
     440:	4a 05 03 06 3c 03    	rex.WX add rax,0x33c0603
     446:	78 2e                	js     476 <__abi_tag-0x3fff06>
     448:	08 28                	or     BYTE PTR [rax],ch
     44a:	03 78 66             	add    edi,DWORD PTR [rax+0x66]
     44d:	36 03 78 66          	ss add edi,DWORD PTR [rax+0x66]
     451:	05 21 06 03 09       	add    eax,0x9030621
     456:	3c 05                	cmp    al,0x5
     458:	03 08                	add    ecx,DWORD PTR [rax]
     45a:	57                   	push   rdi
     45b:	05 21 08 e5 05       	add    eax,0x5e50821
     460:	1b 06                	sbb    eax,DWORD PTR [rsi]
     462:	58                   	pop    rax
     463:	05 18 4a 05 20       	add    eax,0x20054a18
     468:	06                   	(bad)  
     469:	3b 05 03 06 4a 05    	cmp    eax,DWORD PTR [rip+0x54a0603]        # 54a0a72 <__TMC_END__+0x509b93a>
     46f:	21 06                	and    DWORD PTR [rsi],eax
     471:	59                   	pop    rcx
     472:	05 1b 06 08 f2       	add    eax,0xf208061b
     477:	05 18 4a 05 21       	add    eax,0x21054a18
     47c:	4a 05 1b 08 ac 05    	rex.WX add rax,0x5ac081b
     482:	18 3c 03             	sbb    BYTE PTR [rbx+rax*1],bh
     485:	77 4a                	ja     4d1 <__abi_tag-0x3ffeab>
     487:	02 05 00 01 01 cd    	add    al,BYTE PTR [rip+0xffffffffcd010100]        # ffffffffcd01058d <__TMC_END__+0xffffffffccc0b455>
     48d:	02 00                	add    al,BYTE PTR [rax]
     48f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     492:	12 01                	adc    al,BYTE PTR [rcx]
     494:	00 00                	add    BYTE PTR [rax],al
     496:	01 01                	add    DWORD PTR [rcx],eax
     498:	01 fb                	add    ebx,edi
     49a:	0e                   	(bad)  
     49b:	0d 00 01 01 01       	or     eax,0x1010100
     4a0:	01 00                	add    DWORD PTR [rax],eax
     4a2:	00 00                	add    BYTE PTR [rax],al
     4a4:	01 00                	add    DWORD PTR [rax],eax
     4a6:	00 01                	add    BYTE PTR [rcx],al
     4a8:	2f                   	(bad)  
     4a9:	75 73                	jne    51e <__abi_tag-0x3ffe5e>
     4ab:	72 2f                	jb     4dc <__abi_tag-0x3ffea0>
     4ad:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     4b4:	2f                   	(bad)  
     4b5:	78 38                	js     4ef <__abi_tag-0x3ffe8d>
     4b7:	36 5f                	ss pop rdi
     4b9:	36 34 2d             	ss xor al,0x2d
     4bc:	6c                   	ins    BYTE PTR es:[rdi],dx
     4bd:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
     4c4:	75 2f                	jne    4f5 <__abi_tag-0x3ffe87>
     4c6:	62                   	(bad)  
     4c7:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
     4ce:	72 
     4cf:	2f                   	(bad)  
     4d0:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     4d7:	00 2f                	add    BYTE PTR [rdi],ch
     4d9:	6d                   	ins    DWORD PTR es:[rdi],dx
     4da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4db:	74 2f                	je     50c <__abi_tag-0x3ffe70>
     4dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4de:	66 73 2f             	data16 jae 510 <__abi_tag-0x3ffe6c>
     4e1:	68 6f 6d 65 73       	push   0x73656d6f
     4e6:	2f                   	(bad)  
     4e7:	6c                   	ins    BYTE PTR es:[rdi],dx
     4e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4e9:	75 6d                	jne    558 <__abi_tag-0x3ffe24>
     4eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4ec:	75 6c                	jne    55a <__abi_tag-0x3ffe22>
     4ee:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
     4f4:	79 2d                	jns    523 <__abi_tag-0x3ffe59>
     4f6:	77 6f                	ja     567 <__abi_tag-0x3ffe15>
     4f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4f9:	64 70 61             	fs jo  55d <__abi_tag-0x3ffe1f>
     4fc:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
     4ff:	72 00                	jb     501 <__abi_tag-0x3ffe7b>
     501:	2f                   	(bad)  
     502:	75 73                	jne    577 <__abi_tag-0x3ffe05>
     504:	72 2f                	jb     535 <__abi_tag-0x3ffe47>
     506:	6c                   	ins    BYTE PTR es:[rdi],dx
     507:	69 62 2f 6c 6c 76 6d 	imul   esp,DWORD PTR [rdx+0x2f],0x6d766c6c
     50e:	2d 31 32 2f 6c       	sub    eax,0x6c2f3231
     513:	69 62 2f 63 6c 61 6e 	imul   esp,DWORD PTR [rdx+0x2f],0x6e616c63
     51a:	67 2f                	addr32 (bad) 
     51c:	31 32                	xor    DWORD PTR [rdx],esi
     51e:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
     521:	31 2f                	xor    DWORD PTR [rdi],ebp
     523:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     52a:	00 00                	add    BYTE PTR [rax],al
     52c:	74 79                	je     5a7 <__abi_tag-0x3ffdd5>
     52e:	70 65                	jo     595 <__abi_tag-0x3ffde7>
     530:	73 2e                	jae    560 <__abi_tag-0x3ffe1c>
     532:	68 00 01 00 00       	push   0x100
     537:	73 74                	jae    5ad <__abi_tag-0x3ffdcf>
     539:	64 69 6e 74 2d 75 69 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6e69752d
     540:	6e 
     541:	74 6e                	je     5b1 <__abi_tag-0x3ffdcb>
     543:	2e 68 00 01 00 00    	cs push 0x100
     549:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     54b:	66 2e 68 00 02       	cs pushw 0x200
     550:	00 00                	add    BYTE PTR [rax],al
     552:	73 72                	jae    5c6 <__abi_tag-0x3ffdb6>
     554:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     556:	66 69 6e 64 5f 63    	imul   bp,WORD PTR [rsi+0x64],0x635f
     55c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     55d:	64 65 5f             	fs gs pop rdi
     560:	63 61 76             	movsxd esp,DWORD PTR [rcx+0x76]
     563:	65 2e 63 00          	gs movsxd eax,DWORD PTR gs:[rax]
     567:	03 00                	add    eax,DWORD PTR [rax]
     569:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     56c:	64 69 6f 2e 68 00 02 	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x20068
     573:	00 
     574:	00 2e                	add    BYTE PTR [rsi],ch
     576:	2f                   	(bad)  
     577:	69 6e 63 2f 77 6f 6f 	imul   ebp,DWORD PTR [rsi+0x63],0x6f6f772f
     57e:	64 79 2e             	fs jns 5af <__abi_tag-0x3ffdcd>
     581:	68 00 03 00 00       	push   0x300
     586:	73 74                	jae    5fc <__abi_tag-0x3ffd80>
     588:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x400
     58f:	04 
     590:	00 00                	add    BYTE PTR [rax],al
     592:	2e 2f                	cs (bad) 
     594:	69 6e 63 2f 66 75 6e 	imul   ebp,DWORD PTR [rsi+0x63],0x6e75662f
     59b:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
     59f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5a0:	73 2e                	jae    5d0 <__abi_tag-0x3ffdac>
     5a2:	68 00 03 00 00       	push   0x300
     5a7:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
     5aa:	00 09                	add    BYTE PTR [rcx],cl
     5ac:	02 f0                	add    dh,al
     5ae:	15 40 00 00 00       	adc    eax,0x40
     5b3:	00 00                	add    BYTE PTR [rax],al
     5b5:	14 0a                	adc    al,0xa
     5b7:	0f 05                	syscall 
     5b9:	2f                   	(bad)  
     5ba:	08 40 05             	or     BYTE PTR [rax+0x5],al
     5bd:	03 06                	add    eax,DWORD PTR [rsi]
     5bf:	3c 05                	cmp    al,0x5
     5c1:	10 06                	adc    BYTE PTR [rsi],al
     5c3:	2f                   	(bad)  
     5c4:	05 27 06 3c 05       	add    eax,0x53c0627
     5c9:	09 3c 05 20 06 30 05 	or     DWORD PTR [rax*1+0x5300620],edi
     5d0:	29 06                	sub    DWORD PTR [rsi],eax
     5d2:	4a 05 09 3c 05 14    	rex.WX add rax,0x14053c09
     5d8:	06                   	(bad)  
     5d9:	30 06                	xor    BYTE PTR [rsi],al
     5db:	03 77 4a             	add    esi,DWORD PTR [rdi+0x4a]
     5de:	05 09 03 09 2e       	add    eax,0x2e090309
     5e3:	05 01 06 7b 05       	add    eax,0x57b0601
     5e8:	12 1d 06 03 73 4a    	adc    bl,BYTE PTR [rip+0x4a730306]        # 4a7308f4 <__TMC_END__+0x4a32b7bc>
     5ee:	05 07 03 0d 2e       	add    eax,0x2e0d0307
     5f3:	05 00 06 08 25       	add    eax,0x25080600
     5f8:	05 1c 0a 08 21       	add    eax,0x21080a1c
     5fd:	05 34 06 82 05       	add    eax,0x5820634
     602:	0f 3c                	(bad)  
     604:	05 08 06 59 05       	add    eax,0x5590608
     609:	07                   	(bad)  
     60a:	06                   	(bad)  
     60b:	3c 05                	cmp    al,0x5
     60d:	00 03                	add    BYTE PTR [rbx],al
     60f:	6c                   	ins    BYTE PTR es:[rdi],dx
     610:	2e 05 11 06 03 18    	cs add eax,0x18030611
     616:	3c 05                	cmp    al,0x5
     618:	18 4b 05             	sbb    BYTE PTR [rbx+0x5],cl
     61b:	25 06 3c 05 57       	and    eax,0x57053c06
     620:	4a 05 60 58 05 03    	rex.WX add rax,0x3055860
     626:	66 05 2b 06          	add    ax,0x62b
     62a:	83 05 39 06 58 05 03 	add    DWORD PTR [rip+0x5580639],0x3        # 5580c6a <__TMC_END__+0x517bb32>
     631:	58                   	pop    rax
     632:	05 11 06 83 05       	add    eax,0x5830611
     637:	01 a2 05 05 03 76    	add    DWORD PTR [rdx+0x76030505],esp
     63d:	9e                   	sahf   
     63e:	06                   	(bad)  
     63f:	03 6b 9e             	add    ebp,DWORD PTR [rbx-0x62]
     642:	05 00 06 03 21       	add    eax,0x21030600
     647:	82                   	(bad)  
     648:	05 1d 0a 08 13       	add    eax,0x13080a1d
     64d:	05 3f 4b 05 2e       	add    eax,0x2e054b3f
     652:	06                   	(bad)  
     653:	4a 05 3f 06 c9 05    	rex.WX add rax,0x5c9063f
     659:	59                   	pop    rcx
     65a:	06                   	(bad)  
     65b:	4a 05 48 4a 05 00    	rex.WX add rax,0x54a48
     661:	03 5c 4a 05          	add    ebx,DWORD PTR [rdx+rcx*2+0x5]
     665:	2f                   	(bad)  
     666:	06                   	(bad)  
     667:	08 24 05 03 06 3c 05 	or     BYTE PTR [rax*1+0x53c0603],ah
     66e:	10 06                	adc    BYTE PTR [rsi],al
     670:	2f                   	(bad)  
     671:	05 27 06 3c 05       	add    eax,0x53c0627
     676:	09 3c 05 20 06 30 05 	or     DWORD PTR [rax*1+0x5300620],edi
     67d:	29 06                	sub    DWORD PTR [rsi],eax
     67f:	4a 05 09 3c 05 1b    	rex.WX add rax,0x1b053c09
     685:	06                   	(bad)  
     686:	30 05 14 06 4a 03    	xor    BYTE PTR [rip+0x34a0614],al        # 34a0ca0 <__TMC_END__+0x309bb68>
     68c:	77 3c                	ja     6ca <__abi_tag-0x3ffcb2>
     68e:	05 09 03 09 3c       	add    eax,0x3c090309
     693:	05 00 03 77 3c       	add    eax,0x3c770300
     698:	05 07 06 03 25       	add    eax,0x25030607
     69d:	4a 06                	rex.WX (bad) 
     69f:	3c 05                	cmp    al,0x5
     6a1:	0f 06                	clts   
     6a3:	35 05 52 06 3c       	xor    eax,0x3c065205
     6a8:	05 19 06 03 61       	add    eax,0x61030619
     6ad:	90                   	nop
     6ae:	05 12 06 4a 03       	add    eax,0x34a0612
     6b3:	73 3c                	jae    6f1 <__abi_tag-0x3ffc8b>
     6b5:	05 07 03 0d 3c       	add    eax,0x3c0d0307
     6ba:	05 00 03 73 4a       	add    eax,0x4a730300
     6bf:	05 07 06 03 25       	add    eax,0x25030607
     6c4:	4a 06                	rex.WX (bad) 
     6c6:	3c 05                	cmp    al,0x5
     6c8:	05 06 2f 05 43       	add    eax,0x43052f06
     6cd:	9f                   	lahf   
     6ce:	05 32 06 4a 05       	add    eax,0x54a0632
     6d3:	1c 06                	sbb    al,0x6
     6d5:	03 6c 4a 05          	add    ebp,DWORD PTR [rdx+rcx*2+0x5]
     6d9:	34 06                	xor    al,0x6
     6db:	74 05                	je     6e2 <__abi_tag-0x3ffc9a>
     6dd:	0f 3c                	(bad)  
     6df:	05 08 06 59 05       	add    eax,0x5590608
     6e4:	07                   	(bad)  
     6e5:	06                   	(bad)  
     6e6:	3c 05                	cmp    al,0x5
     6e8:	11 06                	adc    DWORD PTR [rsi],eax
     6ea:	6a 06                	push   0x6
     6ec:	03 68 74             	add    ebp,DWORD PTR [rax+0x74]
     6ef:	05 18 06 03 19       	add    eax,0x19030618
     6f4:	90                   	nop
     6f5:	05 25 06 3c 05       	add    eax,0x53c0625
     6fa:	57                   	push   rdi
     6fb:	ac                   	lods   al,BYTE PTR ds:[rsi]
     6fc:	05 60 4a 05 03       	add    eax,0x3054a60
     701:	66 05 2b 06          	add    ax,0x62b
     705:	83 05 39 06 4a 05 03 	add    DWORD PTR [rip+0x54a0639],0x3        # 54a0d45 <__TMC_END__+0x509bc0d>
     70c:	4a 03 66 08          	rex.WX add rsp,QWORD PTR [rsi+0x8]
     710:	20 05 11 06 03 1b    	and    BYTE PTR [rip+0x1b030611],al        # 1b030d27 <__TMC_END__+0x1ac2bbef>
     716:	90                   	nop
     717:	06                   	(bad)  
     718:	03 65 ba             	add    esp,DWORD PTR [rbp-0x46]
     71b:	05 29 06 03 2c       	add    eax,0x2c030629
     720:	58                   	pop    rax
     721:	05 43 06 4a 05       	add    eax,0x54a0643
     726:	18 4a 05             	sbb    BYTE PTR [rdx+0x5],cl
     729:	32 3c 05 03 3c 05 25 	xor    bh,BYTE PTR [rax*1+0x25053c03]
     730:	06                   	(bad)  
     731:	5a                   	pop    rdx
     732:	05 13 06 4a 05       	add    eax,0x54a0613
     737:	1a 06                	sbb    al,BYTE PTR [rsi]
     739:	08 13                	or     BYTE PTR [rbx],dl
     73b:	05 23 4b 05 1b       	add    eax,0x1b054b23
     740:	06                   	(bad)  
     741:	4a 05 1a 06 4b 05    	rex.WX add rax,0x54b061a
     747:	01 76 05             	add    DWORD PTR [rsi+0x5],esi
     74a:	05 03 62 08 12       	add    eax,0x12086203
     74f:	05 07 03 13 9e       	add    eax,0x9e130307
     754:	06                   	(bad)  
     755:	03 58 9e             	add    ebx,DWORD PTR [rax-0x62]
     758:	02 02                	add    al,BYTE PTR [rdx]
     75a:	00 01                	add    BYTE PTR [rcx],al
     75c:	01 f0                	add    eax,esi
     75e:	01 00                	add    DWORD PTR [rax],eax
     760:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     763:	eb 00                	jmp    765 <__abi_tag-0x3ffc17>
     765:	00 00                	add    BYTE PTR [rax],al
     767:	01 01                	add    DWORD PTR [rcx],eax
     769:	01 fb                	add    ebx,edi
     76b:	0e                   	(bad)  
     76c:	0d 00 01 01 01       	or     eax,0x1010100
     771:	01 00                	add    DWORD PTR [rax],eax
     773:	00 00                	add    BYTE PTR [rax],al
     775:	01 00                	add    DWORD PTR [rax],eax
     777:	00 01                	add    BYTE PTR [rcx],al
     779:	2f                   	(bad)  
     77a:	75 73                	jne    7ef <__abi_tag-0x3ffb8d>
     77c:	72 2f                	jb     7ad <__abi_tag-0x3ffbcf>
     77e:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     785:	2f                   	(bad)  
     786:	78 38                	js     7c0 <__abi_tag-0x3ffbbc>
     788:	36 5f                	ss pop rdi
     78a:	36 34 2d             	ss xor al,0x2d
     78d:	6c                   	ins    BYTE PTR es:[rdi],dx
     78e:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
     795:	75 2f                	jne    7c6 <__abi_tag-0x3ffbb6>
     797:	62                   	(bad)  
     798:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
     79f:	72 
     7a0:	2f                   	(bad)  
     7a1:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     7a8:	00 2f                	add    BYTE PTR [rdi],ch
     7aa:	6d                   	ins    DWORD PTR es:[rdi],dx
     7ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7ac:	74 2f                	je     7dd <__abi_tag-0x3ffb9f>
     7ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7af:	66 73 2f             	data16 jae 7e1 <__abi_tag-0x3ffb9b>
     7b2:	68 6f 6d 65 73       	push   0x73656d6f
     7b7:	2f                   	(bad)  
     7b8:	6c                   	ins    BYTE PTR es:[rdi],dx
     7b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7ba:	75 6d                	jne    829 <__abi_tag-0x3ffb53>
     7bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7bd:	75 6c                	jne    82b <__abi_tag-0x3ffb51>
     7bf:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
     7c5:	79 2d                	jns    7f4 <__abi_tag-0x3ffb88>
     7c7:	77 6f                	ja     838 <__abi_tag-0x3ffb44>
     7c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7ca:	64 70 61             	fs jo  82e <__abi_tag-0x3ffb4e>
     7cd:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
     7d0:	72 00                	jb     7d2 <__abi_tag-0x3ffbaa>
     7d2:	2f                   	(bad)  
     7d3:	75 73                	jne    848 <__abi_tag-0x3ffb34>
     7d5:	72 2f                	jb     806 <__abi_tag-0x3ffb76>
     7d7:	6c                   	ins    BYTE PTR es:[rdi],dx
     7d8:	69 62 2f 6c 6c 76 6d 	imul   esp,DWORD PTR [rdx+0x2f],0x6d766c6c
     7df:	2d 31 32 2f 6c       	sub    eax,0x6c2f3231
     7e4:	69 62 2f 63 6c 61 6e 	imul   esp,DWORD PTR [rdx+0x2f],0x6e616c63
     7eb:	67 2f                	addr32 (bad) 
     7ed:	31 32                	xor    DWORD PTR [rdx],esi
     7ef:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
     7f2:	31 2f                	xor    DWORD PTR [rdi],ebp
     7f4:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     7fb:	00 00                	add    BYTE PTR [rax],al
     7fd:	74 79                	je     878 <__abi_tag-0x3ffb04>
     7ff:	70 65                	jo     866 <__abi_tag-0x3ffb16>
     801:	73 2e                	jae    831 <__abi_tag-0x3ffb4b>
     803:	68 00 01 00 00       	push   0x100
     808:	73 74                	jae    87e <__abi_tag-0x3ffafe>
     80a:	64 69 6e 74 2d 75 69 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6e69752d
     811:	6e 
     812:	74 6e                	je     882 <__abi_tag-0x3ffafa>
     814:	2e 68 00 01 00 00    	cs push 0x100
     81a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     81c:	66 2e 68 00 02       	cs pushw 0x200
     821:	00 00                	add    BYTE PTR [rax],al
     823:	73 72                	jae    897 <__abi_tag-0x3ffae5>
     825:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     827:	73 65                	jae    88e <__abi_tag-0x3ffaee>
     829:	67 6d                	ins    DWORD PTR es:[edi],dx
     82b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     82d:	74 2e                	je     85d <__abi_tag-0x3ffb1f>
     82f:	63 00                	movsxd eax,DWORD PTR [rax]
     831:	03 00                	add    eax,DWORD PTR [rax]
     833:	00 2e                	add    BYTE PTR [rsi],ch
     835:	2f                   	(bad)  
     836:	69 6e 63 2f 77 6f 6f 	imul   ebp,DWORD PTR [rsi+0x63],0x6f6f772f
     83d:	64 79 2e             	fs jns 86e <__abi_tag-0x3ffb0e>
     840:	68 00 03 00 00       	push   0x300
     845:	73 74                	jae    8bb <__abi_tag-0x3ffac1>
     847:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x400
     84e:	04 
     84f:	00 00                	add    BYTE PTR [rax],al
     851:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
     854:	00 09                	add    BYTE PTR [rcx],cl
     856:	02 50 18             	add    dl,BYTE PTR [rax+0x18]
     859:	40 00 00             	rex add BYTE PTR [rax],al
     85c:	00 00                	add    BYTE PTR [rax],al
     85e:	00 18                	add    BYTE PTR [rax],bl
     860:	05 16 0a 9f 05       	add    eax,0x59f0a16
     865:	17                   	(bad)  
     866:	e5 05                	in     eax,0x5
     868:	07                   	(bad)  
     869:	3d 05 0d 06 3c       	cmp    eax,0x3c060d05
     86e:	05 07 3c 05 00       	add    eax,0x53c07
     873:	03 76 d6             	add    esi,DWORD PTR [rsi-0x2a]
     876:	05 0f 06 03 0f       	add    eax,0xf03060f
     87b:	3c 05                	cmp    al,0x5
     87d:	14 06                	adc    al,0x6
     87f:	4a 05 03 3c 05 0f    	rex.WX add rax,0xf053c03
     885:	2e 05 00 03 71 4a    	cs add eax,0x4a710300
     88b:	05 01 06 03 13       	add    eax,0x13030601
     890:	3c 05                	cmp    al,0x5
     892:	00 ca                	add    dl,cl
     894:	05 1d 0a ad 05       	add    eax,0x5ad0a1d
     899:	1a 4c 05 07          	sbb    cl,BYTE PTR [rbp+rax*1+0x7]
     89d:	06                   	(bad)  
     89e:	58                   	pop    rax
     89f:	05 32 06 32 05       	add    eax,0x5320632
     8a4:	1e                   	(bad)  
     8a5:	06                   	(bad)  
     8a6:	58                   	pop    rax
     8a7:	05 03 4a 03 64       	add    eax,0x64034a03
     8ac:	66 05 29 06          	add    ax,0x629
     8b0:	03 16                	add    edx,DWORD PTR [rsi]
     8b2:	3c 06                	cmp    al,0x6
     8b4:	03 6a 74             	add    ebp,DWORD PTR [rdx+0x74]
     8b7:	05 3e 06 03 1c       	add    eax,0x1c03063e
     8bc:	08 74 05 1e          	or     BYTE PTR [rbp+rax*1+0x1e],dh
     8c0:	06                   	(bad)  
     8c1:	3c 05                	cmp    al,0x5
     8c3:	03 4a 05             	add    ecx,DWORD PTR [rdx+0x5]
     8c6:	40 06                	rex (bad) 
     8c8:	30 05 16 03 6a 82    	xor    BYTE PTR [rip+0xffffffff826a0316],al        # ffffffff826a0be4 <__TMC_END__+0xffffffff8229baac>
     8ce:	05 17 e5 05 07       	add    eax,0x705e517
     8d3:	3d 05 0d 06 74       	cmp    eax,0x74060d05
     8d8:	05 07 3c 05 00       	add    eax,0x53c07
     8dd:	03 76 ba             	add    esi,DWORD PTR [rsi-0x46]
     8e0:	05 0f 06 03 0f       	add    eax,0xf03060f
     8e5:	3c 05                	cmp    al,0x5
     8e7:	14 06                	adc    al,0x6
     8e9:	4a 05 03 3c 05 0f    	rex.WX add rax,0xf053c03
     8ef:	2e 03 71 4a          	cs add esi,DWORD PTR [rcx+0x4a]
     8f3:	05 05 06 03 19       	add    eax,0x19030605
     8f8:	2e 06                	cs (bad) 
     8fa:	03 67 9e             	add    esp,DWORD PTR [rdi-0x62]
     8fd:	05 01 06 03 21       	add    eax,0x21030601
     902:	90                   	nop
     903:	05 00 08 a0 05       	add    eax,0x5a00800
     908:	03 0a                	add    ecx,DWORD PTR [rdx]
     90a:	5a                   	pop    rdx
     90b:	06                   	(bad)  
     90c:	03 5b 58             	add    ebx,DWORD PTR [rbx+0x58]
     90f:	05 17 06 03 26       	add    eax,0x26030617
     914:	08 58 05             	or     BYTE PTR [rax+0x5],bl
     917:	09 06                	or     DWORD PTR [rsi],eax
     919:	3c 58                	cmp    al,0x58
     91b:	05 10 06 30 05       	add    eax,0x5300610
     920:	03 47 06             	add    eax,DWORD PTR [rdi+0x6]
     923:	03 5b 74             	add    ebx,DWORD PTR [rbx+0x74]
     926:	05 14 06 03 27       	add    eax,0x27030614
     92b:	58                   	pop    rax
     92c:	05 01 40 05 00       	add    eax,0x54001
     931:	08 30                	or     BYTE PTR [rax],dh
     933:	05 28 0a 13 05       	add    eax,0x5130a28
     938:	33 06                	xor    eax,DWORD PTR [rsi]
     93a:	3c 03                	cmp    al,0x3
     93c:	52                   	push   rdx
     93d:	2e 05 07 03 2e 58    	cs add eax,0x582e0307
     943:	03 52 66             	add    edx,DWORD PTR [rdx+0x66]
     946:	05 01 06 03 32       	add    eax,0x32030601
     94b:	2e 02 01             	cs add al,BYTE PTR [rcx]
     94e:	00 01                	add    BYTE PTR [rcx],al
     950:	01 19                	add    DWORD PTR [rcx],ebx
     952:	02 00                	add    al,BYTE PTR [rax]
     954:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     957:	3a 01                	cmp    al,BYTE PTR [rcx]
     959:	00 00                	add    BYTE PTR [rax],al
     95b:	01 01                	add    DWORD PTR [rcx],eax
     95d:	01 fb                	add    ebx,edi
     95f:	0e                   	(bad)  
     960:	0d 00 01 01 01       	or     eax,0x1010100
     965:	01 00                	add    DWORD PTR [rax],eax
     967:	00 00                	add    BYTE PTR [rax],al
     969:	01 00                	add    DWORD PTR [rax],eax
     96b:	00 01                	add    BYTE PTR [rcx],al
     96d:	2f                   	(bad)  
     96e:	6d                   	ins    DWORD PTR es:[rdi],dx
     96f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     970:	74 2f                	je     9a1 <__abi_tag-0x3ff9db>
     972:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     973:	66 73 2f             	data16 jae 9a5 <__abi_tag-0x3ff9d7>
     976:	68 6f 6d 65 73       	push   0x73656d6f
     97b:	2f                   	(bad)  
     97c:	6c                   	ins    BYTE PTR es:[rdi],dx
     97d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     97e:	75 6d                	jne    9ed <__abi_tag-0x3ff98f>
     980:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     981:	75 6c                	jne    9ef <__abi_tag-0x3ff98d>
     983:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
     989:	79 2d                	jns    9b8 <__abi_tag-0x3ff9c4>
     98b:	77 6f                	ja     9fc <__abi_tag-0x3ff980>
     98d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     98e:	64 70 61             	fs jo  9f2 <__abi_tag-0x3ff98a>
     991:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
     994:	72 00                	jb     996 <__abi_tag-0x3ff9e6>
     996:	2f                   	(bad)  
     997:	75 73                	jne    a0c <__abi_tag-0x3ff970>
     999:	72 2f                	jb     9ca <__abi_tag-0x3ff9b2>
     99b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     9a2:	00 2f                	add    BYTE PTR [rdi],ch
     9a4:	75 73                	jne    a19 <__abi_tag-0x3ff963>
     9a6:	72 2f                	jb     9d7 <__abi_tag-0x3ff9a5>
     9a8:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     9af:	2f                   	(bad)  
     9b0:	78 38                	js     9ea <__abi_tag-0x3ff992>
     9b2:	36 5f                	ss pop rdi
     9b4:	36 34 2d             	ss xor al,0x2d
     9b7:	6c                   	ins    BYTE PTR es:[rdi],dx
     9b8:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
     9bf:	75 2f                	jne    9f0 <__abi_tag-0x3ff98c>
     9c1:	62                   	(bad)  
     9c2:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
     9c9:	72 
     9ca:	2f                   	(bad)  
     9cb:	6c                   	ins    BYTE PTR es:[rdi],dx
     9cc:	69 62 2f 6c 6c 76 6d 	imul   esp,DWORD PTR [rdx+0x2f],0x6d766c6c
     9d3:	2d 31 32 2f 6c       	sub    eax,0x6c2f3231
     9d8:	69 62 2f 63 6c 61 6e 	imul   esp,DWORD PTR [rdx+0x2f],0x6e616c63
     9df:	67 2f                	addr32 (bad) 
     9e1:	31 32                	xor    DWORD PTR [rdx],esi
     9e3:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
     9e6:	31 2f                	xor    DWORD PTR [rdi],ebp
     9e8:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     9ef:	00 2f                	add    BYTE PTR [rdi],ch
     9f1:	75 73                	jne    a66 <__abi_tag-0x3ff916>
     9f3:	72 2f                	jb     a24 <__abi_tag-0x3ff958>
     9f5:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     9fc:	2f                   	(bad)  
     9fd:	78 38                	js     a37 <__abi_tag-0x3ff945>
     9ff:	36 5f                	ss pop rdi
     a01:	36 34 2d             	ss xor al,0x2d
     a04:	6c                   	ins    BYTE PTR es:[rdi],dx
     a05:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
     a0c:	75 2f                	jne    a3d <__abi_tag-0x3ff93f>
     a0e:	73 79                	jae    a89 <__abi_tag-0x3ff8f3>
     a10:	73 00                	jae    a12 <__abi_tag-0x3ff96a>
     a12:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     a15:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     a17:	66 69 6c 65 5f 69 6f 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6f69
     a1e:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
     a21:	01 00                	add    DWORD PTR [rax],eax
     a23:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
     a26:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a27:	74 6c                	je     a95 <__abi_tag-0x3ff8e7>
     a29:	2e 68 00 02 00 00    	cs push 0x200
     a2f:	75 6e                	jne    a9f <__abi_tag-0x3ff8dd>
     a31:	69 73 74 64 2e 68 00 	imul   esi,DWORD PTR [rbx+0x74],0x682e64
     a38:	02 00                	add    al,BYTE PTR [rax]
     a3a:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     a3d:	64 69 6f 2e 68 00 02 	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x20068
     a44:	00 
     a45:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
     a49:	65 73 2e             	gs jae a7a <__abi_tag-0x3ff902>
     a4c:	68 00 03 00 00       	push   0x300
     a51:	73 74                	jae    ac7 <__abi_tag-0x3ff8b5>
     a53:	64 69 6e 74 2d 75 69 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6e69752d
     a5a:	6e 
     a5b:	74 6e                	je     acb <__abi_tag-0x3ff8b1>
     a5d:	2e 68 00 03 00 00    	cs push 0x300
     a63:	2e 2f                	cs (bad) 
     a65:	69 6e 63 2f 77 6f 6f 	imul   ebp,DWORD PTR [rsi+0x63],0x6f6f772f
     a6c:	64 79 2e             	fs jns a9d <__abi_tag-0x3ff8df>
     a6f:	68 00 01 00 00       	push   0x100
     a74:	73 74                	jae    aea <__abi_tag-0x3ff892>
     a76:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x400
     a7d:	04 
     a7e:	00 00                	add    BYTE PTR [rax],al
     a80:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     a82:	66 2e 68 00 02       	cs pushw 0x200
     a87:	00 00                	add    BYTE PTR [rax],al
     a89:	74 79                	je     b04 <__abi_tag-0x3ff878>
     a8b:	70 65                	jo     af2 <__abi_tag-0x3ff88a>
     a8d:	73 2e                	jae    abd <__abi_tag-0x3ff8bf>
     a8f:	68 00 05 00 00       	push   0x500
     a94:	00 00                	add    BYTE PTR [rax],al
     a96:	09 02                	or     DWORD PTR [rdx],eax
     a98:	d0 19                	rcr    BYTE PTR [rcx],1
     a9a:	40 00 00             	rex add BYTE PTR [rax],al
     a9d:	00 00                	add    BYTE PTR [rax],al
     a9f:	00 18                	add    BYTE PTR [rax],bl
     aa1:	05 0c 0a 9f 05       	add    eax,0x59f0a0c
     aa6:	0a 08                	or     cl,BYTE PTR [rax]
     aa8:	59                   	pop    rcx
     aa9:	05 07 06 3c 05       	add    eax,0x53c0607
     aae:	00 03                	add    BYTE PTR [rbx],al
     ab0:	77 2e                	ja     ae0 <__abi_tag-0x3ff89c>
     ab2:	05 12 06 03 0d       	add    eax,0xd030612
     ab7:	2e 05 21 06 3c 05    	cs add eax,0x53c0621
     abd:	03 4a 06             	add    ecx,DWORD PTR [rdx+0x6]
     ac0:	75 06                	jne    ac8 <__abi_tag-0x3ff8b4>
     ac2:	03 72 74             	add    esi,DWORD PTR [rdx+0x74]
     ac5:	05 05 06 03 0a       	add    eax,0xa030605
     aca:	2e 06                	cs (bad) 
     acc:	03 76 9e             	add    esi,DWORD PTR [rsi-0x62]
     acf:	05 01 06 03 10       	add    eax,0x10030601
     ad4:	66 05 00 08          	add    ax,0x800
     ad8:	22 05 16 0a 08 e7    	and    al,BYTE PTR [rip+0xffffffffe7080a16]        # ffffffffe70814f4 <__TMC_END__+0xffffffffe6c7c3bc>
     ade:	05 09 f3 05 00       	add    eax,0x5f309
     ae3:	06                   	(bad)  
     ae4:	03 6a 58             	add    ebp,DWORD PTR [rdx+0x58]
     ae7:	05 09 03 16 3c       	add    eax,0x3c160309
     aec:	05 20 06 6d 05       	add    eax,0x56d0620
     af1:	2e 06                	cs (bad) 
     af3:	74 05                	je     afa <__abi_tag-0x3ff882>
     af5:	18 3c 05 14 06 59 05 	sbb    BYTE PTR [rax*1+0x5590614],bh
     afc:	09 06                	or     DWORD PTR [rsi],eax
     afe:	3c 05                	cmp    al,0x5
     b00:	0d 06 32 05 16       	or     eax,0x16053206
     b05:	3d 05 14 06 4a       	cmp    eax,0x4a061405
     b0a:	05 05 3c 05 0a       	add    eax,0xa053c05
     b0f:	06                   	(bad)  
     b10:	d7                   	xlat   BYTE PTR ds:[rbx]
     b11:	06                   	(bad)  
     b12:	03 5c 90 05          	add    ebx,DWORD PTR [rax+rdx*4+0x5]
     b16:	0c 06                	or     al,0x6
     b18:	03 17                	add    edx,DWORD PTR [rdi]
     b1a:	4a 06                	rex.WX (bad) 
     b1c:	03 69 3c             	add    ebp,DWORD PTR [rcx+0x3c]
     b1f:	05 01 06 03 27       	add    eax,0x27030601
     b24:	08 3c 05 00 02 22 14 	or     BYTE PTR [rax*1+0x14220200],bh
     b2b:	05 0c 0a 67 05       	add    eax,0x5670a0c
     b30:	0a d7                	or     dl,bh
     b32:	05 07 06 3c 05       	add    eax,0x53c0607
     b37:	00 03                	add    BYTE PTR [rbx],al
     b39:	55                   	push   rbp
     b3a:	2e 05 07 06 03 2f    	cs add eax,0x2f030607
     b40:	2e 05 1f 06 e4 05    	cs add eax,0x5e4061f
     b46:	07                   	(bad)  
     b47:	4a 05 03 06 32 06    	rex.WX add rax,0x6320603
     b4d:	03 4d 74             	add    ecx,DWORD PTR [rbp+0x74]
     b50:	05 01 06 03 35       	add    eax,0x35030601
     b55:	2e 05 05 03 77 74    	cs add eax,0x74770305
     b5b:	78 05                	js     b62 <__abi_tag-0x3ff81a>
     b5d:	00 06                	add    BYTE PTR [rsi],al
     b5f:	03 50 58             	add    edx,DWORD PTR [rax+0x58]
     b62:	05 01 06 03 35       	add    eax,0x35030601
     b67:	08 12                	or     BYTE PTR [rdx],dl
     b69:	02 07                	add    al,BYTE PTR [rdi]
     b6b:	00 01                	add    BYTE PTR [rcx],al
     b6d:	01 ac 04 00 00 04 00 	add    DWORD PTR [rsp+rax*1+0x40000],ebp
     b74:	44 01 00             	add    DWORD PTR [rax],r8d
     b77:	00 01                	add    BYTE PTR [rcx],al
     b79:	01 01                	add    DWORD PTR [rcx],eax
     b7b:	fb                   	sti    
     b7c:	0e                   	(bad)  
     b7d:	0d 00 01 01 01       	or     eax,0x1010100
     b82:	01 00                	add    DWORD PTR [rax],eax
     b84:	00 00                	add    BYTE PTR [rax],al
     b86:	01 00                	add    DWORD PTR [rax],eax
     b88:	00 01                	add    BYTE PTR [rcx],al
     b8a:	2f                   	(bad)  
     b8b:	75 73                	jne    c00 <__abi_tag-0x3ff77c>
     b8d:	72 2f                	jb     bbe <__abi_tag-0x3ff7be>
     b8f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     b96:	2f                   	(bad)  
     b97:	78 38                	js     bd1 <__abi_tag-0x3ff7ab>
     b99:	36 5f                	ss pop rdi
     b9b:	36 34 2d             	ss xor al,0x2d
     b9e:	6c                   	ins    BYTE PTR es:[rdi],dx
     b9f:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
     ba6:	75 2f                	jne    bd7 <__abi_tag-0x3ff7a5>
     ba8:	62                   	(bad)  
     ba9:	69 74 73 00 2f 6d 6e 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x746e6d2f
     bb0:	74 
     bb1:	2f                   	(bad)  
     bb2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bb3:	66 73 2f             	data16 jae be5 <__abi_tag-0x3ff797>
     bb6:	68 6f 6d 65 73       	push   0x73656d6f
     bbb:	2f                   	(bad)  
     bbc:	6c                   	ins    BYTE PTR es:[rdi],dx
     bbd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bbe:	75 6d                	jne    c2d <__abi_tag-0x3ff74f>
     bc0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bc1:	75 6c                	jne    c2f <__abi_tag-0x3ff74d>
     bc3:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
     bc9:	79 2d                	jns    bf8 <__abi_tag-0x3ff784>
     bcb:	77 6f                	ja     c3c <__abi_tag-0x3ff740>
     bcd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bce:	64 70 61             	fs jo  c32 <__abi_tag-0x3ff74a>
     bd1:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
     bd4:	72 00                	jb     bd6 <__abi_tag-0x3ff7a6>
     bd6:	2f                   	(bad)  
     bd7:	75 73                	jne    c4c <__abi_tag-0x3ff730>
     bd9:	72 2f                	jb     c0a <__abi_tag-0x3ff772>
     bdb:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     be2:	00 2f                	add    BYTE PTR [rdi],ch
     be4:	75 73                	jne    c59 <__abi_tag-0x3ff723>
     be6:	72 2f                	jb     c17 <__abi_tag-0x3ff765>
     be8:	6c                   	ins    BYTE PTR es:[rdi],dx
     be9:	69 62 2f 6c 6c 76 6d 	imul   esp,DWORD PTR [rdx+0x2f],0x6d766c6c
     bf0:	2d 31 32 2f 6c       	sub    eax,0x6c2f3231
     bf5:	69 62 2f 63 6c 61 6e 	imul   esp,DWORD PTR [rdx+0x2f],0x6e616c63
     bfc:	67 2f                	addr32 (bad) 
     bfe:	31 32                	xor    DWORD PTR [rdx],esi
     c00:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
     c03:	31 2f                	xor    DWORD PTR [rdi],ebp
     c05:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     c0c:	00 2f                	add    BYTE PTR [rdi],ch
     c0e:	75 73                	jne    c83 <__abi_tag-0x3ff6f9>
     c10:	72 2f                	jb     c41 <__abi_tag-0x3ff73b>
     c12:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
     c19:	2f                   	(bad)  
     c1a:	78 38                	js     c54 <__abi_tag-0x3ff728>
     c1c:	36 5f                	ss pop rdi
     c1e:	36 34 2d             	ss xor al,0x2d
     c21:	6c                   	ins    BYTE PTR es:[rdi],dx
     c22:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
     c29:	75 2f                	jne    c5a <__abi_tag-0x3ff722>
     c2b:	73 79                	jae    ca6 <__abi_tag-0x3ff6d6>
     c2d:	73 00                	jae    c2f <__abi_tag-0x3ff74d>
     c2f:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
     c33:	65 73 2e             	gs jae c64 <__abi_tag-0x3ff718>
     c36:	68 00 01 00 00       	push   0x100
     c3b:	73 74                	jae    cb1 <__abi_tag-0x3ff6cb>
     c3d:	64 69 6e 74 2d 75 69 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6e69752d
     c44:	6e 
     c45:	74 6e                	je     cb5 <__abi_tag-0x3ff6c7>
     c47:	2e 68 00 01 00 00    	cs push 0x100
     c4d:	73 72                	jae    cc1 <__abi_tag-0x3ff6bb>
     c4f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     c51:	64 65 62 75 67 5f 75 	(bad)
     c58:	74 69                	je     cc3 <__abi_tag-0x3ff6b9>
     c5a:	6c                   	ins    BYTE PTR es:[rdi],dx
     c5b:	73 2e                	jae    c8b <__abi_tag-0x3ff6f1>
     c5d:	63 00                	movsxd eax,DWORD PTR [rax]
     c5f:	02 00                	add    al,BYTE PTR [rax]
     c61:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     c64:	64 69 6f 2e 68 00 03 	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x30068
     c6b:	00 
     c6c:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
     c6f:	69 73 74 64 2e 68 00 	imul   esi,DWORD PTR [rbx+0x74],0x682e64
     c76:	03 00                	add    eax,DWORD PTR [rax]
     c78:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
     c7b:	66 2e 68 00 03       	cs pushw 0x300
     c80:	00 00                	add    BYTE PTR [rax],al
     c82:	73 74                	jae    cf8 <__abi_tag-0x3ff684>
     c84:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x400
     c8b:	04 
     c8c:	00 00                	add    BYTE PTR [rax],al
     c8e:	73 74                	jae    d04 <__abi_tag-0x3ff678>
     c90:	64 69 6e 74 2d 69 6e 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x746e692d
     c97:	74 
     c98:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c99:	2e 68 00 01 00 00    	cs push 0x100
     c9f:	74 79                	je     d1a <__abi_tag-0x3ff662>
     ca1:	70 65                	jo     d08 <__abi_tag-0x3ff674>
     ca3:	73 2e                	jae    cd3 <__abi_tag-0x3ff6a9>
     ca5:	68 00 05 00 00       	push   0x500
     caa:	2e 2f                	cs (bad) 
     cac:	69 6e 63 2f 77 6f 6f 	imul   ebp,DWORD PTR [rsi+0x63],0x6f6f772f
     cb3:	64 79 2e             	fs jns ce4 <__abi_tag-0x3ff698>
     cb6:	68 00 02 00 00       	push   0x200
     cbb:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
     cbe:	00 09                	add    BYTE PTR [rcx],cl
     cc0:	02 50 1b             	add    dl,BYTE PTR [rax+0x1b]
     cc3:	40 00 00             	rex add BYTE PTR [rax],al
     cc6:	00 00                	add    BYTE PTR [rax],al
     cc8:	00 18                	add    BYTE PTR [rax],bl
     cca:	05 0b 0a 08 13       	add    eax,0x13080a0b
     ccf:	05 07 06 2e 05       	add    eax,0x52e0607
     cd4:	00 03                	add    BYTE PTR [rbx],al
     cd6:	78 2e                	js     d06 <__abi_tag-0x3ff676>
     cd8:	05 03 06 03 0f       	add    eax,0xf030603
     cdd:	3c 06                	cmp    al,0x6
     cdf:	03 71 66             	add    esi,DWORD PTR [rcx+0x66]
     ce2:	05 05 06 03 16       	add    eax,0x16030605
     ce7:	08 20                	or     BYTE PTR [rax],ah
     ce9:	05 03 03 79 9e       	add    eax,0x9e790303
     cee:	05 18 06 3c 03       	add    eax,0x33c0618
     cf3:	71 58                	jno    d4d <__abi_tag-0x3ff62f>
     cf5:	05 1e 06 03 10       	add    eax,0x1003061e
     cfa:	3c 05                	cmp    al,0x5
     cfc:	1a 06                	sbb    al,BYTE PTR [rsi]
     cfe:	3c 05                	cmp    al,0x5
     d00:	05 3c 03 70 2e       	add    eax,0x2e70033c
     d05:	05 18 06 03 14       	add    eax,0x14030618
     d0a:	3c 05                	cmp    al,0x5
     d0c:	07                   	(bad)  
     d0d:	06                   	(bad)  
     d0e:	66 05 1a 06          	add    ax,0x61a
     d12:	b6 05                	mov    dh,0x5
     d14:	05 06 3c 05 00       	add    eax,0x53c06
     d19:	03 70 f2             	add    esi,DWORD PTR [rax-0xe]
     d1c:	05 05 06 03 09       	add    eax,0x9030605
     d21:	3c 06                	cmp    al,0x6
     d23:	03 77 2e             	add    esi,DWORD PTR [rdi+0x2e]
     d26:	05 18 06 03 0a       	add    eax,0xa030618
     d2b:	66 05 07 06          	add    ax,0x607
     d2f:	58                   	pop    rax
     d30:	05 22 06 b9 05       	add    eax,0x5b90622
     d35:	1a 06                	sbb    al,BYTE PTR [rsi]
     d37:	4a 05 05 3c 05 00    	rex.WX add rax,0x53c05
     d3d:	03 77 2e             	add    esi,DWORD PTR [rdi+0x2e]
     d40:	06                   	(bad)  
     d41:	03 1b                	add    ebx,DWORD PTR [rbx]
     d43:	02 26                	add    ah,BYTE PTR [rsi]
     d45:	01 05 0b 0a 08 13    	add    DWORD PTR [rip+0x13080a0b],eax        # 13081756 <__TMC_END__+0x12c7c61e>
     d4b:	05 07 06 2e 05       	add    eax,0x52e0607
     d50:	00 03                	add    BYTE PTR [rbx],al
     d52:	64 66 05 03 06       	fs add ax,0x603
     d57:	03 27                	add    esp,DWORD PTR [rdi]
     d59:	3c 06                	cmp    al,0x6
     d5b:	03 59 66             	add    ebx,DWORD PTR [rcx+0x66]
     d5e:	05 05 06 03 32       	add    eax,0x32030605
     d63:	d6                   	(bad)  
     d64:	05 03 03 75 08       	add    eax,0x8750303
     d69:	12 05 18 06 3c 05    	adc    al,BYTE PTR [rip+0x53c0618]        # 53c1387 <__TMC_END__+0x4fbc24f>
     d6f:	03 3c 03             	add    edi,DWORD PTR [rbx+rax*1]
     d72:	59                   	pop    rcx
     d73:	66 05 1e 06          	add    ax,0x61e
     d77:	03 28                	add    ebp,DWORD PTR [rax]
     d79:	3c 05                	cmp    al,0x5
     d7b:	1a 06                	sbb    al,BYTE PTR [rsi]
     d7d:	3c 05                	cmp    al,0x5
     d7f:	05 3c 03 58 2e       	add    eax,0x2e58033c
     d84:	05 0b 06 03 2c       	add    eax,0x2c03060b
     d89:	82                   	(bad)  
     d8a:	05 29 06 66 05       	add    eax,0x5660629
     d8f:	09 06                	or     DWORD PTR [rsi],eax
     d91:	75 05                	jne    d98 <__abi_tag-0x3ff5e4>
     d93:	1a fb                	sbb    bh,bl
     d95:	05 09 08 27 05       	add    eax,0x5270809
     d9a:	1a 03                	sbb    al,BYTE PTR [rbx]
     d9c:	79 08                	jns    da6 <__abi_tag-0x3ff5d6>
     d9e:	12 05 05 06 3c 05    	adc    al,BYTE PTR [rip+0x53c0605]        # 53c13a9 <__TMC_END__+0x4fbc271>
     da4:	00 03                	add    BYTE PTR [rbx],al
     da6:	58                   	pop    rax
     da7:	08 2e                	or     BYTE PTR [rsi],ch
     da9:	05 05 06 03 1d       	add    eax,0x1d030605
     dae:	3c 06                	cmp    al,0x6
     db0:	03 63 2e             	add    esp,DWORD PTR [rbx+0x2e]
     db3:	05 09 06 03 21       	add    eax,0x21030609
     db8:	4a 05 22 fc 05 1a    	rex.WX add rax,0x1a05fc22
     dbe:	06                   	(bad)  
     dbf:	4a 05 05 3c 05 0b    	rex.WX add rax,0xb053c05
     dc5:	06                   	(bad)  
     dc6:	2f                   	(bad)  
     dc7:	05 29 06 58 05       	add    eax,0x5580629
     dcc:	09 06                	or     DWORD PTR [rsi],eax
     dce:	75 05                	jne    dd5 <__abi_tag-0x3ff5a7>
     dd0:	22 fe                	and    bh,dh
     dd2:	05 1a 06 4a 05       	add    eax,0x54a061a
     dd7:	05 3c 05 00 03       	add    eax,0x300053c
     ddc:	63 2e                	movsxd ebp,DWORD PTR [rsi]
     dde:	06                   	(bad)  
     ddf:	03 37                	add    esi,DWORD PTR [rdi]
     de1:	08 e4                	or     ah,ah
     de3:	05 2c 0a 75 05       	add    eax,0x5750a2c
     de8:	40 06                	rex (bad) 
     dea:	3c 05                	cmp    al,0x5
     dec:	54                   	push   rsp
     ded:	4a 05 0a 06 4b 05    	rex.WX add rax,0x54b060a
     df3:	03 57 05             	add    edx,DWORD PTR [rdi+0x5]
     df6:	1e                   	(bad)  
     df7:	bc 05 03 06 4a       	mov    esp,0x4a060305
     dfc:	05 0b 06 bb 05       	add    eax,0x5bb060b
     e01:	03 06                	add    eax,DWORD PTR [rsi]
     e03:	3c 05                	cmp    al,0x5
     e05:	00 03                	add    BYTE PTR [rbx],al
     e07:	45 08 ac 05 1f 06 03 	or     BYTE PTR [r13+rax*1-0x39fcf9e1],r13b
     e0e:	c6 
     e0f:	00 58 05             	add    BYTE PTR [rax+0x5],bl
     e12:	03 06                	add    eax,DWORD PTR [rsi]
     e14:	4a 05 0b 06 bb 05    	rex.WX add rax,0x5bb060b
     e1a:	03 06                	add    eax,DWORD PTR [rsi]
     e1c:	3c 05                	cmp    al,0x5
     e1e:	00 03                	add    BYTE PTR [rbx],al
     e20:	b9 7f 08 58 05       	mov    ecx,0x558087f
     e25:	27                   	(bad)  
     e26:	06                   	(bad)  
     e27:	03 d2                	add    edx,edx
     e29:	00 58 05             	add    BYTE PTR [rax+0x5],bl
     e2c:	03 06                	add    eax,DWORD PTR [rsi]
     e2e:	3c 05                	cmp    al,0x5
     e30:	1e                   	(bad)  
     e31:	06                   	(bad)  
     e32:	bb 05 03 06 4a       	mov    ebx,0x4a060305
     e37:	05 24 06 bb 05       	add    eax,0x5bb0624
     e3c:	03 06                	add    eax,DWORD PTR [rsi]
     e3e:	4a 05 27 06 bb 05    	rex.WX add rax,0x5bb0627
     e44:	03 06                	add    eax,DWORD PTR [rsi]
     e46:	4a 05 27 06 bb 05    	rex.WX add rax,0x5bb0627
     e4c:	03 06                	add    eax,DWORD PTR [rsi]
     e4e:	3c 05                	cmp    al,0x5
     e50:	2d 06 bb 05 03       	sub    eax,0x305bb06
     e55:	06                   	(bad)  
     e56:	4a 05 35 06 bb 05    	rex.WX add rax,0x5bb0635
     e5c:	03 06                	add    eax,DWORD PTR [rsi]
     e5e:	4a 05 37 06 bb 05    	rex.WX add rax,0x5bb0637
     e64:	03 06                	add    eax,DWORD PTR [rsi]
     e66:	4a 05 25 06 bb 05    	rex.WX add rax,0x5bb0625
     e6c:	03 06                	add    eax,DWORD PTR [rsi]
     e6e:	3c 05                	cmp    al,0x5
     e70:	2b 06                	sub    eax,DWORD PTR [rsi]
     e72:	bb 05 03 06 4a       	mov    ebx,0x4a060305
     e77:	05 31 06 bb 05       	add    eax,0x5bb0631
     e7c:	03 06                	add    eax,DWORD PTR [rsi]
     e7e:	4a 05 32 06 bb 05    	rex.WX add rax,0x5bb0632
     e84:	03 06                	add    eax,DWORD PTR [rsi]
     e86:	4a 05 32 06 bb 05    	rex.WX add rax,0x5bb0632
     e8c:	03 06                	add    eax,DWORD PTR [rsi]
     e8e:	4a 05 33 06 bb 05    	rex.WX add rax,0x5bb0633
     e94:	03 06                	add    eax,DWORD PTR [rsi]
     e96:	4a 05 33 06 bb 05    	rex.WX add rax,0x5bb0633
     e9c:	03 06                	add    eax,DWORD PTR [rsi]
     e9e:	4a 05 00 06 08 93    	rex.WX add rax,0xffffffff93080600
     ea4:	05 14 0a 68 05       	add    eax,0x5680a14
     ea9:	01 e6                	add    esi,esp
     eab:	05 00 ae 05 03       	add    eax,0x305ae00
     eb0:	0a 13                	or     dl,BYTE PTR [rbx]
     eb2:	06                   	(bad)  
     eb3:	03 96 7f 58 05 01    	add    edx,DWORD PTR [rsi+0x105587f]
     eb9:	06                   	(bad)  
     eba:	03 8a 01 08 2e 06    	add    ecx,DWORD PTR [rdx+0x62e0801]
     ec0:	03 f6                	add    esi,esi
     ec2:	7e 20                	jle    ee4 <__abi_tag-0x3ff498>
     ec4:	03 8a 01 08 66 05    	add    ecx,DWORD PTR [rdx+0x5660801]
     eca:	03 06                	add    eax,DWORD PTR [rsi]
     ecc:	03 60 20             	add    esp,DWORD PTR [rax+0x20]
     ecf:	06                   	(bad)  
     ed0:	03 96 7f 82 05 01    	add    edx,DWORD PTR [rsi+0x105827f]
     ed6:	06                   	(bad)  
     ed7:	03 8a 01 58 06 03    	add    ecx,DWORD PTR [rdx+0x3065801]
     edd:	f6 7e 20             	idiv   BYTE PTR [rsi+0x20]
     ee0:	03 8a 01 58 03 f6    	add    ecx,DWORD PTR [rdx-0x9fca7ff]
     ee6:	7e 20                	jle    f08 <__abi_tag-0x3ff474>
     ee8:	03 8a 01 58 03 f6    	add    ecx,DWORD PTR [rdx-0x9fca7ff]
     eee:	7e 20                	jle    f10 <__abi_tag-0x3ff46c>
     ef0:	03 8a 01 58 03 f6    	add    ecx,DWORD PTR [rdx-0x9fca7ff]
     ef6:	7e 20                	jle    f18 <__abi_tag-0x3ff464>
     ef8:	03 8a 01 58 03 f6    	add    ecx,DWORD PTR [rdx-0x9fca7ff]
     efe:	7e 20                	jle    f20 <__abi_tag-0x3ff45c>
     f00:	03 8a 01 58 03 f6    	add    ecx,DWORD PTR [rdx-0x9fca7ff]
     f06:	7e 20                	jle    f28 <__abi_tag-0x3ff454>
     f08:	03 8a 01 58 03 f6    	add    ecx,DWORD PTR [rdx-0x9fca7ff]
     f0e:	7e 20                	jle    f30 <__abi_tag-0x3ff44c>
     f10:	03 8a 01 58 03 f6    	add    ecx,DWORD PTR [rdx-0x9fca7ff]
     f16:	7e 20                	jle    f38 <__abi_tag-0x3ff444>
     f18:	03 8a 01 58 03 f6    	add    ecx,DWORD PTR [rdx-0x9fca7ff]
     f1e:	7e 20                	jle    f40 <__abi_tag-0x3ff43c>
     f20:	03 8a 01 58 03 f6    	add    ecx,DWORD PTR [rdx-0x9fca7ff]
     f26:	7e 20                	jle    f48 <__abi_tag-0x3ff434>
     f28:	03 8a 01 58 03 f6    	add    ecx,DWORD PTR [rdx-0x9fca7ff]
     f2e:	7e 20                	jle    f50 <__abi_tag-0x3ff42c>
     f30:	03 8a 01 58 05 00    	add    ecx,DWORD PTR [rdx+0x55801]
     f36:	06                   	(bad)  
     f37:	f4                   	hlt    
     f38:	05 03 0a 21 06       	add    eax,0x6210a03
     f3d:	03 f3                	add    esi,ebx
     f3f:	7e 90                	jle    ed1 <__abi_tag-0x3ff4ab>
     f41:	05 05 06 03 9d       	add    eax,0x9d030605
     f46:	01 08                	add    DWORD PTR [rax],ecx
     f48:	58                   	pop    rax
     f49:	05 28 9f 05 38       	add    eax,0x38059f28
     f4e:	06                   	(bad)  
     f4f:	3c 05                	cmp    al,0x5
     f51:	05 4a 05 31 06       	add    eax,0x631054a
     f56:	bb 05 41 06 3c       	mov    ebx,0x3c064105
     f5b:	05 05 4a 05 2e       	add    eax,0x2e054a05
     f60:	06                   	(bad)  
     f61:	bb 05 3e 06 3c       	mov    ebx,0x3c063e05
     f66:	05 05 4a 05 30       	add    eax,0x30054a05
     f6b:	06                   	(bad)  
     f6c:	bb 05 40 06 3c       	mov    ebx,0x3c064005
     f71:	05 05 4a 05 2b       	add    eax,0x2b054a05
     f76:	06                   	(bad)  
     f77:	bb 05 3b 06 3c       	mov    ebx,0x3c063b05
     f7c:	05 05 4a 06 bb       	add    eax,0xbb064a05
     f81:	05 35 03 6a 9e       	add    eax,0x9e6a0335
     f86:	05 03 06 4a 05       	add    eax,0x54a0603
     f8b:	0f 06                	clts   
     f8d:	91                   	xchg   ecx,eax
     f8e:	05 26 06 3c 05       	add    eax,0x53c0626
     f93:	09 3c 05 05 06 31 05 	or     DWORD PTR [rax*1+0x5310605],edi
     f9a:	2e 08 13             	cs or  BYTE PTR [rbx],dl
     f9d:	05 3e 06 3c 05       	add    eax,0x53c063e
     fa2:	03 06                	add    eax,DWORD PTR [rsi]
     fa4:	03 58 66             	add    ebx,DWORD PTR [rax+0x66]
     fa7:	06                   	(bad)  
     fa8:	03 96 7f 2e 03 ea    	add    edx,DWORD PTR [rsi-0x15fcd181]
     fae:	00 02                	add    BYTE PTR [rdx],al
     fb0:	35 01 03 96 7f       	xor    eax,0x7f960301
     fb5:	74 05                	je     fbc <__abi_tag-0x3ff3c0>
     fb7:	05 06 03 92 01       	add    eax,0x1920306
     fbc:	02 60 01             	add    ah,BYTE PTR [rax+0x1]
     fbf:	05 26 59 05 36       	add    eax,0x36055926
     fc4:	06                   	(bad)  
     fc5:	3c 05                	cmp    al,0x5
     fc7:	05 3c 05 0f 06       	add    eax,0x60f053c
     fcc:	bb 05 1f 06 3c       	mov    ebx,0x3c061f05
     fd1:	05 27 3c 05 09       	add    eax,0x9053c27
     fd6:	2e 05 27 06 31 05    	cs add eax,0x5310627
     fdc:	09 06                	or     DWORD PTR [rsi],eax
     fde:	2e 05 27 06 31 05    	cs add eax,0x5310627
     fe4:	09 06                	or     DWORD PTR [rsi],eax
     fe6:	2e 05 07 06 8b 05    	cs add eax,0x58b0607
     fec:	0f bc 05 1f 06 3c 05 	bsf    eax,DWORD PTR [rip+0x53c061f]        # 53c1612 <__TMC_END__+0x4fbc4da>
     ff3:	27                   	(bad)  
     ff4:	3c 05                	cmp    al,0x5
     ff6:	09 2e                	or     DWORD PTR [rsi],ebp
     ff8:	05 07 06 2f 05       	add    eax,0x52f0607
     ffd:	0f bc 05 1f 06 3c 05 	bsf    eax,DWORD PTR [rip+0x53c061f]        # 53c1623 <__TMC_END__+0x4fbc4eb>
    1004:	27                   	(bad)  
    1005:	3c 05                	cmp    al,0x5
    1007:	09 2e                	or     DWORD PTR [rsi],ebp
    1009:	05 07 06 67 06       	add    eax,0x6670607
    100e:	03 e5                	add    esp,ebp
    1010:	7e ba                	jle    fcc <__abi_tag-0x3ff3b0>
    1012:	05 01 06 03 a5       	add    eax,0xa5030601
    1017:	01 58 02             	add    DWORD PTR [rax+0x2],ebx
    101a:	02 00                	add    al,BYTE PTR [rax]
    101c:	01 01                	add    DWORD PTR [rcx],eax
    101e:	f5                   	cmc    
    101f:	01 00                	add    DWORD PTR [rax],eax
    1021:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1024:	00 01                	add    BYTE PTR [rcx],al
    1026:	00 00                	add    BYTE PTR [rax],al
    1028:	01 01                	add    DWORD PTR [rcx],eax
    102a:	01 fb                	add    ebx,edi
    102c:	0e                   	(bad)  
    102d:	0d 00 01 01 01       	or     eax,0x1010100
    1032:	01 00                	add    DWORD PTR [rax],eax
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	01 00                	add    DWORD PTR [rax],eax
    1038:	00 01                	add    BYTE PTR [rcx],al
    103a:	2f                   	(bad)  
    103b:	6d                   	ins    DWORD PTR es:[rdi],dx
    103c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    103d:	74 2f                	je     106e <__abi_tag-0x3ff30e>
    103f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1040:	66 73 2f             	data16 jae 1072 <__abi_tag-0x3ff30a>
    1043:	68 6f 6d 65 73       	push   0x73656d6f
    1048:	2f                   	(bad)  
    1049:	6c                   	ins    BYTE PTR es:[rdi],dx
    104a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    104b:	75 6d                	jne    10ba <__abi_tag-0x3ff2c2>
    104d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    104e:	75 6c                	jne    10bc <__abi_tag-0x3ff2c0>
    1050:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
    1056:	79 2d                	jns    1085 <__abi_tag-0x3ff2f7>
    1058:	77 6f                	ja     10c9 <__abi_tag-0x3ff2b3>
    105a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    105b:	64 70 61             	fs jo  10bf <__abi_tag-0x3ff2bd>
    105e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    1061:	72 00                	jb     1063 <__abi_tag-0x3ff319>
    1063:	2f                   	(bad)  
    1064:	75 73                	jne    10d9 <__abi_tag-0x3ff2a3>
    1066:	72 2f                	jb     1097 <__abi_tag-0x3ff2e5>
    1068:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    106f:	2f                   	(bad)  
    1070:	78 38                	js     10aa <__abi_tag-0x3ff2d2>
    1072:	36 5f                	ss pop rdi
    1074:	36 34 2d             	ss xor al,0x2d
    1077:	6c                   	ins    BYTE PTR es:[rdi],dx
    1078:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
    107f:	75 2f                	jne    10b0 <__abi_tag-0x3ff2cc>
    1081:	62                   	(bad)  
    1082:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
    1089:	72 
    108a:	2f                   	(bad)  
    108b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    1092:	00 2f                	add    BYTE PTR [rdi],ch
    1094:	75 73                	jne    1109 <__abi_tag-0x3ff273>
    1096:	72 2f                	jb     10c7 <__abi_tag-0x3ff2b5>
    1098:	6c                   	ins    BYTE PTR es:[rdi],dx
    1099:	69 62 2f 6c 6c 76 6d 	imul   esp,DWORD PTR [rdx+0x2f],0x6d766c6c
    10a0:	2d 31 32 2f 6c       	sub    eax,0x6c2f3231
    10a5:	69 62 2f 63 6c 61 6e 	imul   esp,DWORD PTR [rdx+0x2f],0x6e616c63
    10ac:	67 2f                	addr32 (bad) 
    10ae:	31 32                	xor    DWORD PTR [rdx],esi
    10b0:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    10b3:	31 2f                	xor    DWORD PTR [rdi],ebp
    10b5:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    10bc:	00 00                	add    BYTE PTR [rax],al
    10be:	73 72                	jae    1132 <__abi_tag-0x3ff24a>
    10c0:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    10c2:	70 61                	jo     1125 <__abi_tag-0x3ff257>
    10c4:	79 6c                	jns    1132 <__abi_tag-0x3ff24a>
    10c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10c7:	61                   	(bad)  
    10c8:	64 2e 63 00          	fs movsxd eax,DWORD PTR fs:[rax]
    10cc:	01 00                	add    DWORD PTR [rax],eax
    10ce:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
    10d2:	65 73 2e             	gs jae 1103 <__abi_tag-0x3ff279>
    10d5:	68 00 02 00 00       	push   0x200
    10da:	73 74                	jae    1150 <__abi_tag-0x3ff22c>
    10dc:	64 69 6e 74 2d 75 69 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6e69752d
    10e3:	6e 
    10e4:	74 6e                	je     1154 <__abi_tag-0x3ff228>
    10e6:	2e 68 00 02 00 00    	cs push 0x200
    10ec:	2e 2f                	cs (bad) 
    10ee:	69 6e 63 2f 66 75 6e 	imul   ebp,DWORD PTR [rsi+0x63],0x6e75662f
    10f5:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    10f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10fa:	73 2e                	jae    112a <__abi_tag-0x3ff252>
    10fc:	68 00 01 00 00       	push   0x100
    1101:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1103:	66 2e 68 00 03       	cs pushw 0x300
    1108:	00 00                	add    BYTE PTR [rax],al
    110a:	2e 2f                	cs (bad) 
    110c:	69 6e 63 2f 77 6f 6f 	imul   ebp,DWORD PTR [rsi+0x63],0x6f6f772f
    1113:	64 79 2e             	fs jns 1144 <__abi_tag-0x3ff238>
    1116:	68 00 01 00 00       	push   0x100
    111b:	73 74                	jae    1191 <__abi_tag-0x3ff1eb>
    111d:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x400
    1124:	04 
    1125:	00 00                	add    BYTE PTR [rax],al
    1127:	00 00                	add    BYTE PTR [rax],al
    1129:	09 02                	or     DWORD PTR [rdx],eax
    112b:	40 21 40 00          	rex and DWORD PTR [rax+0x0],eax
    112f:	00 00                	add    BYTE PTR [rax],al
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	03 1a                	add    ebx,DWORD PTR [rdx]
    1135:	01 05 2f 0a bb 05    	add    DWORD PTR [rip+0x5bb0a2f],eax        # 5bb1b6a <__TMC_END__+0x57aca32>
    113b:	1e                   	(bad)  
    113c:	06                   	(bad)  
    113d:	4a 05 50 06 cb 05    	rex.WX add rax,0x5cb0650
    1143:	49 06                	rex.WB (bad) 
    1145:	4a 05 12 82 05 10    	rex.WX add rax,0x10058212
    114b:	ac                   	lods   al,BYTE PTR ds:[rsi]
    114c:	05 03 06 4c 05       	add    eax,0x54c0603
    1151:	17                   	(bad)  
    1152:	02 3f                	add    bh,BYTE PTR [rdi]
    1154:	14 05                	adc    al,0x5
    1156:	39 06                	cmp    DWORD PTR [rsi],eax
    1158:	4a 05 03 4a 06 84    	rex.WX add rax,0xffffffff84064a03
    115e:	05 14 02 35 13       	add    eax,0x13350214
    1163:	05 3d 4c 05 49       	add    eax,0x49054c3d
    1168:	06                   	(bad)  
    1169:	4a 05 62 3c 05 38    	rex.WX add rax,0x38053c62
    116f:	4a 05 36 4a 05 3a    	rex.WX add rax,0x3a054a36
    1175:	06                   	(bad)  
    1176:	3e 05 37 4c 05 4b    	ds add eax,0x4b054c37
    117c:	3e 05 3b 06 4a 05    	ds add eax,0x54a063b
    1182:	3d 06 3e 05 3b       	cmp    eax,0x3b053e06
    1187:	77 05                	ja     118e <__abi_tag-0x3ff1ee>
    1189:	03 3d 83 05 00 d9    	add    edi,DWORD PTR [rip+0xffffffffd9000583]        # ffffffffd9001712 <__TMC_END__+0xffffffffd8bfc5da>
    118f:	05 38 0a 4b 05       	add    eax,0x54b0a38
    1194:	5b                   	pop    rbx
    1195:	06                   	(bad)  
    1196:	4a 05 40 4a 05 56    	rex.WX add rax,0x56054a40
    119c:	4a 05 28 4a 05 03    	rex.WX add rax,0x3054a28
    11a2:	58                   	pop    rax
    11a3:	05 38 06 d7 05       	add    eax,0x5d70638
    11a8:	5f                   	pop    rdi
    11a9:	06                   	(bad)  
    11aa:	4a 05 40 4a 05 5a    	rex.WX add rax,0x5a054a40
    11b0:	4a 05 28 4a 05 03    	rex.WX add rax,0x3054a28
    11b6:	58                   	pop    rax
    11b7:	05 39 06 d7 05       	add    eax,0x5d70639
    11bc:	5d                   	pop    rbp
    11bd:	06                   	(bad)  
    11be:	4a 05 41 4a 05 58    	rex.WX add rax,0x58054a41
    11c4:	4a 05 29 4a 05 03    	rex.WX add rax,0x3054a29
    11ca:	58                   	pop    rax
    11cb:	05 39 06 d7 05       	add    eax,0x5d70639
    11d0:	61                   	(bad)  
    11d1:	06                   	(bad)  
    11d2:	4a 05 41 4a 05 5c    	rex.WX add rax,0x5c054a41
    11d8:	4a 05 29 4a 05 03    	rex.WX add rax,0x3054a29
    11de:	58                   	pop    rax
    11df:	06                   	(bad)  
    11e0:	d7                   	xlat   BYTE PTR ds:[rbx]
    11e1:	05 10 9f 05 03       	add    eax,0x3059f10
    11e6:	06                   	(bad)  
    11e7:	4a 06                	rex.WX (bad) 
    11e9:	bb 05 10 9f 05       	mov    ebx,0x59f1005
    11ee:	3a 06                	cmp    al,BYTE PTR [rsi]
    11f0:	4a 05 18 4a 05 03    	rex.WX add rax,0x3054a18
    11f6:	4a 06                	rex.WX (bad) 
    11f8:	75 05                	jne    11ff <__abi_tag-0x3ff17d>
    11fa:	10 9f 05 3b 06 4a    	adc    BYTE PTR [rdi+0x4a063b05],bl
    1200:	05 34 4a 05 03       	add    eax,0x3054a34
    1205:	82                   	(bad)  
    1206:	06                   	(bad)  
    1207:	bb 05 10 9f 05       	mov    ebx,0x59f1005
    120c:	1e                   	(bad)  
    120d:	06                   	(bad)  
    120e:	4a 05 03 4a 02 08    	rex.WX add rax,0x8024a03
    1214:	00 01                	add    BYTE PTR [rcx],al
    1216:	01 fe                	add    esi,edi
    1218:	00 00                	add    BYTE PTR [rax],al
    121a:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    121d:	94                   	xchg   esp,eax
    121e:	00 00                	add    BYTE PTR [rax],al
    1220:	00 01                	add    BYTE PTR [rcx],al
    1222:	01 01                	add    DWORD PTR [rcx],eax
    1224:	fb                   	sti    
    1225:	0e                   	(bad)  
    1226:	0d 00 01 01 01       	or     eax,0x1010100
    122b:	01 00                	add    DWORD PTR [rax],eax
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	01 00                	add    DWORD PTR [rax],eax
    1231:	00 01                	add    BYTE PTR [rcx],al
    1233:	2f                   	(bad)  
    1234:	75 73                	jne    12a9 <__abi_tag-0x3ff0d3>
    1236:	72 2f                	jb     1267 <__abi_tag-0x3ff115>
    1238:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    123f:	2f                   	(bad)  
    1240:	78 38                	js     127a <__abi_tag-0x3ff102>
    1242:	36 5f                	ss pop rdi
    1244:	36 34 2d             	ss xor al,0x2d
    1247:	6c                   	ins    BYTE PTR es:[rdi],dx
    1248:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
    124f:	75 2f                	jne    1280 <__abi_tag-0x3ff0fc>
    1251:	62                   	(bad)  
    1252:	69 74 73 00 2f 6d 6e 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x746e6d2f
    1259:	74 
    125a:	2f                   	(bad)  
    125b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    125c:	66 73 2f             	data16 jae 128e <__abi_tag-0x3ff0ee>
    125f:	68 6f 6d 65 73       	push   0x73656d6f
    1264:	2f                   	(bad)  
    1265:	6c                   	ins    BYTE PTR es:[rdi],dx
    1266:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1267:	75 6d                	jne    12d6 <__abi_tag-0x3ff0a6>
    1269:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    126a:	75 6c                	jne    12d8 <__abi_tag-0x3ff0a4>
    126c:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
    1272:	79 2d                	jns    12a1 <__abi_tag-0x3ff0db>
    1274:	77 6f                	ja     12e5 <__abi_tag-0x3ff097>
    1276:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1277:	64 70 61             	fs jo  12db <__abi_tag-0x3ff0a1>
    127a:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    127d:	72 00                	jb     127f <__abi_tag-0x3ff0fd>
    127f:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
    1283:	65 73 2e             	gs jae 12b4 <__abi_tag-0x3ff0c8>
    1286:	68 00 01 00 00       	push   0x100
    128b:	73 74                	jae    1301 <__abi_tag-0x3ff07b>
    128d:	64 69 6e 74 2d 75 69 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6e69752d
    1294:	6e 
    1295:	74 6e                	je     1305 <__abi_tag-0x3ff077>
    1297:	2e 68 00 01 00 00    	cs push 0x100
    129d:	73 72                	jae    1311 <__abi_tag-0x3ff06b>
    129f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    12a1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    12a3:	64 69 61 6e 5f 68 61 	imul   esp,DWORD PTR fs:[rcx+0x6e],0x6e61685f
    12aa:	6e 
    12ab:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    12ad:	65 2e 63 00          	gs movsxd eax,DWORD PTR gs:[rax]
    12b1:	02 00                	add    al,BYTE PTR [rax]
    12b3:	00 00                	add    BYTE PTR [rax],al
    12b5:	04 03                	add    al,0x3
    12b7:	00 09                	add    BYTE PTR [rcx],cl
    12b9:	02 50 23             	add    dl,BYTE PTR [rax+0x23]
    12bc:	40 00 00             	rex add BYTE PTR [rax],al
    12bf:	00 00                	add    BYTE PTR [rax],al
    12c1:	00 18                	add    BYTE PTR [rax],bl
    12c3:	05 0e 0a 2f 05       	add    eax,0x52f0a0e
    12c8:	07                   	(bad)  
    12c9:	06                   	(bad)  
    12ca:	90                   	nop
    12cb:	05 00 03 78 4a       	add    eax,0x4a780300
    12d0:	05 01 06 03 0d       	add    eax,0xd030601
    12d5:	3c 05                	cmp    al,0x5
    12d7:	00 d8                	add    al,bl
    12d9:	05 07 0a 13 05       	add    eax,0x5130a07
    12de:	0e                   	(bad)  
    12df:	06                   	(bad)  
    12e0:	4a 05 07 4a 05 00    	rex.WX add rax,0x54a07
    12e6:	03 70 4a             	add    esi,DWORD PTR [rax+0x4a]
    12e9:	05 01 06 03 15       	add    eax,0x15030601
    12ee:	3c 05                	cmp    al,0x5
    12f0:	00 22                	add    BYTE PTR [rdx],ah
    12f2:	05 07 0a 13 05       	add    eax,0x5130a07
    12f7:	0e                   	(bad)  
    12f8:	06                   	(bad)  
    12f9:	4a 05 07 4a 05 00    	rex.WX add rax,0x54a07
    12ff:	03 68 4a             	add    ebp,DWORD PTR [rax+0x4a]
    1302:	05 01 06 03 1d       	add    eax,0x1d030601
    1307:	2e 05 00 30 0a 03    	cs add eax,0x30a3000
    130d:	61                   	(bad)  
    130e:	01 05 01 03 25 3c    	add    DWORD PTR [rip+0x3c250301],eax        # 3c251615 <__TMC_END__+0x3be4c4dd>
    1314:	02 01                	add    al,BYTE PTR [rcx]
    1316:	00 01                	add    BYTE PTR [rcx],al
    1318:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	55                   	push   rbp
   1:	62 75 6e 74 75       	(bad)
   6:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
   9:	61                   	(bad)  
   a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   b:	67 20 76 65          	and    BYTE PTR [esi+0x65],dh
   f:	72 73                	jb     84 <__abi_tag-0x4002f8>
  11:	69 6f 6e 20 31 32 2e 	imul   ebp,DWORD PTR [rdi+0x6e],0x2e323120
  18:	30 2e                	xor    BYTE PTR [rsi],ch
  1a:	31 2d 31 39 75 62    	xor    DWORD PTR [rip+0x62753931],ebp        # 62753951 <__TMC_END__+0x6234e819>
  20:	75 6e                	jne    90 <__abi_tag-0x4002ec>
  22:	74 75                	je     99 <__abi_tag-0x4002e3>
  24:	33 00                	xor    eax,DWORD PTR [rax]
  26:	2f                   	(bad)  
  27:	6d                   	ins    DWORD PTR es:[rdi],dx
  28:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  29:	74 2f                	je     5a <__abi_tag-0x400322>
  2b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  2c:	66 73 2f             	data16 jae 5e <__abi_tag-0x40031e>
  2f:	68 6f 6d 65 73       	push   0x73656d6f
  34:	2f                   	(bad)  
  35:	6c                   	ins    BYTE PTR es:[rdi],dx
  36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  37:	75 6d                	jne    a6 <__abi_tag-0x4002d6>
  39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  3a:	75 6c                	jne    a8 <__abi_tag-0x4002d4>
  3c:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
  42:	79 2d                	jns    71 <__abi_tag-0x40030b>
  44:	77 6f                	ja     b5 <__abi_tag-0x4002c7>
  46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  47:	64 70 61             	fs jo  ab <__abi_tag-0x4002d1>
  4a:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
  4d:	72 2f                	jb     7e <__abi_tag-0x4002fe>
  4f:	73 72                	jae    c3 <__abi_tag-0x4002b9>
  51:	63 2f                	movsxd ebp,DWORD PTR [rdi]
  53:	6d                   	ins    DWORD PTR es:[rdi],dx
  54:	61                   	(bad)  
  55:	69 6e 2e 63 00 2f 6d 	imul   ebp,DWORD PTR [rsi+0x2e],0x6d2f0063
  5c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  5d:	74 2f                	je     8e <__abi_tag-0x4002ee>
  5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  60:	66 73 2f             	data16 jae 92 <__abi_tag-0x4002ea>
  63:	68 6f 6d 65 73       	push   0x73656d6f
  68:	2f                   	(bad)  
  69:	6c                   	ins    BYTE PTR es:[rdi],dx
  6a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  6b:	75 6d                	jne    da <__abi_tag-0x4002a2>
  6d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  6e:	75 6c                	jne    dc <__abi_tag-0x4002a0>
  70:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
  76:	79 2d                	jns    a5 <__abi_tag-0x4002d7>
  78:	77 6f                	ja     e9 <__abi_tag-0x400293>
  7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  7b:	64 70 61             	fs jo  df <__abi_tag-0x40029d>
  7e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
  81:	72 2f                	jb     b2 <__abi_tag-0x4002ca>
  83:	63 6d 61             	movsxd ebp,DWORD PTR [rbp+0x61]
  86:	6b 65 2d 62          	imul   esp,DWORD PTR [rbp+0x2d],0x62
  8a:	75 69                	jne    f5 <__abi_tag-0x400287>
  8c:	6c                   	ins    BYTE PTR es:[rdi],dx
  8d:	64 2d 72 65 6c 65    	fs sub eax,0x656c6572
  93:	61                   	(bad)  
  94:	73 65                	jae    fb <__abi_tag-0x400281>
  96:	00 65 5f             	add    BYTE PTR [rbp+0x5f],ah
  99:	69 64 65 6e 74 00 75 	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x6e750074
  a0:	6e 
  a1:	73 69                	jae    10c <__abi_tag-0x400270>
  a3:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  a5:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
  aa:	61                   	(bad)  
  ab:	72 00                	jb     ad <__abi_tag-0x4002cf>
  ad:	5f                   	pop    rdi
  ae:	5f                   	pop    rdi
  af:	41 52                	push   r10
  b1:	52                   	push   rdx
  b2:	41 59                	pop    r9
  b4:	5f                   	pop    rdi
  b5:	53                   	push   rbx
  b6:	49 5a                	rex.WB pop r10
  b8:	45 5f                	rex.RB pop r15
  ba:	54                   	push   rsp
  bb:	59                   	pop    rcx
  bc:	50                   	push   rax
  bd:	45 5f                	rex.RB pop r15
  bf:	5f                   	pop    rdi
  c0:	00 65 5f             	add    BYTE PTR [rbp+0x5f],ah
  c3:	74 79                	je     13e <__abi_tag-0x40023e>
  c5:	70 65                	jo     12c <__abi_tag-0x400250>
  c7:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
  ca:	73 69                	jae    135 <__abi_tag-0x400247>
  cc:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  ce:	65 64 20 73 68       	gs and BYTE PTR fs:[rbx+0x68],dh
  d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  d4:	72 74                	jb     14a <__abi_tag-0x400232>
  d6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  d9:	75 69                	jne    144 <__abi_tag-0x400238>
  db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  dc:	74 31                	je     10f <__abi_tag-0x40026d>
  de:	36 5f                	ss pop rdi
  e0:	74 00                	je     e2 <__abi_tag-0x40029a>
  e2:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
  e4:	66 36 34 5f          	data16 ss xor al,0x5f
  e8:	48 61                	rex.W (bad) 
  ea:	6c                   	ins    BYTE PTR es:[rdi],dx
  eb:	66 00 65 5f          	data16 add BYTE PTR [rbp+0x5f],ah
  ef:	6d                   	ins    DWORD PTR es:[rdi],dx
  f0:	61                   	(bad)  
  f1:	63 68 69             	movsxd ebp,DWORD PTR [rax+0x69]
  f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  f5:	65 00 65 5f          	add    BYTE PTR gs:[rbp+0x5f],ah
  f9:	76 65                	jbe    160 <__abi_tag-0x40021c>
  fb:	72 73                	jb     170 <__abi_tag-0x40020c>
  fd:	69 6f 6e 00 5f 5f 75 	imul   ebp,DWORD PTR [rdi+0x6e],0x755f5f00
 104:	69 6e 74 33 32 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3233
 10b:	00 45 6c             	add    BYTE PTR [rbp+0x6c],al
 10e:	66 36 34 5f          	data16 ss xor al,0x5f
 112:	57                   	push   rdi
 113:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 114:	72 64                	jb     17a <__abi_tag-0x400202>
 116:	00 65 5f             	add    BYTE PTR [rbp+0x5f],ah
 119:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 11b:	74 72                	je     18f <__abi_tag-0x4001ed>
 11d:	79 00                	jns    11f <__abi_tag-0x40025d>
 11f:	6c                   	ins    BYTE PTR es:[rdi],dx
 120:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 121:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 122:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
 126:	73 69                	jae    191 <__abi_tag-0x4001eb>
 128:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 12a:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
 12f:	74 00                	je     131 <__abi_tag-0x40024b>
 131:	5f                   	pop    rdi
 132:	5f                   	pop    rdi
 133:	75 69                	jne    19e <__abi_tag-0x4001de>
 135:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 136:	74 36                	je     16e <__abi_tag-0x40020e>
 138:	34 5f                	xor    al,0x5f
 13a:	74 00                	je     13c <__abi_tag-0x400240>
 13c:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
 13e:	66 36 34 5f          	data16 ss xor al,0x5f
 142:	41                   	rex.B
 143:	64 64 72 00          	fs fs jb 147 <__abi_tag-0x400235>
 147:	65 5f                	gs pop rdi
 149:	70 68                	jo     1b3 <__abi_tag-0x4001c9>
 14b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 14c:	66 66 00 45 6c       	data16 data16 add BYTE PTR [rbp+0x6c],al
 151:	66 36 34 5f          	data16 ss xor al,0x5f
 155:	4f                   	rex.WRXB
 156:	66 66 00 65 5f       	data16 data16 add BYTE PTR [rbp+0x5f],ah
 15b:	73 68                	jae    1c5 <__abi_tag-0x4001b7>
 15d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 15e:	66 66 00 65 5f       	data16 data16 add BYTE PTR [rbp+0x5f],ah
 163:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
 165:	61                   	(bad)  
 166:	67 73 00             	addr32 jae 169 <__abi_tag-0x400213>
 169:	65 5f                	gs pop rdi
 16b:	65 68 73 69 7a 65    	gs push 0x657a6973
 171:	00 65 5f             	add    BYTE PTR [rbp+0x5f],ah
 174:	70 68                	jo     1de <__abi_tag-0x40019e>
 176:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 178:	74 73                	je     1ed <__abi_tag-0x40018f>
 17a:	69 7a 65 00 65 5f 70 	imul   edi,DWORD PTR [rdx+0x65],0x705f6500
 181:	68 6e 75 6d 00       	push   0x6d756e
 186:	65 5f                	gs pop rdi
 188:	73 68                	jae    1f2 <__abi_tag-0x40018a>
 18a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 18c:	74 73                	je     201 <__abi_tag-0x40017b>
 18e:	69 7a 65 00 65 5f 73 	imul   edi,DWORD PTR [rdx+0x65],0x735f6500
 195:	68 6e 75 6d 00       	push   0x6d756e
 19a:	65 5f                	gs pop rdi
 19c:	73 68                	jae    206 <__abi_tag-0x400176>
 19e:	73 74                	jae    214 <__abi_tag-0x400168>
 1a0:	72 6e                	jb     210 <__abi_tag-0x40016c>
 1a2:	64 78 00             	fs js  1a5 <__abi_tag-0x4001d7>
 1a5:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
 1a7:	66 36 34 5f          	data16 ss xor al,0x5f
 1ab:	45 68 64 72 00 6f    	rex.RB push 0x6f007264
 1b1:	70 65                	jo     218 <__abi_tag-0x400164>
 1b3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1b4:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 1b7:	61                   	(bad)  
 1b8:	64 5f                	fs pop rdi
 1ba:	66 69 6c 65 00 63 6c 	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6c63
 1c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1c2:	73 65                	jae    229 <__abi_tag-0x400153>
 1c4:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
 1c7:	69 74 00 72 61 77 5f 	imul   esi,DWORD PTR [rax+rax*1+0x72],0x645f7761
 1ce:	64 
 1cf:	61                   	(bad)  
 1d0:	74 61                	je     233 <__abi_tag-0x400149>
 1d2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 1d5:	75 69                	jne    240 <__abi_tag-0x40013c>
 1d7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1d8:	74 38                	je     212 <__abi_tag-0x40016a>
 1da:	5f                   	pop    rdi
 1db:	74 00                	je     1dd <__abi_tag-0x40019f>
 1dd:	64 61                	fs (bad) 
 1df:	74 61                	je     242 <__abi_tag-0x40013a>
 1e1:	5f                   	pop    rdi
 1e2:	6c                   	ins    BYTE PTR es:[rdi],dx
 1e3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 1e5:	00 6c 65 6e          	add    BYTE PTR [rbp+riz*2+0x6e],ch
 1e9:	5f                   	pop    rdi
 1ea:	70 61                	jo     24d <__abi_tag-0x40012f>
 1ec:	79 6c                	jns    25a <__abi_tag-0x400122>
 1ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1ef:	61                   	(bad)  
 1f0:	64 00 6c 65 6e       	add    BYTE PTR fs:[rbp+riz*2+0x6e],ch
 1f5:	5f                   	pop    rdi
 1f6:	6b 65 79 00          	imul   esp,DWORD PTR [rbp+0x79],0x0
 1fa:	70 72                	jo     26e <__abi_tag-0x40010e>
 1fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1fd:	67 72 61             	addr32 jb 261 <__abi_tag-0x40011b>
 200:	6d                   	ins    DWORD PTR es:[rdi],dx
 201:	5f                   	pop    rdi
 202:	68 65 61 64 65       	push   0x65646165
 207:	72 00                	jb     209 <__abi_tag-0x400173>
 209:	70 5f                	jo     26a <__abi_tag-0x400112>
 20b:	74 79                	je     286 <__abi_tag-0x4000f6>
 20d:	70 65                	jo     274 <__abi_tag-0x400108>
 20f:	00 70 5f             	add    BYTE PTR [rax+0x5f],dh
 212:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
 214:	61                   	(bad)  
 215:	67 73 00             	addr32 jae 218 <__abi_tag-0x400164>
 218:	70 5f                	jo     279 <__abi_tag-0x400103>
 21a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 21b:	66 66 73 65          	data16 data16 jae 284 <__abi_tag-0x4000f8>
 21f:	74 00                	je     221 <__abi_tag-0x40015b>
 221:	70 5f                	jo     282 <__abi_tag-0x4000fa>
 223:	76 61                	jbe    286 <__abi_tag-0x4000f6>
 225:	64 64 72 00          	fs fs jb 229 <__abi_tag-0x400153>
 229:	70 5f                	jo     28a <__abi_tag-0x4000f2>
 22b:	70 61                	jo     28e <__abi_tag-0x4000ee>
 22d:	64 64 72 00          	fs fs jb 231 <__abi_tag-0x40014b>
 231:	70 5f                	jo     292 <__abi_tag-0x4000ea>
 233:	66 69 6c 65 73 7a 00 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7a
 23a:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
 23c:	66 36 34 5f          	data16 ss xor al,0x5f
 240:	58                   	pop    rax
 241:	77 6f                	ja     2b2 <__abi_tag-0x4000ca>
 243:	72 64                	jb     2a9 <__abi_tag-0x4000d3>
 245:	00 70 5f             	add    BYTE PTR [rax+0x5f],dh
 248:	6d                   	ins    DWORD PTR es:[rdi],dx
 249:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 24b:	73 7a                	jae    2c7 <__abi_tag-0x4000b5>
 24d:	00 70 5f             	add    BYTE PTR [rax+0x5f],dh
 250:	61                   	(bad)  
 251:	6c                   	ins    BYTE PTR es:[rdi],dx
 252:	69 67 6e 00 45 6c 66 	imul   esp,DWORD PTR [rdi+0x6e],0x666c4500
 259:	36 34 5f             	ss xor al,0x5f
 25c:	50                   	push   rax
 25d:	68 64 72 00 6e       	push   0x6e007264
 262:	65 78 74             	gs js  2d9 <__abi_tag-0x4000a3>
 265:	00 70 68             	add    BYTE PTR [rax+0x68],dh
 268:	64 72 5f             	fs jb  2ca <__abi_tag-0x4000b2>
 26b:	73 00                	jae    26d <__abi_tag-0x40010f>
 26d:	70 68                	jo     2d7 <__abi_tag-0x4000a5>
 26f:	64 72 5f             	fs jb  2d1 <__abi_tag-0x4000ab>
 272:	6c                   	ins    BYTE PTR es:[rdi],dx
 273:	69 73 74 5f 74 00 74 	imul   esi,DWORD PTR [rbx+0x74],0x7400745f
 27a:	5f                   	pop    rdi
 27b:	62                   	(bad)  
 27c:	69 6e 00 61 76 00 70 	imul   ebp,DWORD PTR [rsi+0x0],0x70007661
 283:	61                   	(bad)  
 284:	72 73                	jb     2f9 <__abi_tag-0x400083>
 286:	65 5f                	gs pop rdi
 288:	70 72                	jo     2fc <__abi_tag-0x400080>
 28a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 28b:	67 72 61             	addr32 jb 2ef <__abi_tag-0x40008d>
 28e:	6d                   	ins    DWORD PTR es:[rdi],dx
 28f:	5f                   	pop    rdi
 290:	68 65 61 64 65       	push   0x65646165
 295:	72 73                	jb     30a <__abi_tag-0x400072>
 297:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 29a:	74 5f                	je     2fb <__abi_tag-0x400081>
 29c:	73 65                	jae    303 <__abi_tag-0x400079>
 29e:	67 6d                	ins    DWORD PTR es:[edi],dx
 2a0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 2a2:	74 00                	je     2a4 <__abi_tag-0x4000d8>
 2a4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 2a6:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
 2a9:	70 74                	jo     31f <__abi_tag-0x40005d>
 2ab:	69 6f 6e 00 63 72 61 	imul   ebp,DWORD PTR [rdi+0x6e],0x61726300
 2b2:	66 74 5f             	data16 je 314 <__abi_tag-0x400068>
 2b5:	70 61                	jo     318 <__abi_tag-0x400064>
 2b7:	79 6c                	jns    325 <__abi_tag-0x400057>
 2b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2ba:	61                   	(bad)  
 2bb:	64 00 66 69          	add    BYTE PTR fs:[rsi+0x69],ah
 2bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 2c0:	64 5f                	fs pop rdi
 2c2:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
 2c5:	65 5f                	gs pop rdi
 2c7:	63 61 76             	movsxd esp,DWORD PTR [rcx+0x76]
 2ca:	65 00 73 61          	add    BYTE PTR gs:[rbx+0x61],dh
 2ce:	76 65                	jbe    335 <__abi_tag-0x400047>
 2d0:	5f                   	pop    rdi
 2d1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 2d2:	65 77 5f             	gs ja  334 <__abi_tag-0x400048>
 2d5:	66 69 6c 65 00 63 68 	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6863
 2dc:	65 63 6b 5f          	movsxd ebp,DWORD PTR gs:[rbx+0x5f]
 2e0:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 2e2:	66 5f                	pop    di
 2e4:	68 65 61 64 65       	push   0x65646165
 2e9:	72 00                	jb     2eb <__abi_tag-0x400091>
 2eb:	6d                   	ins    DWORD PTR es:[rdi],dx
 2ec:	61                   	(bad)  
 2ed:	69 6e 00 65 6c 66 36 	imul   ebp,DWORD PTR [rsi+0x0],0x36666c65
 2f4:	34 45                	xor    al,0x45
 2f6:	68 64 72 00 61       	push   0x61007264
 2fb:	63 00                	movsxd eax,DWORD PTR [rax]
 2fd:	2f                   	(bad)  
 2fe:	6d                   	ins    DWORD PTR es:[rdi],dx
 2ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 300:	74 2f                	je     331 <__abi_tag-0x40004b>
 302:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 303:	66 73 2f             	data16 jae 335 <__abi_tag-0x400047>
 306:	68 6f 6d 65 73       	push   0x73656d6f
 30b:	2f                   	(bad)  
 30c:	6c                   	ins    BYTE PTR es:[rdi],dx
 30d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 30e:	75 6d                	jne    37d <__abi_tag-0x3fffff>
 310:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 311:	75 6c                	jne    37f <__abi_tag-0x3ffffd>
 313:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
 319:	79 2d                	jns    348 <__abi_tag-0x400034>
 31b:	77 6f                	ja     38c <__abi_tag-0x3ffff0>
 31d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 31e:	64 70 61             	fs jo  382 <__abi_tag-0x3ffffa>
 321:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 324:	72 2f                	jb     355 <__abi_tag-0x400027>
 326:	73 72                	jae    39a <__abi_tag-0x3fffe2>
 328:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 32a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 32c:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
 32f:	70 74                	jo     3a5 <__abi_tag-0x3fffd7>
 331:	69 6f 6e 2e 63 00 78 	imul   ebp,DWORD PTR [rdi+0x6e],0x7800632e
 338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 339:	72 5f                	jb     39a <__abi_tag-0x3fffe2>
 33b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 33d:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
 340:	70 74                	jo     3b6 <__abi_tag-0x3fffc6>
 342:	00 69 00             	add    BYTE PTR [rcx+0x0],ch
 345:	67 65 74 5f          	addr32 gs je 3a8 <__abi_tag-0x3fffd4>
 349:	6b 65 79 00          	imul   esp,DWORD PTR [rbp+0x79],0x0
 34d:	64 70 72             	fs jo  3c2 <__abi_tag-0x3fffba>
 350:	69 6e 74 66 00 68 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65680066
 357:	78 64                	js     3bd <__abi_tag-0x3fffbf>
 359:	75 6d                	jne    3c8 <__abi_tag-0x3fffb4>
 35b:	70 00                	jo     35d <__abi_tag-0x40001f>
 35d:	74 65                	je     3c4 <__abi_tag-0x3fffb8>
 35f:	78 74                	js     3d5 <__abi_tag-0x3fffa7>
 361:	5f                   	pop    rdi
 362:	73 65                	jae    3c9 <__abi_tag-0x3fffb3>
 364:	67 6d                	ins    DWORD PTR es:[edi],dx
 366:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 368:	74 00                	je     36a <__abi_tag-0x400012>
 36a:	2f                   	(bad)  
 36b:	6d                   	ins    DWORD PTR es:[rdi],dx
 36c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 36d:	74 2f                	je     39e <__abi_tag-0x3fffde>
 36f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 370:	66 73 2f             	data16 jae 3a2 <__abi_tag-0x3fffda>
 373:	68 6f 6d 65 73       	push   0x73656d6f
 378:	2f                   	(bad)  
 379:	6c                   	ins    BYTE PTR es:[rdi],dx
 37a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 37b:	75 6d                	jne    3ea <__abi_tag-0x3fff92>
 37d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 37e:	75 6c                	jne    3ec <__abi_tag-0x3fff90>
 380:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
 386:	79 2d                	jns    3b5 <__abi_tag-0x3fffc7>
 388:	77 6f                	ja     3f9 <__abi_tag-0x3fff83>
 38a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 38b:	64 70 61             	fs jo  3ef <__abi_tag-0x3fff8d>
 38e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 391:	72 2f                	jb     3c2 <__abi_tag-0x3fffba>
 393:	73 72                	jae    407 <__abi_tag-0x3fff75>
 395:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 397:	66 69 6e 64 5f 63    	imul   bp,WORD PTR [rsi+0x64],0x635f
 39d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 39e:	64 65 5f             	fs gs pop rdi
 3a1:	63 61 76             	movsxd esp,DWORD PTR [rcx+0x76]
 3a4:	65 2e 63 00          	gs movsxd eax,DWORD PTR gs:[rax]
 3a8:	70 65                	jo     40f <__abi_tag-0x3fff6d>
 3aa:	72 72                	jb     41e <__abi_tag-0x3fff5e>
 3ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3ad:	72 00                	jb     3af <__abi_tag-0x3fffcd>
 3af:	63 61 76             	movsxd esp,DWORD PTR [rcx+0x76]
 3b2:	65 5f                	gs pop rdi
 3b4:	74 6f                	je     425 <__abi_tag-0x3fff57>
 3b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3b7:	5f                   	pop    rdi
 3b8:	73 6d                	jae    427 <__abi_tag-0x3fff55>
 3ba:	61                   	(bad)  
 3bb:	6c                   	ins    BYTE PTR es:[rdi],dx
 3bc:	6c                   	ins    BYTE PTR es:[rdi],dx
 3bd:	00 63 61             	add    BYTE PTR [rbx+0x61],ah
 3c0:	76 65                	jbe    427 <__abi_tag-0x3fff55>
 3c2:	5f                   	pop    rdi
 3c3:	62 65 67 69 6e       	(bad)
 3c8:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
 3cb:	67 5f                	addr32 pop rdi
 3cd:	68 00 72 65 73       	push   0x73657200
 3d2:	69 7a 65 5f 66 69 6c 	imul   edi,DWORD PTR [rdx+0x65],0x6c69665f
 3d9:	65 00 72 65          	add    BYTE PTR gs:[rdx+0x65],dh
 3dd:	73 69                	jae    448 <__abi_tag-0x3fff34>
 3df:	7a 65                	jp     446 <__abi_tag-0x3fff36>
 3e1:	5f                   	pop    rdi
 3e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3e3:	65 65 64 65 64 00 74 	gs gs fs gs add BYTE PTR fs:[rbp+rbp*2+0x70],dh
 3ea:	6d 70 
 3ec:	00 74 78 74          	add    BYTE PTR [rax+rdi*2+0x74],dh
 3f0:	5f                   	pop    rdi
 3f1:	73 65                	jae    458 <__abi_tag-0x3fff24>
 3f3:	67 6d                	ins    DWORD PTR es:[edi],dx
 3f5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 3f7:	74 5f                	je     458 <__abi_tag-0x3fff24>
 3f9:	68 00 2f 6d 6e       	push   0x6e6d2f00
 3fe:	74 2f                	je     42f <__abi_tag-0x3fff4d>
 400:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 401:	66 73 2f             	data16 jae 433 <__abi_tag-0x3fff49>
 404:	68 6f 6d 65 73       	push   0x73656d6f
 409:	2f                   	(bad)  
 40a:	6c                   	ins    BYTE PTR es:[rdi],dx
 40b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 40c:	75 6d                	jne    47b <__abi_tag-0x3fff01>
 40e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 40f:	75 6c                	jne    47d <__abi_tag-0x3ffeff>
 411:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
 417:	79 2d                	jns    446 <__abi_tag-0x3fff36>
 419:	77 6f                	ja     48a <__abi_tag-0x3ffef2>
 41b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 41c:	64 70 61             	fs jo  480 <__abi_tag-0x3ffefc>
 41f:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 422:	72 2f                	jb     453 <__abi_tag-0x3fff29>
 424:	73 72                	jae    498 <__abi_tag-0x3ffee4>
 426:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 428:	73 65                	jae    48f <__abi_tag-0x3ffeed>
 42a:	67 6d                	ins    DWORD PTR es:[edi],dx
 42c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 42e:	74 2e                	je     45e <__abi_tag-0x3fff1e>
 430:	63 00                	movsxd eax,DWORD PTR [rax]
 432:	70 75                	jo     4a9 <__abi_tag-0x3ffed3>
 434:	73 68                	jae    49e <__abi_tag-0x3ffede>
 436:	5f                   	pop    rdi
 437:	62 61                	(bad)  
 439:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 43c:	70 68                	jo     4a6 <__abi_tag-0x3ffed6>
 43e:	64 72 73             	fs jb  4b4 <__abi_tag-0x3ffec8>
 441:	00 68 65             	add    BYTE PTR [rax+0x65],ch
 444:	61                   	(bad)  
 445:	64 00 70 68          	add    BYTE PTR fs:[rax+0x68],dh
 449:	64 72 00             	fs jb  44c <__abi_tag-0x3fff30>
 44c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 44d:	65 77 00             	gs ja  450 <__abi_tag-0x3fff2c>
 450:	69 73 5f 74 65 78 74 	imul   esi,DWORD PTR [rbx+0x5f],0x74786574
 457:	5f                   	pop    rdi
 458:	73 65                	jae    4bf <__abi_tag-0x3ffebd>
 45a:	67 6d                	ins    DWORD PTR es:[edi],dx
 45c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 45e:	74 5f                	je     4bf <__abi_tag-0x3ffebd>
 460:	36 34 00             	ss xor al,0x0
 463:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
 466:	72 5f                	jb     4c7 <__abi_tag-0x3ffeb5>
 468:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 469:	66 66 73 65          	data16 data16 jae 4d2 <__abi_tag-0x3ffeaa>
 46d:	74 00                	je     46f <__abi_tag-0x3fff0d>
 46f:	69 64 78 00 63 61 6c 	imul   esp,DWORD PTR [rax+rdi*2+0x0],0x6c6c6163
 476:	6c 
 477:	62 61                	(bad)  
 479:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
 47c:	2f                   	(bad)  
 47d:	6d                   	ins    DWORD PTR es:[rdi],dx
 47e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 47f:	74 2f                	je     4b0 <__abi_tag-0x3ffecc>
 481:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 482:	66 73 2f             	data16 jae 4b4 <__abi_tag-0x3ffec8>
 485:	68 6f 6d 65 73       	push   0x73656d6f
 48a:	2f                   	(bad)  
 48b:	6c                   	ins    BYTE PTR es:[rdi],dx
 48c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 48d:	75 6d                	jne    4fc <__abi_tag-0x3ffe80>
 48f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 490:	75 6c                	jne    4fe <__abi_tag-0x3ffe7e>
 492:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
 498:	79 2d                	jns    4c7 <__abi_tag-0x3ffeb5>
 49a:	77 6f                	ja     50b <__abi_tag-0x3ffe71>
 49c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 49d:	64 70 61             	fs jo  501 <__abi_tag-0x3ffe7b>
 4a0:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 4a3:	72 2f                	jb     4d4 <__abi_tag-0x3ffea8>
 4a5:	73 72                	jae    519 <__abi_tag-0x3ffe63>
 4a7:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 4a9:	66 69 6c 65 5f 69 6f 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6f69
 4b0:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
 4b3:	77 72                	ja     527 <__abi_tag-0x3ffe55>
 4b5:	69 74 65 00 6c 6f 6e 	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x676e6f6c
 4bc:	67 
 4bd:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
 4c0:	74 00                	je     4c2 <__abi_tag-0x3ffeba>
 4c2:	72 65                	jb     529 <__abi_tag-0x3ffe53>
 4c4:	61                   	(bad)  
 4c5:	64 00 70 74          	add    BYTE PTR fs:[rax+0x74],dh
 4c9:	72 00                	jb     4cb <__abi_tag-0x3ffeb1>
 4cb:	66 64 00 62 75       	data16 add BYTE PTR fs:[rdx+0x75],ah
 4d0:	66 66 00 72 65       	data16 data16 add BYTE PTR [rdx+0x65],dh
 4d5:	74 76                	je     54d <__abi_tag-0x3ffe2f>
 4d7:	61                   	(bad)  
 4d8:	6c                   	ins    BYTE PTR es:[rdi],dx
 4d9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 4dc:	73 73                	jae    551 <__abi_tag-0x3ffe2b>
 4de:	69 7a 65 5f 74 00 6e 	imul   edi,DWORD PTR [rdx+0x65],0x6e00745f
 4e5:	65 77 5f             	gs ja  547 <__abi_tag-0x3ffe35>
 4e8:	72 65                	jb     54f <__abi_tag-0x3ffe2d>
 4ea:	73 75                	jae    561 <__abi_tag-0x3ffe1b>
 4ec:	6c                   	ins    BYTE PTR es:[rdi],dx
 4ed:	74 00                	je     4ef <__abi_tag-0x3ffe8d>
 4ef:	2f                   	(bad)  
 4f0:	6d                   	ins    DWORD PTR es:[rdi],dx
 4f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4f2:	74 2f                	je     523 <__abi_tag-0x3ffe59>
 4f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4f5:	66 73 2f             	data16 jae 527 <__abi_tag-0x3ffe55>
 4f8:	68 6f 6d 65 73       	push   0x73656d6f
 4fd:	2f                   	(bad)  
 4fe:	6c                   	ins    BYTE PTR es:[rdi],dx
 4ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 500:	75 6d                	jne    56f <__abi_tag-0x3ffe0d>
 502:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 503:	75 6c                	jne    571 <__abi_tag-0x3ffe0b>
 505:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
 50b:	79 2d                	jns    53a <__abi_tag-0x3ffe42>
 50d:	77 6f                	ja     57e <__abi_tag-0x3ffdfe>
 50f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 510:	64 70 61             	fs jo  574 <__abi_tag-0x3ffe08>
 513:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 516:	72 2f                	jb     547 <__abi_tag-0x3ffe35>
 518:	73 72                	jae    58c <__abi_tag-0x3ffdf0>
 51a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 51c:	64 65 62 75 67 5f 75 	(bad)
 523:	74 69                	je     58e <__abi_tag-0x3ffdee>
 525:	6c                   	ins    BYTE PTR es:[rdi],dx
 526:	73 2e                	jae    556 <__abi_tag-0x3ffe26>
 528:	63 00                	movsxd eax,DWORD PTR [rax]
 52a:	74 79                	je     5a5 <__abi_tag-0x3ffdd7>
 52c:	70 65                	jo     593 <__abi_tag-0x3ffde9>
 52e:	5f                   	pop    rdi
 52f:	70 72                	jo     5a3 <__abi_tag-0x3ffdd9>
 531:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 532:	67 72 61             	addr32 jb 596 <__abi_tag-0x3ffde6>
 535:	6d                   	ins    DWORD PTR es:[rdi],dx
 536:	5f                   	pop    rdi
 537:	74 6f                	je     5a8 <__abi_tag-0x3ffdd4>
 539:	5f                   	pop    rdi
 53a:	73 74                	jae    5b0 <__abi_tag-0x3ffdcc>
 53c:	72 00                	jb     53e <__abi_tag-0x3ffe3e>
 53e:	61                   	(bad)  
 53f:	73 63                	jae    5a4 <__abi_tag-0x3ffdd8>
 541:	69 69 64 75 6d 70 00 	imul   ebp,DWORD PTR [rcx+0x64],0x706d75
 548:	70 72                	jo     5bc <__abi_tag-0x3ffdc0>
 54a:	69 6e 74 5f 65 6c 66 	imul   ebp,DWORD PTR [rsi+0x74],0x666c655f
 551:	5f                   	pop    rdi
 552:	68 65 61 64 65       	push   0x65646165
 557:	72 00                	jb     559 <__abi_tag-0x3ffe23>
 559:	68 61 6e 67 75       	push   0x75676e61
 55e:	70 00                	jo     560 <__abi_tag-0x3ffe1c>
 560:	70 72                	jo     5d4 <__abi_tag-0x3ffda8>
 562:	69 6e 74 5f 70 72 6f 	imul   ebp,DWORD PTR [rsi+0x74],0x6f72705f
 569:	67 72 61             	addr32 jb 5cd <__abi_tag-0x3ffdaf>
 56c:	6d                   	ins    DWORD PTR es:[rdi],dx
 56d:	5f                   	pop    rdi
 56e:	68 65 61 64 65       	push   0x65646165
 573:	72 73                	jb     5e8 <__abi_tag-0x3ffd94>
 575:	00 72 6f             	add    BYTE PTR [rdx+0x6f],dh
 578:	77 00                	ja     57a <__abi_tag-0x3ffe02>
 57a:	5f                   	pop    rdi
 57b:	5f                   	pop    rdi
 57c:	69 6e 74 33 32 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3233
 583:	00 6a 00             	add    BYTE PTR [rdx+0x0],ch
 586:	62 75 66 00 6e       	(bad)
 58b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 58c:	64 65 00 2f          	fs add BYTE PTR gs:[rdi],ch
 590:	6d                   	ins    DWORD PTR es:[rdi],dx
 591:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 592:	74 2f                	je     5c3 <__abi_tag-0x3ffdb9>
 594:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 595:	66 73 2f             	data16 jae 5c7 <__abi_tag-0x3ffdb5>
 598:	68 6f 6d 65 73       	push   0x73656d6f
 59d:	2f                   	(bad)  
 59e:	6c                   	ins    BYTE PTR es:[rdi],dx
 59f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5a0:	75 6d                	jne    60f <__abi_tag-0x3ffd6d>
 5a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5a3:	75 6c                	jne    611 <__abi_tag-0x3ffd6b>
 5a5:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
 5ab:	79 2d                	jns    5da <__abi_tag-0x3ffda2>
 5ad:	77 6f                	ja     61e <__abi_tag-0x3ffd5e>
 5af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5b0:	64 70 61             	fs jo  614 <__abi_tag-0x3ffd68>
 5b3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 5b6:	72 2f                	jb     5e7 <__abi_tag-0x3ffd95>
 5b8:	73 72                	jae    62c <__abi_tag-0x3ffd50>
 5ba:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 5bc:	70 61                	jo     61f <__abi_tag-0x3ffd5d>
 5be:	79 6c                	jns    62c <__abi_tag-0x3ffd50>
 5c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5c1:	61                   	(bad)  
 5c2:	64 2e 63 00          	fs movsxd eax,DWORD PTR fs:[rax]
 5c6:	62                   	(bad)  
 5c7:	6c                   	ins    BYTE PTR es:[rdi],dx
 5c8:	75 65                	jne    62f <__abi_tag-0x3ffd4d>
 5ca:	70 72                	jo     63e <__abi_tag-0x3ffd3e>
 5cc:	69 6e 74 5f 70 61 79 	imul   ebp,DWORD PTR [rsi+0x74],0x7961705f
 5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
 5d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5d5:	61                   	(bad)  
 5d6:	64 00 64 65 63       	add    BYTE PTR fs:[rbp+riz*2+0x63],ah
 5db:	72 79                	jb     656 <__abi_tag-0x3ffd26>
 5dd:	70 74                	jo     653 <__abi_tag-0x3ffd29>
 5df:	5f                   	pop    rdi
 5e0:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
 5e2:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 5e5:	74 5f                	je     646 <__abi_tag-0x3ffd36>
 5e7:	75 69                	jne    652 <__abi_tag-0x3ffd2a>
 5e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 5ea:	74 33                	je     61f <__abi_tag-0x3ffd5d>
 5ec:	32 00                	xor    al,BYTE PTR [rax]
 5ee:	70 72                	jo     662 <__abi_tag-0x3ffd1a>
 5f0:	69 6e 74 5f 69 6e 66 	imul   ebp,DWORD PTR [rsi+0x74],0x666e695f
 5f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5f8:	5f                   	pop    rdi
 5f9:	70 61                	jo     65c <__abi_tag-0x3ffd20>
 5fb:	79 6c                	jns    669 <__abi_tag-0x3ffd13>
 5fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5fe:	61                   	(bad)  
 5ff:	64 00 2f             	add    BYTE PTR fs:[rdi],ch
 602:	6d                   	ins    DWORD PTR es:[rdi],dx
 603:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 604:	74 2f                	je     635 <__abi_tag-0x3ffd47>
 606:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 607:	66 73 2f             	data16 jae 639 <__abi_tag-0x3ffd43>
 60a:	68 6f 6d 65 73       	push   0x73656d6f
 60f:	2f                   	(bad)  
 610:	6c                   	ins    BYTE PTR es:[rdi],dx
 611:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 612:	75 6d                	jne    681 <__abi_tag-0x3ffcfb>
 614:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 615:	75 6c                	jne    683 <__abi_tag-0x3ffcf9>
 617:	69 2f 77 6f 6f 64    	imul   ebp,DWORD PTR [rdi],0x646f6f77
 61d:	79 2d                	jns    64c <__abi_tag-0x3ffd30>
 61f:	77 6f                	ja     690 <__abi_tag-0x3ffcec>
 621:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 622:	64 70 61             	fs jo  686 <__abi_tag-0x3ffcf6>
 625:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 628:	72 2f                	jb     659 <__abi_tag-0x3ffd23>
 62a:	73 72                	jae    69e <__abi_tag-0x3ffcde>
 62c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 62e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 630:	64 69 61 6e 5f 68 61 	imul   esp,DWORD PTR fs:[rcx+0x6e],0x6e61685f
 637:	6e 
 638:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 63a:	65 2e 63 00          	gs movsxd eax,DWORD PTR gs:[rax]
 63e:	67 65 74 5f          	addr32 gs je 6a1 <__abi_tag-0x3ffcdb>
 642:	75 69                	jne    6ad <__abi_tag-0x3ffccf>
 644:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 645:	74 38                	je     67f <__abi_tag-0x3ffcfd>
 647:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 64a:	74 5f                	je     6ab <__abi_tag-0x3ffcd1>
 64c:	75 69                	jne    6b7 <__abi_tag-0x3ffcc5>
 64e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 64f:	74 31                	je     682 <__abi_tag-0x3ffcfa>
 651:	36 00 67 65          	ss add BYTE PTR [rdi+0x65],ah
 655:	74 5f                	je     6b6 <__abi_tag-0x3ffcc6>
 657:	75 69                	jne    6c2 <__abi_tag-0x3ffcba>
 659:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 65a:	74 36                	je     692 <__abi_tag-0x3ffcea>
 65c:	34 00                	xor    al,0x0
 65e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 660:	64                   	fs
 661:	69                   	.byte 0x69
 662:	61                   	(bad)  
 663:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

Disassembly of section .debug_loc:

0000000000000000 <.debug_loc>:
	...
       8:	07                   	(bad)  
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 00                	add    BYTE PTR [rax],al
       d:	00 00                	add    BYTE PTR [rax],al
       f:	00 01                	add    BYTE PTR [rcx],al
      11:	00 55 07             	add    BYTE PTR [rbp+0x7],dl
      14:	00 00                	add    BYTE PTR [rax],al
      16:	00 00                	add    BYTE PTR [rax],al
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	00 43 00             	add    BYTE PTR [rbx+0x0],al
      1d:	00 00                	add    BYTE PTR [rax],al
      1f:	00 00                	add    BYTE PTR [rax],al
      21:	00 00                	add    BYTE PTR [rax],al
      23:	01 00                	add    DWORD PTR [rax],eax
      25:	5e                   	pop    rsi
      26:	44 00 00             	add    BYTE PTR [rax],r8b
      29:	00 00                	add    BYTE PTR [rax],al
      2b:	00 00                	add    BYTE PTR [rax],al
      2d:	00 5a 00             	add    BYTE PTR [rdx+0x0],bl
      30:	00 00                	add    BYTE PTR [rax],al
      32:	00 00                	add    BYTE PTR [rax],al
      34:	00 00                	add    BYTE PTR [rax],al
      36:	01 00                	add    DWORD PTR [rax],eax
      38:	5e                   	pop    rsi
      39:	5b                   	pop    rbx
      3a:	00 00                	add    BYTE PTR [rax],al
      3c:	00 00                	add    BYTE PTR [rax],al
      3e:	00 00                	add    BYTE PTR [rax],al
      40:	00 6b 00             	add    BYTE PTR [rbx+0x0],ch
      43:	00 00                	add    BYTE PTR [rax],al
      45:	00 00                	add    BYTE PTR [rax],al
      47:	00 00                	add    BYTE PTR [rax],al
      49:	01 00                	add    DWORD PTR [rax],eax
      4b:	5e                   	pop    rsi
	...
      64:	0d 00 00 00 00       	or     eax,0x0
      69:	00 00                	add    BYTE PTR [rax],al
      6b:	00 01                	add    BYTE PTR [rcx],al
      6d:	00 54 0d 00          	add    BYTE PTR [rbp+rcx*1+0x0],dl
      71:	00 00                	add    BYTE PTR [rax],al
      73:	00 00                	add    BYTE PTR [rax],al
      75:	00 00                	add    BYTE PTR [rax],al
      77:	6c                   	ins    BYTE PTR es:[rdi],dx
      78:	00 00                	add    BYTE PTR [rax],al
      7a:	00 00                	add    BYTE PTR [rax],al
      7c:	00 00                	add    BYTE PTR [rax],al
      7e:	00 04 00             	add    BYTE PTR [rax+rax*1],al
      81:	f3 01 54 9f 00       	repz add DWORD PTR [rdi+rbx*4+0x0],edx
	...
      92:	00 00                	add    BYTE PTR [rax],al
      94:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
      97:	00 00                	add    BYTE PTR [rax],al
      99:	00 00                	add    BYTE PTR [rax],al
      9b:	00 00                	add    BYTE PTR [rax],al
      9d:	1b 00                	sbb    eax,DWORD PTR [rax]
      9f:	00 00                	add    BYTE PTR [rax],al
      a1:	00 00                	add    BYTE PTR [rax],al
      a3:	00 00                	add    BYTE PTR [rax],al
      a5:	01 00                	add    DWORD PTR [rax],eax
      a7:	50                   	push   rax
      a8:	1b 00                	sbb    eax,DWORD PTR [rax]
      aa:	00 00                	add    BYTE PTR [rax],al
      ac:	00 00                	add    BYTE PTR [rax],al
      ae:	00 00                	add    BYTE PTR [rax],al
      b0:	41 00 00             	add    BYTE PTR [r8],al
      b3:	00 00                	add    BYTE PTR [rax],al
      b5:	00 00                	add    BYTE PTR [rax],al
      b7:	00 01                	add    BYTE PTR [rcx],al
      b9:	00 53 44             	add    BYTE PTR [rbx+0x44],dl
      bc:	00 00                	add    BYTE PTR [rax],al
      be:	00 00                	add    BYTE PTR [rax],al
      c0:	00 00                	add    BYTE PTR [rax],al
      c2:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
      c5:	00 00                	add    BYTE PTR [rax],al
      c7:	00 00                	add    BYTE PTR [rax],al
      c9:	00 00                	add    BYTE PTR [rax],al
      cb:	01 00                	add    DWORD PTR [rax],eax
      cd:	50                   	push   rax
      ce:	5b                   	pop    rbx
      cf:	00 00                	add    BYTE PTR [rax],al
      d1:	00 00                	add    BYTE PTR [rax],al
      d3:	00 00                	add    BYTE PTR [rax],al
      d5:	00 69 00             	add    BYTE PTR [rcx+0x0],ch
      d8:	00 00                	add    BYTE PTR [rax],al
      da:	00 00                	add    BYTE PTR [rax],al
      dc:	00 00                	add    BYTE PTR [rax],al
      de:	01 00                	add    DWORD PTR [rax],eax
      e0:	53                   	push   rbx
	...
      f1:	70 00                	jo     f3 <__abi_tag-0x400289>
      f3:	00 00                	add    BYTE PTR [rax],al
      f5:	00 00                	add    BYTE PTR [rax],al
      f7:	00 00                	add    BYTE PTR [rax],al
      f9:	74 00                	je     fb <__abi_tag-0x400281>
      fb:	00 00                	add    BYTE PTR [rax],al
      fd:	00 00                	add    BYTE PTR [rax],al
      ff:	00 00                	add    BYTE PTR [rax],al
     101:	01 00                	add    DWORD PTR [rax],eax
     103:	55                   	push   rbp
     104:	74 00                	je     106 <__abi_tag-0x400276>
     106:	00 00                	add    BYTE PTR [rax],al
     108:	00 00                	add    BYTE PTR [rax],al
     10a:	00 00                	add    BYTE PTR [rax],al
     10c:	b0 00                	mov    al,0x0
     10e:	00 00                	add    BYTE PTR [rax],al
     110:	00 00                	add    BYTE PTR [rax],al
     112:	00 00                	add    BYTE PTR [rax],al
     114:	01 00                	add    DWORD PTR [rax],eax
     116:	50                   	push   rax
	...
     127:	d0 00                	rol    BYTE PTR [rax],1
     129:	00 00                	add    BYTE PTR [rax],al
     12b:	00 00                	add    BYTE PTR [rax],al
     12d:	00 00                	add    BYTE PTR [rax],al
     12f:	f4                   	hlt    
     130:	00 00                	add    BYTE PTR [rax],al
     132:	00 00                	add    BYTE PTR [rax],al
     134:	00 00                	add    BYTE PTR [rax],al
     136:	00 01                	add    BYTE PTR [rcx],al
     138:	00 55 f4             	add    BYTE PTR [rbp-0xc],dl
     13b:	00 00                	add    BYTE PTR [rax],al
     13d:	00 00                	add    BYTE PTR [rax],al
     13f:	00 00                	add    BYTE PTR [rax],al
     141:	00 1e                	add    BYTE PTR [rsi],bl
     143:	01 00                	add    DWORD PTR [rax],eax
     145:	00 00                	add    BYTE PTR [rax],al
     147:	00 00                	add    BYTE PTR [rax],al
     149:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     14c:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
     150:	1e                   	(bad)  
     151:	01 00                	add    DWORD PTR [rax],eax
     153:	00 00                	add    BYTE PTR [rax],al
     155:	00 00                	add    BYTE PTR [rax],al
     157:	00 23                	add    BYTE PTR [rbx],ah
     159:	01 00                	add    DWORD PTR [rax],eax
     15b:	00 00                	add    BYTE PTR [rax],al
     15d:	00 00                	add    BYTE PTR [rax],al
     15f:	00 01                	add    BYTE PTR [rcx],al
     161:	00 55 23             	add    BYTE PTR [rbp+0x23],dl
     164:	01 00                	add    DWORD PTR [rax],eax
     166:	00 00                	add    BYTE PTR [rax],al
     168:	00 00                	add    BYTE PTR [rax],al
     16a:	00 d6                	add    dh,dl
     16c:	01 00                	add    DWORD PTR [rax],eax
     16e:	00 00                	add    BYTE PTR [rax],al
     170:	00 00                	add    BYTE PTR [rax],al
     172:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     175:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
	...
     189:	d0 00                	rol    BYTE PTR [rax],1
     18b:	00 00                	add    BYTE PTR [rax],al
     18d:	00 00                	add    BYTE PTR [rax],al
     18f:	00 00                	add    BYTE PTR [rax],al
     191:	f6 00 00             	test   BYTE PTR [rax],0x0
     194:	00 00                	add    BYTE PTR [rax],al
     196:	00 00                	add    BYTE PTR [rax],al
     198:	00 01                	add    BYTE PTR [rcx],al
     19a:	00 54 f6 00          	add    BYTE PTR [rsi+rsi*8+0x0],dl
     19e:	00 00                	add    BYTE PTR [rax],al
     1a0:	00 00                	add    BYTE PTR [rax],al
     1a2:	00 00                	add    BYTE PTR [rax],al
     1a4:	1e                   	(bad)  
     1a5:	01 00                	add    DWORD PTR [rax],eax
     1a7:	00 00                	add    BYTE PTR [rax],al
     1a9:	00 00                	add    BYTE PTR [rax],al
     1ab:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     1ae:	f3 01 54 9f 1e       	repz add DWORD PTR [rdi+rbx*4+0x1e],edx
     1b3:	01 00                	add    DWORD PTR [rax],eax
     1b5:	00 00                	add    BYTE PTR [rax],al
     1b7:	00 00                	add    BYTE PTR [rax],al
     1b9:	00 25 01 00 00 00    	add    BYTE PTR [rip+0x1],ah        # 1c0 <__abi_tag-0x4001bc>
     1bf:	00 00                	add    BYTE PTR [rax],al
     1c1:	00 01                	add    BYTE PTR [rcx],al
     1c3:	00 54 25 01          	add    BYTE PTR [rbp+riz*1+0x1],dl
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	00 00                	add    BYTE PTR [rax],al
     1cb:	00 00                	add    BYTE PTR [rax],al
     1cd:	34 01                	xor    al,0x1
     1cf:	00 00                	add    BYTE PTR [rax],al
     1d1:	00 00                	add    BYTE PTR [rax],al
     1d3:	00 00                	add    BYTE PTR [rax],al
     1d5:	04 00                	add    al,0x0
     1d7:	f3 01 54 9f 44       	repz add DWORD PTR [rdi+rbx*4+0x44],edx
     1dc:	01 00                	add    DWORD PTR [rax],eax
     1de:	00 00                	add    BYTE PTR [rax],al
     1e0:	00 00                	add    BYTE PTR [rax],al
     1e2:	00 d6                	add    dh,dl
     1e4:	01 00                	add    DWORD PTR [rax],eax
     1e6:	00 00                	add    BYTE PTR [rax],al
     1e8:	00 00                	add    BYTE PTR [rax],al
     1ea:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     1ed:	f3 01 54 9f 00       	repz add DWORD PTR [rdi+rbx*4+0x0],edx
	...
     1fe:	00 00                	add    BYTE PTR [rax],al
     200:	00 f0                	add    al,dh
     202:	00 00                	add    BYTE PTR [rax],al
     204:	00 00                	add    BYTE PTR [rax],al
     206:	00 00                	add    BYTE PTR [rax],al
     208:	00 1e                	add    BYTE PTR [rsi],bl
     20a:	01 00                	add    DWORD PTR [rax],eax
     20c:	00 00                	add    BYTE PTR [rax],al
     20e:	00 00                	add    BYTE PTR [rax],al
     210:	00 01                	add    BYTE PTR [rcx],al
     212:	00 57 25             	add    BYTE PTR [rdi+0x25],dl
     215:	01 00                	add    DWORD PTR [rax],eax
     217:	00 00                	add    BYTE PTR [rax],al
     219:	00 00                	add    BYTE PTR [rax],al
     21b:	00 34 01             	add    BYTE PTR [rcx+rax*1],dh
     21e:	00 00                	add    BYTE PTR [rax],al
     220:	00 00                	add    BYTE PTR [rax],al
     222:	00 00                	add    BYTE PTR [rax],al
     224:	01 00                	add    DWORD PTR [rax],eax
     226:	57                   	push   rdi
     227:	44 01 00             	add    DWORD PTR [rax],r8d
     22a:	00 00                	add    BYTE PTR [rax],al
     22c:	00 00                	add    BYTE PTR [rax],al
     22e:	00 5d 01             	add    BYTE PTR [rbp+0x1],bl
     231:	00 00                	add    BYTE PTR [rax],al
     233:	00 00                	add    BYTE PTR [rax],al
     235:	00 00                	add    BYTE PTR [rax],al
     237:	01 00                	add    DWORD PTR [rax],eax
     239:	57                   	push   rdi
	...
     24a:	f0 00 00             	lock add BYTE PTR [rax],al
     24d:	00 00                	add    BYTE PTR [rax],al
     24f:	00 00                	add    BYTE PTR [rax],al
     251:	00 f6                	add    dh,dh
     253:	00 00                	add    BYTE PTR [rax],al
     255:	00 00                	add    BYTE PTR [rax],al
     257:	00 00                	add    BYTE PTR [rax],al
     259:	00 01                	add    BYTE PTR [rcx],al
     25b:	00 54 00 00          	add    BYTE PTR [rax+rax*1+0x0],dl
	...
     26b:	00 00                	add    BYTE PTR [rax],al
     26d:	fd                   	std    
     26e:	00 00                	add    BYTE PTR [rax],al
     270:	00 00                	add    BYTE PTR [rax],al
     272:	00 00                	add    BYTE PTR [rax],al
     274:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
     277:	00 00                	add    BYTE PTR [rax],al
     279:	00 00                	add    BYTE PTR [rax],al
     27b:	00 00                	add    BYTE PTR [rax],al
     27d:	01 00                	add    DWORD PTR [rax],eax
     27f:	50                   	push   rax
     280:	04 01                	add    al,0x1
     282:	00 00                	add    BYTE PTR [rax],al
     284:	00 00                	add    BYTE PTR [rax],al
     286:	00 00                	add    BYTE PTR [rax],al
     288:	1e                   	(bad)  
     289:	01 00                	add    DWORD PTR [rax],eax
     28b:	00 00                	add    BYTE PTR [rax],al
     28d:	00 00                	add    BYTE PTR [rax],al
     28f:	00 01                	add    BYTE PTR [rcx],al
     291:	00 53 25             	add    BYTE PTR [rbx+0x25],dl
     294:	01 00                	add    DWORD PTR [rax],eax
     296:	00 00                	add    BYTE PTR [rax],al
     298:	00 00                	add    BYTE PTR [rax],al
     29a:	00 2a                	add    BYTE PTR [rdx],ch
     29c:	01 00                	add    DWORD PTR [rax],eax
     29e:	00 00                	add    BYTE PTR [rax],al
     2a0:	00 00                	add    BYTE PTR [rax],al
     2a2:	00 01                	add    BYTE PTR [rcx],al
     2a4:	00 50 44             	add    BYTE PTR [rax+0x44],dl
     2a7:	01 00                	add    DWORD PTR [rax],eax
     2a9:	00 00                	add    BYTE PTR [rax],al
     2ab:	00 00                	add    BYTE PTR [rax],al
     2ad:	00 5d 01             	add    BYTE PTR [rbp+0x1],bl
     2b0:	00 00                	add    BYTE PTR [rax],al
     2b2:	00 00                	add    BYTE PTR [rax],al
     2b4:	00 00                	add    BYTE PTR [rax],al
     2b6:	01 00                	add    DWORD PTR [rax],eax
     2b8:	53                   	push   rbx
	...
     2d1:	0c 00                	or     al,0x0
     2d3:	00 00                	add    BYTE PTR [rax],al
     2d5:	00 00                	add    BYTE PTR [rax],al
     2d7:	00 00                	add    BYTE PTR [rax],al
     2d9:	01 00                	add    DWORD PTR [rax],eax
     2db:	51                   	push   rcx
     2dc:	0c 00                	or     al,0x0
     2de:	00 00                	add    BYTE PTR [rax],al
     2e0:	00 00                	add    BYTE PTR [rax],al
     2e2:	00 00                	add    BYTE PTR [rax],al
     2e4:	b5 00                	mov    ch,0x0
     2e6:	00 00                	add    BYTE PTR [rax],al
     2e8:	00 00                	add    BYTE PTR [rax],al
     2ea:	00 00                	add    BYTE PTR [rax],al
     2ec:	01 00                	add    DWORD PTR [rax],eax
     2ee:	58                   	pop    rax
	...
     307:	15 00 00 00 00       	adc    eax,0x0
     30c:	00 00                	add    BYTE PTR [rax],al
     30e:	00 02                	add    BYTE PTR [rdx],al
     310:	00 30                	add    BYTE PTR [rax],dh
     312:	9f                   	lahf   
     313:	1f                   	(bad)  
     314:	00 00                	add    BYTE PTR [rax],al
     316:	00 00                	add    BYTE PTR [rax],al
     318:	00 00                	add    BYTE PTR [rax],al
     31a:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 320 <__abi_tag-0x40005c>
     320:	00 00                	add    BYTE PTR [rax],al
     322:	00 01                	add    BYTE PTR [rcx],al
     324:	00 59 35             	add    BYTE PTR [rcx+0x35],bl
     327:	00 00                	add    BYTE PTR [rax],al
     329:	00 00                	add    BYTE PTR [rax],al
     32b:	00 00                	add    BYTE PTR [rax],al
     32d:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     330:	00 00                	add    BYTE PTR [rax],al
     332:	00 00                	add    BYTE PTR [rax],al
     334:	00 00                	add    BYTE PTR [rax],al
     336:	02 00                	add    al,BYTE PTR [rax]
     338:	30 9f 41 00 00 00    	xor    BYTE PTR [rdi+0x41],bl
     33e:	00 00                	add    BYTE PTR [rax],al
     340:	00 00                	add    BYTE PTR [rax],al
     342:	63 00                	movsxd eax,DWORD PTR [rax]
     344:	00 00                	add    BYTE PTR [rax],al
     346:	00 00                	add    BYTE PTR [rax],al
     348:	00 00                	add    BYTE PTR [rax],al
     34a:	05 00 79 00 31       	add    eax,0x31007900
     34f:	21 9f 63 00 00 00    	and    DWORD PTR [rdi+0x63],ebx
     355:	00 00                	add    BYTE PTR [rax],al
     357:	00 00                	add    BYTE PTR [rax],al
     359:	90                   	nop
     35a:	00 00                	add    BYTE PTR [rax],al
     35c:	00 00                	add    BYTE PTR [rax],al
     35e:	00 00                	add    BYTE PTR [rax],al
     360:	00 01                	add    BYTE PTR [rcx],al
     362:	00 59 90             	add    BYTE PTR [rcx-0x70],bl
     365:	00 00                	add    BYTE PTR [rax],al
     367:	00 00                	add    BYTE PTR [rax],al
     369:	00 00                	add    BYTE PTR [rax],al
     36b:	00 a6 00 00 00 00    	add    BYTE PTR [rsi+0x0],ah
     371:	00 00                	add    BYTE PTR [rax],al
     373:	00 05 00 79 00 31    	add    BYTE PTR [rip+0x31007900],al        # 31007c79 <__TMC_END__+0x30c02b41>
     379:	21 9f a6 00 00 00    	and    DWORD PTR [rdi+0xa6],ebx
     37f:	00 00                	add    BYTE PTR [rax],al
     381:	00 00                	add    BYTE PTR [rax],al
     383:	b5 00                	mov    ch,0x0
     385:	00 00                	add    BYTE PTR [rax],al
     387:	00 00                	add    BYTE PTR [rax],al
     389:	00 00                	add    BYTE PTR [rax],al
     38b:	01 00                	add    DWORD PTR [rax],eax
     38d:	59                   	pop    rcx
	...
     39e:	c0 00 00             	rol    BYTE PTR [rax],0x0
     3a1:	00 00                	add    BYTE PTR [rax],al
     3a3:	00 00                	add    BYTE PTR [rax],al
     3a5:	00 c8                	add    al,cl
     3a7:	00 00                	add    BYTE PTR [rax],al
     3a9:	00 00                	add    BYTE PTR [rax],al
     3ab:	00 00                	add    BYTE PTR [rax],al
     3ad:	00 01                	add    BYTE PTR [rcx],al
     3af:	00 55 c8             	add    BYTE PTR [rbp-0x38],dl
     3b2:	00 00                	add    BYTE PTR [rax],al
     3b4:	00 00                	add    BYTE PTR [rax],al
     3b6:	00 00                	add    BYTE PTR [rax],al
     3b8:	00 17                	add    BYTE PTR [rdi],dl
     3ba:	01 00                	add    DWORD PTR [rax],eax
     3bc:	00 00                	add    BYTE PTR [rax],al
     3be:	00 00                	add    BYTE PTR [rax],al
     3c0:	00 01                	add    BYTE PTR [rcx],al
     3c2:	00 53 20             	add    BYTE PTR [rbx+0x20],dl
     3c5:	01 00                	add    DWORD PTR [rax],eax
     3c7:	00 00                	add    BYTE PTR [rax],al
     3c9:	00 00                	add    BYTE PTR [rax],al
     3cb:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
     3ce:	00 00                	add    BYTE PTR [rax],al
     3d0:	00 00                	add    BYTE PTR [rax],al
     3d2:	00 00                	add    BYTE PTR [rax],al
     3d4:	01 00                	add    DWORD PTR [rax],eax
     3d6:	53                   	push   rbx
	...
     3e7:	c8 00 00 00          	enter  0x0,0x0
     3eb:	00 00                	add    BYTE PTR [rax],al
     3ed:	00 00                	add    BYTE PTR [rax],al
     3ef:	d9 00                	fld    DWORD PTR [rax]
     3f1:	00 00                	add    BYTE PTR [rax],al
     3f3:	00 00                	add    BYTE PTR [rax],al
     3f5:	00 00                	add    BYTE PTR [rax],al
     3f7:	02 00                	add    al,BYTE PTR [rax]
     3f9:	30 9f d9 00 00 00    	xor    BYTE PTR [rdi+0xd9],bl
     3ff:	00 00                	add    BYTE PTR [rax],al
     401:	00 00                	add    BYTE PTR [rax],al
     403:	1f                   	(bad)  
     404:	01 00                	add    DWORD PTR [rax],eax
     406:	00 00                	add    BYTE PTR [rax],al
     408:	00 00                	add    BYTE PTR [rax],al
     40a:	00 01                	add    BYTE PTR [rcx],al
     40c:	00 5f 20             	add    BYTE PTR [rdi+0x20],bl
     40f:	01 00                	add    DWORD PTR [rax],eax
     411:	00 00                	add    BYTE PTR [rax],al
     413:	00 00                	add    BYTE PTR [rax],al
     415:	00 06                	add    BYTE PTR [rsi],al
     417:	02 00                	add    al,BYTE PTR [rax]
     419:	00 00                	add    BYTE PTR [rax],al
     41b:	00 00                	add    BYTE PTR [rax],al
     41d:	00 01                	add    BYTE PTR [rcx],al
     41f:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
	...
     42e:	00 00                	add    BYTE PTR [rax],al
     430:	00 42 01             	add    BYTE PTR [rdx+0x1],al
     433:	00 00                	add    BYTE PTR [rax],al
     435:	00 00                	add    BYTE PTR [rax],al
     437:	00 00                	add    BYTE PTR [rax],al
     439:	61                   	(bad)  
     43a:	01 00                	add    DWORD PTR [rax],eax
     43c:	00 00                	add    BYTE PTR [rax],al
     43e:	00 00                	add    BYTE PTR [rax],al
     440:	00 02                	add    BYTE PTR [rdx],al
     442:	00 30                	add    BYTE PTR [rax],dh
     444:	9f                   	lahf   
     445:	6a 01                	push   0x1
     447:	00 00                	add    BYTE PTR [rax],al
     449:	00 00                	add    BYTE PTR [rax],al
     44b:	00 00                	add    BYTE PTR [rax],al
     44d:	80 01 00             	add    BYTE PTR [rcx],0x0
     450:	00 00                	add    BYTE PTR [rax],al
     452:	00 00                	add    BYTE PTR [rax],al
     454:	00 01                	add    BYTE PTR [rcx],al
     456:	00 52 80             	add    BYTE PTR [rdx-0x80],dl
     459:	01 00                	add    DWORD PTR [rax],eax
     45b:	00 00                	add    BYTE PTR [rax],al
     45d:	00 00                	add    BYTE PTR [rax],al
     45f:	00 93 01 00 00 00    	add    BYTE PTR [rbx+0x1],dl
     465:	00 00                	add    BYTE PTR [rax],al
     467:	00 02                	add    BYTE PTR [rdx],al
     469:	00 30                	add    BYTE PTR [rax],dh
     46b:	9f                   	lahf   
     46c:	93                   	xchg   ebx,eax
     46d:	01 00                	add    DWORD PTR [rax],eax
     46f:	00 00                	add    BYTE PTR [rax],al
     471:	00 00                	add    BYTE PTR [rax],al
     473:	00 b0 01 00 00 00    	add    BYTE PTR [rax+0x1],dh
     479:	00 00                	add    BYTE PTR [rax],al
     47b:	00 05 00 72 00 31    	add    BYTE PTR [rip+0x31007200],al        # 31007681 <__TMC_END__+0x30c02549>
     481:	21 9f b0 01 00 00    	and    DWORD PTR [rdi+0x1b0],ebx
     487:	00 00                	add    BYTE PTR [rax],al
     489:	00 00                	add    BYTE PTR [rax],al
     48b:	de 01                	fiadd  WORD PTR [rcx]
     48d:	00 00                	add    BYTE PTR [rax],al
     48f:	00 00                	add    BYTE PTR [rax],al
     491:	00 00                	add    BYTE PTR [rax],al
     493:	01 00                	add    DWORD PTR [rax],eax
     495:	52                   	push   rdx
     496:	de 01                	fiadd  WORD PTR [rcx]
     498:	00 00                	add    BYTE PTR [rax],al
     49a:	00 00                	add    BYTE PTR [rax],al
     49c:	00 00                	add    BYTE PTR [rax],al
     49e:	f4                   	hlt    
     49f:	01 00                	add    DWORD PTR [rax],eax
     4a1:	00 00                	add    BYTE PTR [rax],al
     4a3:	00 00                	add    BYTE PTR [rax],al
     4a5:	00 05 00 72 00 31    	add    BYTE PTR [rip+0x31007200],al        # 310076ab <__TMC_END__+0x30c02573>
     4ab:	21 9f f4 01 00 00    	and    DWORD PTR [rdi+0x1f4],ebx
     4b1:	00 00                	add    BYTE PTR [rax],al
     4b3:	00 00                	add    BYTE PTR [rax],al
     4b5:	01 02                	add    DWORD PTR [rdx],eax
     4b7:	00 00                	add    BYTE PTR [rax],al
     4b9:	00 00                	add    BYTE PTR [rax],al
     4bb:	00 00                	add    BYTE PTR [rax],al
     4bd:	01 00                	add    DWORD PTR [rax],eax
     4bf:	52                   	push   rdx
	...
     4d0:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
     4d3:	00 00                	add    BYTE PTR [rax],al
     4d5:	00 00                	add    BYTE PTR [rax],al
     4d7:	00 06                	add    BYTE PTR [rsi],al
     4d9:	02 00                	add    al,BYTE PTR [rax]
     4db:	00 00                	add    BYTE PTR [rax],al
     4dd:	00 00                	add    BYTE PTR [rax],al
     4df:	00 01                	add    BYTE PTR [rcx],al
     4e1:	00 55 00             	add    BYTE PTR [rbp+0x0],dl
	...
     4f0:	00 00                	add    BYTE PTR [rax],al
     4f2:	00 6a 01             	add    BYTE PTR [rdx+0x1],ch
     4f5:	00 00                	add    BYTE PTR [rax],al
     4f7:	00 00                	add    BYTE PTR [rax],al
     4f9:	00 00                	add    BYTE PTR [rax],al
     4fb:	80 01 00             	add    BYTE PTR [rcx],0x0
     4fe:	00 00                	add    BYTE PTR [rax],al
     500:	00 00                	add    BYTE PTR [rax],al
     502:	00 01                	add    BYTE PTR [rcx],al
     504:	00 58 f4             	add    BYTE PTR [rax-0xc],bl
     507:	01 00                	add    DWORD PTR [rax],eax
     509:	00 00                	add    BYTE PTR [rax],al
     50b:	00 00                	add    BYTE PTR [rax],al
     50d:	00 06                	add    BYTE PTR [rsi],al
     50f:	02 00                	add    al,BYTE PTR [rax]
     511:	00 00                	add    BYTE PTR [rax],al
     513:	00 00                	add    BYTE PTR [rax],al
     515:	00 01                	add    BYTE PTR [rcx],al
     517:	00 58 00             	add    BYTE PTR [rax+0x0],bl
	...
     526:	00 00                	add    BYTE PTR [rax],al
     528:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
     52b:	00 00                	add    BYTE PTR [rax],al
     52d:	00 00                	add    BYTE PTR [rax],al
     52f:	00 00                	add    BYTE PTR [rax],al
     531:	06                   	(bad)  
     532:	02 00                	add    al,BYTE PTR [rax]
     534:	00 00                	add    BYTE PTR [rax],al
     536:	00 00                	add    BYTE PTR [rax],al
     538:	00 01                	add    BYTE PTR [rcx],al
     53a:	00 53 00             	add    BYTE PTR [rbx+0x0],dl
	...
     549:	00 00                	add    BYTE PTR [rax],al
     54b:	00 6a 01             	add    BYTE PTR [rdx+0x1],ch
     54e:	00 00                	add    BYTE PTR [rax],al
     550:	00 00                	add    BYTE PTR [rax],al
     552:	00 00                	add    BYTE PTR [rax],al
     554:	80 01 00             	add    BYTE PTR [rcx],0x0
     557:	00 00                	add    BYTE PTR [rax],al
     559:	00 00                	add    BYTE PTR [rax],al
     55b:	00 01                	add    BYTE PTR [rcx],al
     55d:	00 58 f4             	add    BYTE PTR [rax-0xc],bl
     560:	01 00                	add    DWORD PTR [rax],eax
     562:	00 00                	add    BYTE PTR [rax],al
     564:	00 00                	add    BYTE PTR [rax],al
     566:	00 06                	add    BYTE PTR [rsi],al
     568:	02 00                	add    al,BYTE PTR [rax]
     56a:	00 00                	add    BYTE PTR [rax],al
     56c:	00 00                	add    BYTE PTR [rax],al
     56e:	00 01                	add    BYTE PTR [rcx],al
     570:	00 58 00             	add    BYTE PTR [rax+0x0],bl
	...
     587:	00 00                	add    BYTE PTR [rax],al
     589:	00 2e                	add    BYTE PTR [rsi],ch
     58b:	00 00                	add    BYTE PTR [rax],al
     58d:	00 00                	add    BYTE PTR [rax],al
     58f:	00 00                	add    BYTE PTR [rax],al
     591:	00 01                	add    BYTE PTR [rcx],al
     593:	00 54 2e 00          	add    BYTE PTR [rsi+rbp*1+0x0],dl
     597:	00 00                	add    BYTE PTR [rax],al
     599:	00 00                	add    BYTE PTR [rax],al
     59b:	00 00                	add    BYTE PTR [rax],al
     59d:	38 00                	cmp    BYTE PTR [rax],al
     59f:	00 00                	add    BYTE PTR [rax],al
     5a1:	00 00                	add    BYTE PTR [rax],al
     5a3:	00 00                	add    BYTE PTR [rax],al
     5a5:	04 00                	add    al,0x0
     5a7:	f3 01 54 9f 38       	repz add DWORD PTR [rdi+rbx*4+0x38],edx
     5ac:	00 00                	add    BYTE PTR [rax],al
     5ae:	00 00                	add    BYTE PTR [rax],al
     5b0:	00 00                	add    BYTE PTR [rax],al
     5b2:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
     5b5:	00 00                	add    BYTE PTR [rax],al
     5b7:	00 00                	add    BYTE PTR [rax],al
     5b9:	00 00                	add    BYTE PTR [rax],al
     5bb:	01 00                	add    DWORD PTR [rax],eax
     5bd:	54                   	push   rsp
     5be:	3c 00                	cmp    al,0x0
     5c0:	00 00                	add    BYTE PTR [rax],al
     5c2:	00 00                	add    BYTE PTR [rax],al
     5c4:	00 00                	add    BYTE PTR [rax],al
     5c6:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
     5c9:	00 00                	add    BYTE PTR [rax],al
     5cb:	00 00                	add    BYTE PTR [rax],al
     5cd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     5d0:	f3 01 54 9f 00       	repz add DWORD PTR [rdi+rbx*4+0x0],edx
	...
     5e1:	00 00                	add    BYTE PTR [rax],al
     5e3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     5e6:	00 00                	add    BYTE PTR [rax],al
     5e8:	00 00                	add    BYTE PTR [rax],al
     5ea:	00 00                	add    BYTE PTR [rax],al
     5ec:	06                   	(bad)  
     5ed:	00 00                	add    BYTE PTR [rax],al
     5ef:	00 00                	add    BYTE PTR [rax],al
     5f1:	00 00                	add    BYTE PTR [rax],al
     5f3:	00 01                	add    BYTE PTR [rcx],al
     5f5:	00 50 14             	add    BYTE PTR [rax+0x14],dl
     5f8:	00 00                	add    BYTE PTR [rax],al
     5fa:	00 00                	add    BYTE PTR [rax],al
     5fc:	00 00                	add    BYTE PTR [rax],al
     5fe:	00 30                	add    BYTE PTR [rax],dh
     600:	00 00                	add    BYTE PTR [rax],al
     602:	00 00                	add    BYTE PTR [rax],al
     604:	00 00                	add    BYTE PTR [rax],al
     606:	00 01                	add    BYTE PTR [rcx],al
     608:	00 50 00             	add    BYTE PTR [rax+0x0],dl
	...
     617:	00 00                	add    BYTE PTR [rax],al
     619:	00 50 00             	add    BYTE PTR [rax+0x0],dl
     61c:	00 00                	add    BYTE PTR [rax],al
     61e:	00 00                	add    BYTE PTR [rax],al
     620:	00 00                	add    BYTE PTR [rax],al
     622:	62                   	(bad)  
     623:	00 00                	add    BYTE PTR [rax],al
     625:	00 00                	add    BYTE PTR [rax],al
     627:	00 00                	add    BYTE PTR [rax],al
     629:	00 01                	add    BYTE PTR [rcx],al
     62b:	00 55 62             	add    BYTE PTR [rbp+0x62],dl
     62e:	00 00                	add    BYTE PTR [rax],al
     630:	00 00                	add    BYTE PTR [rax],al
     632:	00 00                	add    BYTE PTR [rax],al
     634:	00 b7 00 00 00 00    	add    BYTE PTR [rdi+0x0],dh
     63a:	00 00                	add    BYTE PTR [rax],al
     63c:	00 01                	add    BYTE PTR [rcx],al
     63e:	00 5c be 00          	add    BYTE PTR [rsi+rdi*4+0x0],bl
     642:	00 00                	add    BYTE PTR [rax],al
     644:	00 00                	add    BYTE PTR [rax],al
     646:	00 00                	add    BYTE PTR [rax],al
     648:	cf                   	iret   
     649:	00 00                	add    BYTE PTR [rax],al
     64b:	00 00                	add    BYTE PTR [rax],al
     64d:	00 00                	add    BYTE PTR [rax],al
     64f:	00 01                	add    BYTE PTR [rcx],al
     651:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
	...
     661:	00 00                	add    BYTE PTR [rax],al
     663:	50                   	push   rax
     664:	00 00                	add    BYTE PTR [rax],al
     666:	00 00                	add    BYTE PTR [rax],al
     668:	00 00                	add    BYTE PTR [rax],al
     66a:	00 62 00             	add    BYTE PTR [rdx+0x0],ah
     66d:	00 00                	add    BYTE PTR [rax],al
     66f:	00 00                	add    BYTE PTR [rax],al
     671:	00 00                	add    BYTE PTR [rax],al
     673:	01 00                	add    DWORD PTR [rax],eax
     675:	54                   	push   rsp
     676:	62                   	(bad)  
     677:	00 00                	add    BYTE PTR [rax],al
     679:	00 00                	add    BYTE PTR [rax],al
     67b:	00 00                	add    BYTE PTR [rax],al
     67d:	00 bd 00 00 00 00    	add    BYTE PTR [rbp+0x0],bh
     683:	00 00                	add    BYTE PTR [rax],al
     685:	00 01                	add    BYTE PTR [rcx],al
     687:	00 5f be             	add    BYTE PTR [rdi-0x42],bl
     68a:	00 00                	add    BYTE PTR [rax],al
     68c:	00 00                	add    BYTE PTR [rax],al
     68e:	00 00                	add    BYTE PTR [rax],al
     690:	00 cf                	add    bh,cl
     692:	00 00                	add    BYTE PTR [rax],al
     694:	00 00                	add    BYTE PTR [rax],al
     696:	00 00                	add    BYTE PTR [rax],al
     698:	00 01                	add    BYTE PTR [rcx],al
     69a:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
	...
     6a9:	00 00                	add    BYTE PTR [rax],al
     6ab:	00 50 00             	add    BYTE PTR [rax+0x0],dl
     6ae:	00 00                	add    BYTE PTR [rax],al
     6b0:	00 00                	add    BYTE PTR [rax],al
     6b2:	00 00                	add    BYTE PTR [rax],al
     6b4:	62                   	(bad)  
     6b5:	00 00                	add    BYTE PTR [rax],al
     6b7:	00 00                	add    BYTE PTR [rax],al
     6b9:	00 00                	add    BYTE PTR [rax],al
     6bb:	00 01                	add    BYTE PTR [rcx],al
     6bd:	00 51 62             	add    BYTE PTR [rcx+0x62],dl
     6c0:	00 00                	add    BYTE PTR [rax],al
     6c2:	00 00                	add    BYTE PTR [rax],al
     6c4:	00 00                	add    BYTE PTR [rax],al
     6c6:	00 bb 00 00 00 00    	add    BYTE PTR [rbx+0x0],bh
     6cc:	00 00                	add    BYTE PTR [rax],al
     6ce:	00 01                	add    BYTE PTR [rcx],al
     6d0:	00 5e be             	add    BYTE PTR [rsi-0x42],bl
     6d3:	00 00                	add    BYTE PTR [rax],al
     6d5:	00 00                	add    BYTE PTR [rax],al
     6d7:	00 00                	add    BYTE PTR [rax],al
     6d9:	00 cf                	add    bh,cl
     6db:	00 00                	add    BYTE PTR [rax],al
     6dd:	00 00                	add    BYTE PTR [rax],al
     6df:	00 00                	add    BYTE PTR [rax],al
     6e1:	00 01                	add    BYTE PTR [rcx],al
     6e3:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
	...
     6f2:	00 00                	add    BYTE PTR [rax],al
     6f4:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
     6f7:	00 00                	add    BYTE PTR [rax],al
     6f9:	00 00                	add    BYTE PTR [rax],al
     6fb:	00 00                	add    BYTE PTR [rax],al
     6fd:	7a 00                	jp     6ff <__abi_tag-0x3ffc7d>
     6ff:	00 00                	add    BYTE PTR [rax],al
     701:	00 00                	add    BYTE PTR [rax],al
     703:	00 00                	add    BYTE PTR [rax],al
     705:	01 00                	add    DWORD PTR [rax],eax
     707:	50                   	push   rax
     708:	7a 00                	jp     70a <__abi_tag-0x3ffc72>
     70a:	00 00                	add    BYTE PTR [rax],al
     70c:	00 00                	add    BYTE PTR [rax],al
     70e:	00 00                	add    BYTE PTR [rax],al
     710:	81 00 00 00 00 00    	add    DWORD PTR [rax],0x0
     716:	00 00                	add    BYTE PTR [rax],al
     718:	01 00                	add    DWORD PTR [rax],eax
     71a:	53                   	push   rbx
     71b:	be 00 00 00 00       	mov    esi,0x0
     720:	00 00                	add    BYTE PTR [rax],al
     722:	00 c8                	add    al,cl
     724:	00 00                	add    BYTE PTR [rax],al
     726:	00 00                	add    BYTE PTR [rax],al
     728:	00 00                	add    BYTE PTR [rax],al
     72a:	00 01                	add    BYTE PTR [rcx],al
     72c:	00 50 00             	add    BYTE PTR [rax+0x0],dl
	...
     73b:	00 00                	add    BYTE PTR [rax],al
     73d:	00 d0                	add    al,dl
     73f:	00 00                	add    BYTE PTR [rax],al
     741:	00 00                	add    BYTE PTR [rax],al
     743:	00 00                	add    BYTE PTR [rax],al
     745:	00 e1                	add    cl,ah
     747:	00 00                	add    BYTE PTR [rax],al
     749:	00 00                	add    BYTE PTR [rax],al
     74b:	00 00                	add    BYTE PTR [rax],al
     74d:	00 01                	add    BYTE PTR [rcx],al
     74f:	00 55 e1             	add    BYTE PTR [rbp-0x1f],dl
     752:	00 00                	add    BYTE PTR [rax],al
     754:	00 00                	add    BYTE PTR [rax],al
     756:	00 00                	add    BYTE PTR [rax],al
     758:	00 33                	add    BYTE PTR [rbx],dh
     75a:	02 00                	add    al,BYTE PTR [rax]
     75c:	00 00                	add    BYTE PTR [rax],al
     75e:	00 00                	add    BYTE PTR [rax],al
     760:	00 01                	add    BYTE PTR [rcx],al
     762:	00 53 33             	add    BYTE PTR [rbx+0x33],dl
     765:	02 00                	add    al,BYTE PTR [rax]
     767:	00 00                	add    BYTE PTR [rax],al
     769:	00 00                	add    BYTE PTR [rax],al
     76b:	00 3d 02 00 00 00    	add    BYTE PTR [rip+0x2],bh        # 773 <__abi_tag-0x3ffc09>
     771:	00 00                	add    BYTE PTR [rax],al
     773:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     776:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
     77a:	3d 02 00 00 00       	cmp    eax,0x2
     77f:	00 00                	add    BYTE PTR [rax],al
     781:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
     784:	00 00                	add    BYTE PTR [rax],al
     786:	00 00                	add    BYTE PTR [rax],al
     788:	00 00                	add    BYTE PTR [rax],al
     78a:	01 00                	add    DWORD PTR [rax],eax
     78c:	53                   	push   rbx
	...
     79d:	e5 00                	in     eax,0x0
     79f:	00 00                	add    BYTE PTR [rax],al
     7a1:	00 00                	add    BYTE PTR [rax],al
     7a3:	00 00                	add    BYTE PTR [rax],al
     7a5:	ab                   	stos   DWORD PTR es:[rdi],eax
     7a6:	01 00                	add    DWORD PTR [rax],eax
     7a8:	00 00                	add    BYTE PTR [rax],al
     7aa:	00 00                	add    BYTE PTR [rax],al
     7ac:	00 01                	add    BYTE PTR [rcx],al
     7ae:	00 5c ab 01          	add    BYTE PTR [rbx+rbp*4+0x1],bl
     7b2:	00 00                	add    BYTE PTR [rax],al
     7b4:	00 00                	add    BYTE PTR [rax],al
     7b6:	00 00                	add    BYTE PTR [rax],al
     7b8:	ec                   	in     al,dx
     7b9:	01 00                	add    DWORD PTR [rax],eax
     7bb:	00 00                	add    BYTE PTR [rax],al
     7bd:	00 00                	add    BYTE PTR [rax],al
     7bf:	00 02                	add    BYTE PTR [rdx],al
     7c1:	00 77 10             	add    BYTE PTR [rdi+0x10],dh
     7c4:	ec                   	in     al,dx
     7c5:	01 00                	add    DWORD PTR [rax],eax
     7c7:	00 00                	add    BYTE PTR [rax],al
     7c9:	00 00                	add    BYTE PTR [rax],al
     7cb:	00 35 02 00 00 00    	add    BYTE PTR [rip+0x2],dh        # 7d3 <__abi_tag-0x3ffba9>
     7d1:	00 00                	add    BYTE PTR [rax],al
     7d3:	00 01                	add    BYTE PTR [rcx],al
     7d5:	00 5c 3d 02          	add    BYTE PTR [rbp+rdi*1+0x2],bl
     7d9:	00 00                	add    BYTE PTR [rax],al
     7db:	00 00                	add    BYTE PTR [rax],al
     7dd:	00 00                	add    BYTE PTR [rax],al
     7df:	53                   	push   rbx
     7e0:	02 00                	add    al,BYTE PTR [rax]
     7e2:	00 00                	add    BYTE PTR [rax],al
     7e4:	00 00                	add    BYTE PTR [rax],al
     7e6:	00 01                	add    BYTE PTR [rcx],al
     7e8:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
	...
     7f8:	00 00                	add    BYTE PTR [rax],al
     7fa:	f6 00 00             	test   BYTE PTR [rax],0x0
     7fd:	00 00                	add    BYTE PTR [rax],al
     7ff:	00 00                	add    BYTE PTR [rax],al
     801:	00 99 01 00 00 00    	add    BYTE PTR [rcx+0x1],bl
     807:	00 00                	add    BYTE PTR [rax],al
     809:	00 01                	add    BYTE PTR [rcx],al
     80b:	00 56 99             	add    BYTE PTR [rsi-0x67],dl
     80e:	01 00                	add    DWORD PTR [rax],eax
     810:	00 00                	add    BYTE PTR [rax],al
     812:	00 00                	add    BYTE PTR [rax],al
     814:	00 f1                	add    cl,dh
     816:	01 00                	add    DWORD PTR [rax],eax
     818:	00 00                	add    BYTE PTR [rax],al
     81a:	00 00                	add    BYTE PTR [rax],al
     81c:	00 02                	add    BYTE PTR [rdx],al
     81e:	00 77 08             	add    BYTE PTR [rdi+0x8],dh
     821:	f1                   	int1   
     822:	01 00                	add    DWORD PTR [rax],eax
     824:	00 00                	add    BYTE PTR [rax],al
     826:	00 00                	add    BYTE PTR [rax],al
     828:	00 3c 02             	add    BYTE PTR [rdx+rax*1],bh
     82b:	00 00                	add    BYTE PTR [rax],al
     82d:	00 00                	add    BYTE PTR [rax],al
     82f:	00 00                	add    BYTE PTR [rax],al
     831:	01 00                	add    DWORD PTR [rax],eax
     833:	56                   	push   rsi
     834:	3d 02 00 00 00       	cmp    eax,0x2
     839:	00 00                	add    BYTE PTR [rax],al
     83b:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
     83e:	00 00                	add    BYTE PTR [rax],al
     840:	00 00                	add    BYTE PTR [rax],al
     842:	00 00                	add    BYTE PTR [rax],al
     844:	01 00                	add    DWORD PTR [rax],eax
     846:	56                   	push   rsi
	...
     857:	06                   	(bad)  
     858:	01 00                	add    DWORD PTR [rax],eax
     85a:	00 00                	add    BYTE PTR [rax],al
     85c:	00 00                	add    BYTE PTR [rax],al
     85e:	00 08                	add    BYTE PTR [rax],cl
     860:	01 00                	add    DWORD PTR [rax],eax
     862:	00 00                	add    BYTE PTR [rax],al
     864:	00 00                	add    BYTE PTR [rax],al
     866:	00 01                	add    BYTE PTR [rcx],al
     868:	00 51 14             	add    BYTE PTR [rcx+0x14],dl
     86b:	01 00                	add    DWORD PTR [rax],eax
     86d:	00 00                	add    BYTE PTR [rax],al
     86f:	00 00                	add    BYTE PTR [rax],al
     871:	00 2e                	add    BYTE PTR [rsi],ch
     873:	01 00                	add    DWORD PTR [rax],eax
     875:	00 00                	add    BYTE PTR [rax],al
     877:	00 00                	add    BYTE PTR [rax],al
     879:	00 01                	add    BYTE PTR [rcx],al
     87b:	00 51 00             	add    BYTE PTR [rcx+0x0],dl
	...
     88a:	00 00                	add    BYTE PTR [rax],al
     88c:	00 02                	add    BYTE PTR [rdx],al
     88e:	01 00                	add    DWORD PTR [rax],eax
     890:	00 00                	add    BYTE PTR [rax],al
     892:	00 00                	add    BYTE PTR [rax],al
     894:	00 40 01             	add    BYTE PTR [rax+0x1],al
     897:	00 00                	add    BYTE PTR [rax],al
     899:	00 00                	add    BYTE PTR [rax],al
     89b:	00 00                	add    BYTE PTR [rax],al
     89d:	01 00                	add    DWORD PTR [rax],eax
     89f:	53                   	push   rbx
     8a0:	4c 01 00             	add    QWORD PTR [rax],r8
     8a3:	00 00                	add    BYTE PTR [rax],al
     8a5:	00 00                	add    BYTE PTR [rax],al
     8a7:	00 63 01             	add    BYTE PTR [rbx+0x1],ah
     8aa:	00 00                	add    BYTE PTR [rax],al
     8ac:	00 00                	add    BYTE PTR [rax],al
     8ae:	00 00                	add    BYTE PTR [rax],al
     8b0:	01 00                	add    DWORD PTR [rax],eax
     8b2:	53                   	push   rbx
	...
     8c3:	02 01                	add    al,BYTE PTR [rcx]
     8c5:	00 00                	add    BYTE PTR [rax],al
     8c7:	00 00                	add    BYTE PTR [rax],al
     8c9:	00 00                	add    BYTE PTR [rax],al
     8cb:	31 01                	xor    DWORD PTR [rcx],eax
     8cd:	00 00                	add    BYTE PTR [rax],al
     8cf:	00 00                	add    BYTE PTR [rax],al
     8d1:	00 00                	add    BYTE PTR [rax],al
     8d3:	01 00                	add    DWORD PTR [rax],eax
     8d5:	52                   	push   rdx
     8d6:	4c 01 00             	add    QWORD PTR [rax],r8
     8d9:	00 00                	add    BYTE PTR [rax],al
     8db:	00 00                	add    BYTE PTR [rax],al
     8dd:	00 53 01             	add    BYTE PTR [rbx+0x1],dl
     8e0:	00 00                	add    BYTE PTR [rax],al
     8e2:	00 00                	add    BYTE PTR [rax],al
     8e4:	00 00                	add    BYTE PTR [rax],al
     8e6:	01 00                	add    DWORD PTR [rax],eax
     8e8:	52                   	push   rdx
	...
     8f9:	3b 01                	cmp    eax,DWORD PTR [rcx]
     8fb:	00 00                	add    BYTE PTR [rax],al
     8fd:	00 00                	add    BYTE PTR [rax],al
     8ff:	00 00                	add    BYTE PTR [rax],al
     901:	4c 01 00             	add    QWORD PTR [rax],r8
     904:	00 00                	add    BYTE PTR [rax],al
     906:	00 00                	add    BYTE PTR [rax],al
     908:	00 01                	add    BYTE PTR [rcx],al
     90a:	00 5d 5e             	add    BYTE PTR [rbp+0x5e],bl
     90d:	01 00                	add    DWORD PTR [rax],eax
     90f:	00 00                	add    BYTE PTR [rax],al
     911:	00 00                	add    BYTE PTR [rax],al
     913:	00 37                	add    BYTE PTR [rdi],dh
     915:	02 00                	add    al,BYTE PTR [rax]
     917:	00 00                	add    BYTE PTR [rax],al
     919:	00 00                	add    BYTE PTR [rax],al
     91b:	00 01                	add    BYTE PTR [rcx],al
     91d:	00 5d 3d             	add    BYTE PTR [rbp+0x3d],bl
     920:	02 00                	add    al,BYTE PTR [rax]
     922:	00 00                	add    BYTE PTR [rax],al
     924:	00 00                	add    BYTE PTR [rax],al
     926:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
     929:	00 00                	add    BYTE PTR [rax],al
     92b:	00 00                	add    BYTE PTR [rax],al
     92d:	00 00                	add    BYTE PTR [rax],al
     92f:	01 00                	add    DWORD PTR [rax],eax
     931:	5d                   	pop    rbp
	...
     942:	75 01                	jne    945 <__abi_tag-0x3ffa37>
     944:	00 00                	add    BYTE PTR [rax],al
     946:	00 00                	add    BYTE PTR [rax],al
     948:	00 00                	add    BYTE PTR [rax],al
     94a:	f9                   	stc    
     94b:	01 00                	add    DWORD PTR [rax],eax
     94d:	00 00                	add    BYTE PTR [rax],al
     94f:	00 00                	add    BYTE PTR [rax],al
     951:	00 01                	add    BYTE PTR [rcx],al
     953:	00 5d 3d             	add    BYTE PTR [rbp+0x3d],bl
     956:	02 00                	add    al,BYTE PTR [rax]
     958:	00 00                	add    BYTE PTR [rax],al
     95a:	00 00                	add    BYTE PTR [rax],al
     95c:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
     95f:	00 00                	add    BYTE PTR [rax],al
     961:	00 00                	add    BYTE PTR [rax],al
     963:	00 00                	add    BYTE PTR [rax],al
     965:	01 00                	add    DWORD PTR [rax],eax
     967:	5d                   	pop    rbp
	...
     978:	75 01                	jne    97b <__abi_tag-0x3ffa01>
     97a:	00 00                	add    BYTE PTR [rax],al
     97c:	00 00                	add    BYTE PTR [rax],al
     97e:	00 00                	add    BYTE PTR [rax],al
     980:	f9                   	stc    
     981:	01 00                	add    DWORD PTR [rax],eax
     983:	00 00                	add    BYTE PTR [rax],al
     985:	00 00                	add    BYTE PTR [rax],al
     987:	00 01                	add    BYTE PTR [rcx],al
     989:	00 53 3d             	add    BYTE PTR [rbx+0x3d],dl
     98c:	02 00                	add    al,BYTE PTR [rax]
     98e:	00 00                	add    BYTE PTR [rax],al
     990:	00 00                	add    BYTE PTR [rax],al
     992:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
     995:	00 00                	add    BYTE PTR [rax],al
     997:	00 00                	add    BYTE PTR [rax],al
     999:	00 00                	add    BYTE PTR [rax],al
     99b:	01 00                	add    DWORD PTR [rax],eax
     99d:	53                   	push   rbx
	...
     9ae:	75 01                	jne    9b1 <__abi_tag-0x3ff9cb>
     9b0:	00 00                	add    BYTE PTR [rax],al
     9b2:	00 00                	add    BYTE PTR [rax],al
     9b4:	00 00                	add    BYTE PTR [rax],al
     9b6:	c1 01 00             	rol    DWORD PTR [rcx],0x0
     9b9:	00 00                	add    BYTE PTR [rax],al
     9bb:	00 00                	add    BYTE PTR [rax],al
     9bd:	00 01                	add    BYTE PTR [rcx],al
     9bf:	00 5f 3d             	add    BYTE PTR [rdi+0x3d],bl
     9c2:	02 00                	add    al,BYTE PTR [rax]
     9c4:	00 00                	add    BYTE PTR [rax],al
     9c6:	00 00                	add    BYTE PTR [rax],al
     9c8:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
     9cb:	00 00                	add    BYTE PTR [rax],al
     9cd:	00 00                	add    BYTE PTR [rax],al
     9cf:	00 00                	add    BYTE PTR [rax],al
     9d1:	01 00                	add    DWORD PTR [rax],eax
     9d3:	5f                   	pop    rdi
	...
     9e4:	84 01                	test   BYTE PTR [rcx],al
     9e6:	00 00                	add    BYTE PTR [rax],al
     9e8:	00 00                	add    BYTE PTR [rax],al
     9ea:	00 00                	add    BYTE PTR [rax],al
     9ec:	94                   	xchg   esp,eax
     9ed:	01 00                	add    DWORD PTR [rax],eax
     9ef:	00 00                	add    BYTE PTR [rax],al
     9f1:	00 00                	add    BYTE PTR [rax],al
     9f3:	00 01                	add    BYTE PTR [rcx],al
     9f5:	00 50 94             	add    BYTE PTR [rax-0x6c],dl
     9f8:	01 00                	add    DWORD PTR [rax],eax
     9fa:	00 00                	add    BYTE PTR [rax],al
     9fc:	00 00                	add    BYTE PTR [rax],al
     9fe:	00 9d 01 00 00 00    	add    BYTE PTR [rbp+0x1],bl
     a04:	00 00                	add    BYTE PTR [rax],al
     a06:	00 02                	add    BYTE PTR [rdx],al
     a08:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
     a0b:	9d                   	popf   
     a0c:	01 00                	add    DWORD PTR [rax],eax
     a0e:	00 00                	add    BYTE PTR [rax],al
     a10:	00 00                	add    BYTE PTR [rax],al
     a12:	00 a0 01 00 00 00    	add    BYTE PTR [rax+0x1],ah
     a18:	00 00                	add    BYTE PTR [rax],al
     a1a:	00 01                	add    BYTE PTR [rcx],al
     a1c:	00 56 3d             	add    BYTE PTR [rsi+0x3d],dl
     a1f:	02 00                	add    al,BYTE PTR [rax]
     a21:	00 00                	add    BYTE PTR [rax],al
     a23:	00 00                	add    BYTE PTR [rax],al
     a25:	00 47 02             	add    BYTE PTR [rdi+0x2],al
     a28:	00 00                	add    BYTE PTR [rax],al
     a2a:	00 00                	add    BYTE PTR [rax],al
     a2c:	00 00                	add    BYTE PTR [rax],al
     a2e:	01 00                	add    DWORD PTR [rax],eax
     a30:	50                   	push   rax
	...
     a49:	0a 00                	or     al,BYTE PTR [rax]
     a4b:	00 00                	add    BYTE PTR [rax],al
     a4d:	00 00                	add    BYTE PTR [rax],al
     a4f:	00 00                	add    BYTE PTR [rax],al
     a51:	01 00                	add    DWORD PTR [rax],eax
     a53:	55                   	push   rbp
     a54:	0a 00                	or     al,BYTE PTR [rax]
     a56:	00 00                	add    BYTE PTR [rax],al
     a58:	00 00                	add    BYTE PTR [rax],al
     a5a:	00 00                	add    BYTE PTR [rax],al
     a5c:	24 00                	and    al,0x0
     a5e:	00 00                	add    BYTE PTR [rax],al
     a60:	00 00                	add    BYTE PTR [rax],al
     a62:	00 00                	add    BYTE PTR [rax],al
     a64:	01 00                	add    DWORD PTR [rax],eax
     a66:	53                   	push   rbx
	...
     a7f:	0a 00                	or     al,BYTE PTR [rax]
     a81:	00 00                	add    BYTE PTR [rax],al
     a83:	00 00                	add    BYTE PTR [rax],al
     a85:	00 00                	add    BYTE PTR [rax],al
     a87:	01 00                	add    DWORD PTR [rax],eax
     a89:	54                   	push   rsp
     a8a:	0a 00                	or     al,BYTE PTR [rax]
     a8c:	00 00                	add    BYTE PTR [rax],al
     a8e:	00 00                	add    BYTE PTR [rax],al
     a90:	00 00                	add    BYTE PTR [rax],al
     a92:	4a 00 00             	rex.WX add BYTE PTR [rax],al
     a95:	00 00                	add    BYTE PTR [rax],al
     a97:	00 00                	add    BYTE PTR [rax],al
     a99:	00 01                	add    BYTE PTR [rcx],al
     a9b:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
	...
     aaa:	00 00                	add    BYTE PTR [rax],al
     aac:	00 19                	add    BYTE PTR [rcx],bl
     aae:	00 00                	add    BYTE PTR [rax],al
     ab0:	00 00                	add    BYTE PTR [rax],al
     ab2:	00 00                	add    BYTE PTR [rax],al
     ab4:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
     ab7:	00 00                	add    BYTE PTR [rax],al
     ab9:	00 00                	add    BYTE PTR [rax],al
     abb:	00 00                	add    BYTE PTR [rax],al
     abd:	01 00                	add    DWORD PTR [rax],eax
     abf:	50                   	push   rax
	...
     ad0:	33 00                	xor    eax,DWORD PTR [rax]
     ad2:	00 00                	add    BYTE PTR [rax],al
     ad4:	00 00                	add    BYTE PTR [rax],al
     ad6:	00 00                	add    BYTE PTR [rax],al
     ad8:	40 00 00             	rex add BYTE PTR [rax],al
     adb:	00 00                	add    BYTE PTR [rax],al
     add:	00 00                	add    BYTE PTR [rax],al
     adf:	00 01                	add    BYTE PTR [rcx],al
     ae1:	00 53 00             	add    BYTE PTR [rbx+0x0],dl
	...
     af0:	00 00                	add    BYTE PTR [rax],al
     af2:	00 50 00             	add    BYTE PTR [rax+0x0],dl
     af5:	00 00                	add    BYTE PTR [rax],al
     af7:	00 00                	add    BYTE PTR [rax],al
     af9:	00 00                	add    BYTE PTR [rax],al
     afb:	78 00                	js     afd <__abi_tag-0x3ff87f>
     afd:	00 00                	add    BYTE PTR [rax],al
     aff:	00 00                	add    BYTE PTR [rax],al
     b01:	00 00                	add    BYTE PTR [rax],al
     b03:	01 00                	add    DWORD PTR [rax],eax
     b05:	55                   	push   rbp
     b06:	78 00                	js     b08 <__abi_tag-0x3ff874>
     b08:	00 00                	add    BYTE PTR [rax],al
     b0a:	00 00                	add    BYTE PTR [rax],al
     b0c:	00 00                	add    BYTE PTR [rax],al
     b0e:	83 00 00             	add    DWORD PTR [rax],0x0
     b11:	00 00                	add    BYTE PTR [rax],al
     b13:	00 00                	add    BYTE PTR [rax],al
     b15:	00 01                	add    BYTE PTR [rcx],al
     b17:	00 5c 83 00          	add    BYTE PTR [rbx+rax*4+0x0],bl
     b1b:	00 00                	add    BYTE PTR [rax],al
     b1d:	00 00                	add    BYTE PTR [rax],al
     b1f:	00 00                	add    BYTE PTR [rax],al
     b21:	e2 00                	loop   b23 <__abi_tag-0x3ff859>
     b23:	00 00                	add    BYTE PTR [rax],al
     b25:	00 00                	add    BYTE PTR [rax],al
     b27:	00 00                	add    BYTE PTR [rax],al
     b29:	04 00                	add    al,0x0
     b2b:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
     b2f:	e2 00                	loop   b31 <__abi_tag-0x3ff84b>
     b31:	00 00                	add    BYTE PTR [rax],al
     b33:	00 00                	add    BYTE PTR [rax],al
     b35:	00 00                	add    BYTE PTR [rax],al
     b37:	e7 00                	out    0x0,eax
     b39:	00 00                	add    BYTE PTR [rax],al
     b3b:	00 00                	add    BYTE PTR [rax],al
     b3d:	00 00                	add    BYTE PTR [rax],al
     b3f:	01 00                	add    DWORD PTR [rax],eax
     b41:	55                   	push   rbp
     b42:	e7 00                	out    0x0,eax
     b44:	00 00                	add    BYTE PTR [rax],al
     b46:	00 00                	add    BYTE PTR [rax],al
     b48:	00 00                	add    BYTE PTR [rax],al
     b4a:	f3 00 00             	repz add BYTE PTR [rax],al
     b4d:	00 00                	add    BYTE PTR [rax],al
     b4f:	00 00                	add    BYTE PTR [rax],al
     b51:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     b54:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
	...
     b68:	7f 00                	jg     b6a <__abi_tag-0x3ff812>
     b6a:	00 00                	add    BYTE PTR [rax],al
     b6c:	00 00                	add    BYTE PTR [rax],al
     b6e:	00 00                	add    BYTE PTR [rax],al
     b70:	87 00                	xchg   DWORD PTR [rax],eax
     b72:	00 00                	add    BYTE PTR [rax],al
     b74:	00 00                	add    BYTE PTR [rax],al
     b76:	00 00                	add    BYTE PTR [rax],al
     b78:	01 00                	add    DWORD PTR [rax],eax
     b7a:	56                   	push   rsi
     b7b:	94                   	xchg   esp,eax
     b7c:	00 00                	add    BYTE PTR [rax],al
     b7e:	00 00                	add    BYTE PTR [rax],al
     b80:	00 00                	add    BYTE PTR [rax],al
     b82:	00 a0 00 00 00 00    	add    BYTE PTR [rax+0x0],ah
     b88:	00 00                	add    BYTE PTR [rax],al
     b8a:	00 01                	add    BYTE PTR [rcx],al
     b8c:	00 56 00             	add    BYTE PTR [rsi+0x0],dl
	...
     b9b:	00 00                	add    BYTE PTR [rax],al
     b9d:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
     ba0:	00 00                	add    BYTE PTR [rax],al
     ba2:	00 00                	add    BYTE PTR [rax],al
     ba4:	00 00                	add    BYTE PTR [rax],al
     ba6:	75 00                	jne    ba8 <__abi_tag-0x3ff7d4>
     ba8:	00 00                	add    BYTE PTR [rax],al
     baa:	00 00                	add    BYTE PTR [rax],al
     bac:	00 00                	add    BYTE PTR [rax],al
     bae:	02 00                	add    al,BYTE PTR [rax]
     bb0:	30 9f 87 00 00 00    	xor    BYTE PTR [rdi+0x87],bl
     bb6:	00 00                	add    BYTE PTR [rax],al
     bb8:	00 00                	add    BYTE PTR [rax],al
     bba:	e2 00                	loop   bbc <__abi_tag-0x3ff7c0>
     bbc:	00 00                	add    BYTE PTR [rax],al
     bbe:	00 00                	add    BYTE PTR [rax],al
     bc0:	00 00                	add    BYTE PTR [rax],al
     bc2:	01 00                	add    DWORD PTR [rax],eax
     bc4:	53                   	push   rbx
	...
     bd5:	87 00                	xchg   DWORD PTR [rax],eax
     bd7:	00 00                	add    BYTE PTR [rax],al
     bd9:	00 00                	add    BYTE PTR [rax],al
     bdb:	00 00                	add    BYTE PTR [rax],al
     bdd:	a0 00 00 00 00 00 00 	movabs al,ds:0x100000000000000
     be4:	00 01 
     be6:	00 5d a8             	add    BYTE PTR [rbp-0x58],bl
     be9:	00 00                	add    BYTE PTR [rax],al
     beb:	00 00                	add    BYTE PTR [rax],al
     bed:	00 00                	add    BYTE PTR [rax],al
     bef:	00 e2                	add    dl,ah
     bf1:	00 00                	add    BYTE PTR [rax],al
     bf3:	00 00                	add    BYTE PTR [rax],al
     bf5:	00 00                	add    BYTE PTR [rax],al
     bf7:	00 01                	add    BYTE PTR [rcx],al
     bf9:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
	...
     c08:	00 00                	add    BYTE PTR [rax],al
     c0a:	00 87 00 00 00 00    	add    BYTE PTR [rdi+0x0],al
     c10:	00 00                	add    BYTE PTR [rax],al
     c12:	00 a0 00 00 00 00    	add    BYTE PTR [rax+0x0],ah
     c18:	00 00                	add    BYTE PTR [rax],al
     c1a:	00 01                	add    BYTE PTR [rcx],al
     c1c:	00 5c a8 00          	add    BYTE PTR [rax+rbp*4+0x0],bl
     c20:	00 00                	add    BYTE PTR [rax],al
     c22:	00 00                	add    BYTE PTR [rax],al
     c24:	00 00                	add    BYTE PTR [rax],al
     c26:	e2 00                	loop   c28 <__abi_tag-0x3ff754>
     c28:	00 00                	add    BYTE PTR [rax],al
     c2a:	00 00                	add    BYTE PTR [rax],al
     c2c:	00 00                	add    BYTE PTR [rax],al
     c2e:	01 00                	add    DWORD PTR [rax],eax
     c30:	5c                   	pop    rsp
	...
     c41:	87 00                	xchg   DWORD PTR [rax],eax
     c43:	00 00                	add    BYTE PTR [rax],al
     c45:	00 00                	add    BYTE PTR [rax],al
     c47:	00 00                	add    BYTE PTR [rax],al
     c49:	a0 00 00 00 00 00 00 	movabs al,ds:0x100000000000000
     c50:	00 01 
     c52:	00 50 b7             	add    BYTE PTR [rax-0x49],dl
     c55:	00 00                	add    BYTE PTR [rax],al
     c57:	00 00                	add    BYTE PTR [rax],al
     c59:	00 00                	add    BYTE PTR [rax],al
     c5b:	00 e2                	add    dl,ah
     c5d:	00 00                	add    BYTE PTR [rax],al
     c5f:	00 00                	add    BYTE PTR [rax],al
     c61:	00 00                	add    BYTE PTR [rax],al
     c63:	00 01                	add    BYTE PTR [rcx],al
     c65:	00 50 00             	add    BYTE PTR [rax+0x0],dl
	...
     c74:	00 00                	add    BYTE PTR [rax],al
     c76:	00 d3                	add    bl,dl
     c78:	00 00                	add    BYTE PTR [rax],al
     c7a:	00 00                	add    BYTE PTR [rax],al
     c7c:	00 00                	add    BYTE PTR [rax],al
     c7e:	00 e0                	add    al,ah
     c80:	00 00                	add    BYTE PTR [rax],al
     c82:	00 00                	add    BYTE PTR [rax],al
     c84:	00 00                	add    BYTE PTR [rax],al
     c86:	00 01                	add    BYTE PTR [rcx],al
     c88:	00 52 00             	add    BYTE PTR [rdx+0x0],dl
	...
     c97:	00 00                	add    BYTE PTR [rax],al
     c99:	00 10                	add    BYTE PTR [rax],dl
     c9b:	01 00                	add    DWORD PTR [rax],eax
     c9d:	00 00                	add    BYTE PTR [rax],al
     c9f:	00 00                	add    BYTE PTR [rax],al
     ca1:	00 20                	add    BYTE PTR [rax],ah
     ca3:	01 00                	add    DWORD PTR [rax],eax
     ca5:	00 00                	add    BYTE PTR [rax],al
     ca7:	00 00                	add    BYTE PTR [rax],al
     ca9:	00 01                	add    BYTE PTR [rcx],al
     cab:	00 55 20             	add    BYTE PTR [rbp+0x20],dl
     cae:	01 00                	add    DWORD PTR [rax],eax
     cb0:	00 00                	add    BYTE PTR [rax],al
     cb2:	00 00                	add    BYTE PTR [rax],al
     cb4:	00 23                	add    BYTE PTR [rbx],ah
     cb6:	01 00                	add    DWORD PTR [rax],eax
     cb8:	00 00                	add    BYTE PTR [rax],al
     cba:	00 00                	add    BYTE PTR [rax],al
     cbc:	00 01                	add    BYTE PTR [rcx],al
     cbe:	00 53 3e             	add    BYTE PTR [rbx+0x3e],dl
     cc1:	01 00                	add    DWORD PTR [rax],eax
     cc3:	00 00                	add    BYTE PTR [rax],al
     cc5:	00 00                	add    BYTE PTR [rax],al
     cc7:	00 45 01             	add    BYTE PTR [rbp+0x1],al
     cca:	00 00                	add    BYTE PTR [rax],al
     ccc:	00 00                	add    BYTE PTR [rax],al
     cce:	00 00                	add    BYTE PTR [rax],al
     cd0:	04 00                	add    al,0x0
     cd2:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
     cd6:	45 01 00             	add    DWORD PTR [r8],r8d
     cd9:	00 00                	add    BYTE PTR [rax],al
     cdb:	00 00                	add    BYTE PTR [rax],al
     cdd:	00 4a 01             	add    BYTE PTR [rdx+0x1],cl
     ce0:	00 00                	add    BYTE PTR [rax],al
     ce2:	00 00                	add    BYTE PTR [rax],al
     ce4:	00 00                	add    BYTE PTR [rax],al
     ce6:	01 00                	add    DWORD PTR [rax],eax
     ce8:	55                   	push   rbp
	...
     cf9:	10 01                	adc    BYTE PTR [rcx],al
     cfb:	00 00                	add    BYTE PTR [rax],al
     cfd:	00 00                	add    BYTE PTR [rax],al
     cff:	00 00                	add    BYTE PTR [rax],al
     d01:	1d 01 00 00 00       	sbb    eax,0x1
     d06:	00 00                	add    BYTE PTR [rax],al
     d08:	00 01                	add    BYTE PTR [rcx],al
     d0a:	00 54 1d 01          	add    BYTE PTR [rbp+rbx*1+0x1],dl
     d0e:	00 00                	add    BYTE PTR [rax],al
     d10:	00 00                	add    BYTE PTR [rax],al
     d12:	00 00                	add    BYTE PTR [rax],al
     d14:	45 01 00             	add    DWORD PTR [r8],r8d
     d17:	00 00                	add    BYTE PTR [rax],al
     d19:	00 00                	add    BYTE PTR [rax],al
     d1b:	00 01                	add    BYTE PTR [rcx],al
     d1d:	00 5f 45             	add    BYTE PTR [rdi+0x45],bl
     d20:	01 00                	add    DWORD PTR [rax],eax
     d22:	00 00                	add    BYTE PTR [rax],al
     d24:	00 00                	add    BYTE PTR [rax],al
     d26:	00 4a 01             	add    BYTE PTR [rdx+0x1],cl
     d29:	00 00                	add    BYTE PTR [rax],al
     d2b:	00 00                	add    BYTE PTR [rax],al
     d2d:	00 00                	add    BYTE PTR [rax],al
     d2f:	01 00                	add    DWORD PTR [rax],eax
     d31:	54                   	push   rsp
     d32:	4a 01 00             	rex.WX add QWORD PTR [rax],rax
     d35:	00 00                	add    BYTE PTR [rax],al
     d37:	00 00                	add    BYTE PTR [rax],al
     d39:	00 4d 01             	add    BYTE PTR [rbp+0x1],cl
     d3c:	00 00                	add    BYTE PTR [rax],al
     d3e:	00 00                	add    BYTE PTR [rax],al
     d40:	00 00                	add    BYTE PTR [rax],al
     d42:	01 00                	add    DWORD PTR [rax],eax
     d44:	5f                   	pop    rdi
	...
     d55:	15 01 00 00 00       	adc    eax,0x1
     d5a:	00 00                	add    BYTE PTR [rax],al
     d5c:	00 20                	add    BYTE PTR [rax],ah
     d5e:	01 00                	add    DWORD PTR [rax],eax
     d60:	00 00                	add    BYTE PTR [rax],al
     d62:	00 00                	add    BYTE PTR [rax],al
     d64:	00 01                	add    BYTE PTR [rcx],al
     d66:	00 55 20             	add    BYTE PTR [rbp+0x20],dl
     d69:	01 00                	add    DWORD PTR [rax],eax
     d6b:	00 00                	add    BYTE PTR [rax],al
     d6d:	00 00                	add    BYTE PTR [rax],al
     d6f:	00 45 01             	add    BYTE PTR [rbp+0x1],al
     d72:	00 00                	add    BYTE PTR [rax],al
     d74:	00 00                	add    BYTE PTR [rax],al
     d76:	00 00                	add    BYTE PTR [rax],al
     d78:	01 00                	add    DWORD PTR [rax],eax
     d7a:	53                   	push   rbx
     d7b:	45 01 00             	add    DWORD PTR [r8],r8d
     d7e:	00 00                	add    BYTE PTR [rax],al
     d80:	00 00                	add    BYTE PTR [rax],al
     d82:	00 4a 01             	add    BYTE PTR [rdx+0x1],cl
     d85:	00 00                	add    BYTE PTR [rax],al
     d87:	00 00                	add    BYTE PTR [rax],al
     d89:	00 00                	add    BYTE PTR [rax],al
     d8b:	01 00                	add    DWORD PTR [rax],eax
     d8d:	55                   	push   rbp
     d8e:	4a 01 00             	rex.WX add QWORD PTR [rax],rax
     d91:	00 00                	add    BYTE PTR [rax],al
     d93:	00 00                	add    BYTE PTR [rax],al
     d95:	00 4d 01             	add    BYTE PTR [rbp+0x1],cl
     d98:	00 00                	add    BYTE PTR [rax],al
     d9a:	00 00                	add    BYTE PTR [rax],al
     d9c:	00 00                	add    BYTE PTR [rax],al
     d9e:	01 00                	add    DWORD PTR [rax],eax
     da0:	53                   	push   rbx
	...
     db9:	07                   	(bad)  
     dba:	00 00                	add    BYTE PTR [rax],al
     dbc:	00 00                	add    BYTE PTR [rax],al
     dbe:	00 00                	add    BYTE PTR [rax],al
     dc0:	00 01                	add    BYTE PTR [rcx],al
     dc2:	00 55 07             	add    BYTE PTR [rbp+0x7],dl
     dc5:	00 00                	add    BYTE PTR [rax],al
     dc7:	00 00                	add    BYTE PTR [rax],al
     dc9:	00 00                	add    BYTE PTR [rax],al
     dcb:	00 52 00             	add    BYTE PTR [rdx+0x0],dl
     dce:	00 00                	add    BYTE PTR [rax],al
     dd0:	00 00                	add    BYTE PTR [rax],al
     dd2:	00 00                	add    BYTE PTR [rax],al
     dd4:	01 00                	add    DWORD PTR [rax],eax
     dd6:	53                   	push   rbx
     dd7:	52                   	push   rdx
     dd8:	00 00                	add    BYTE PTR [rax],al
     dda:	00 00                	add    BYTE PTR [rax],al
     ddc:	00 00                	add    BYTE PTR [rax],al
     dde:	00 56 00             	add    BYTE PTR [rsi+0x0],dl
     de1:	00 00                	add    BYTE PTR [rax],al
     de3:	00 00                	add    BYTE PTR [rax],al
     de5:	00 00                	add    BYTE PTR [rax],al
     de7:	04 00                	add    al,0x0
     de9:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
	...
     dfd:	20 00                	and    BYTE PTR [rax],al
     dff:	00 00                	add    BYTE PTR [rax],al
     e01:	00 00                	add    BYTE PTR [rax],al
     e03:	00 00                	add    BYTE PTR [rax],al
     e05:	27                   	(bad)  
     e06:	00 00                	add    BYTE PTR [rax],al
     e08:	00 00                	add    BYTE PTR [rax],al
     e0a:	00 00                	add    BYTE PTR [rax],al
     e0c:	00 01                	add    BYTE PTR [rcx],al
     e0e:	00 50 27             	add    BYTE PTR [rax+0x27],dl
     e11:	00 00                	add    BYTE PTR [rax],al
     e13:	00 00                	add    BYTE PTR [rax],al
     e15:	00 00                	add    BYTE PTR [rax],al
     e17:	00 3e                	add    BYTE PTR [rsi],bh
     e19:	00 00                	add    BYTE PTR [rax],al
     e1b:	00 00                	add    BYTE PTR [rax],al
     e1d:	00 00                	add    BYTE PTR [rax],al
     e1f:	00 01                	add    BYTE PTR [rcx],al
     e21:	00 56 3e             	add    BYTE PTR [rsi+0x3e],dl
     e24:	00 00                	add    BYTE PTR [rax],al
     e26:	00 00                	add    BYTE PTR [rax],al
     e28:	00 00                	add    BYTE PTR [rax],al
     e2a:	00 48 00             	add    BYTE PTR [rax+0x0],cl
     e2d:	00 00                	add    BYTE PTR [rax],al
     e2f:	00 00                	add    BYTE PTR [rax],al
     e31:	00 00                	add    BYTE PTR [rax],al
     e33:	01 00                	add    DWORD PTR [rax],eax
     e35:	50                   	push   rax
	...
     e46:	60                   	(bad)  
     e47:	00 00                	add    BYTE PTR [rax],al
     e49:	00 00                	add    BYTE PTR [rax],al
     e4b:	00 00                	add    BYTE PTR [rax],al
     e4d:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
     e50:	00 00                	add    BYTE PTR [rax],al
     e52:	00 00                	add    BYTE PTR [rax],al
     e54:	00 00                	add    BYTE PTR [rax],al
     e56:	01 00                	add    DWORD PTR [rax],eax
     e58:	55                   	push   rbp
     e59:	7a 00                	jp     e5b <__abi_tag-0x3ff521>
     e5b:	00 00                	add    BYTE PTR [rax],al
     e5d:	00 00                	add    BYTE PTR [rax],al
     e5f:	00 00                	add    BYTE PTR [rax],al
     e61:	fa                   	cli    
     e62:	00 00                	add    BYTE PTR [rax],al
     e64:	00 00                	add    BYTE PTR [rax],al
     e66:	00 00                	add    BYTE PTR [rax],al
     e68:	00 01                	add    BYTE PTR [rcx],al
     e6a:	00 5c fa 00          	add    BYTE PTR [rdx+rdi*8+0x0],bl
     e6e:	00 00                	add    BYTE PTR [rax],al
     e70:	00 00                	add    BYTE PTR [rax],al
     e72:	00 00                	add    BYTE PTR [rax],al
     e74:	02 01                	add    al,BYTE PTR [rcx]
     e76:	00 00                	add    BYTE PTR [rax],al
     e78:	00 00                	add    BYTE PTR [rax],al
     e7a:	00 00                	add    BYTE PTR [rax],al
     e7c:	04 00                	add    al,0x0
     e7e:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
	...
     e92:	60                   	(bad)  
     e93:	00 00                	add    BYTE PTR [rax],al
     e95:	00 00                	add    BYTE PTR [rax],al
     e97:	00 00                	add    BYTE PTR [rax],al
     e99:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
     e9c:	00 00                	add    BYTE PTR [rax],al
     e9e:	00 00                	add    BYTE PTR [rax],al
     ea0:	00 00                	add    BYTE PTR [rax],al
     ea2:	01 00                	add    DWORD PTR [rax],eax
     ea4:	54                   	push   rsp
     ea5:	77 00                	ja     ea7 <__abi_tag-0x3ff4d5>
     ea7:	00 00                	add    BYTE PTR [rax],al
     ea9:	00 00                	add    BYTE PTR [rax],al
     eab:	00 00                	add    BYTE PTR [rax],al
     ead:	da 00                	fiadd  DWORD PTR [rax]
     eaf:	00 00                	add    BYTE PTR [rax],al
     eb1:	00 00                	add    BYTE PTR [rax],al
     eb3:	00 00                	add    BYTE PTR [rax],al
     eb5:	01 00                	add    DWORD PTR [rax],eax
     eb7:	5e                   	pop    rsi
     eb8:	da 00                	fiadd  DWORD PTR [rax]
     eba:	00 00                	add    BYTE PTR [rax],al
     ebc:	00 00                	add    BYTE PTR [rax],al
     ebe:	00 00                	add    BYTE PTR [rax],al
     ec0:	e1 00                	loope  ec2 <__abi_tag-0x3ff4ba>
     ec2:	00 00                	add    BYTE PTR [rax],al
     ec4:	00 00                	add    BYTE PTR [rax],al
     ec6:	00 00                	add    BYTE PTR [rax],al
     ec8:	04 00                	add    al,0x0
     eca:	f3 01 54 9f e1       	repz add DWORD PTR [rdi+rbx*4-0x1f],edx
     ecf:	00 00                	add    BYTE PTR [rax],al
     ed1:	00 00                	add    BYTE PTR [rax],al
     ed3:	00 00                	add    BYTE PTR [rax],al
     ed5:	00 e6                	add    dh,ah
     ed7:	00 00                	add    BYTE PTR [rax],al
     ed9:	00 00                	add    BYTE PTR [rax],al
     edb:	00 00                	add    BYTE PTR [rax],al
     edd:	00 01                	add    BYTE PTR [rcx],al
     edf:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
	...
     eee:	00 00                	add    BYTE PTR [rax],al
     ef0:	00 60 00             	add    BYTE PTR [rax+0x0],ah
     ef3:	00 00                	add    BYTE PTR [rax],al
     ef5:	00 00                	add    BYTE PTR [rax],al
     ef7:	00 00                	add    BYTE PTR [rax],al
     ef9:	74 00                	je     efb <__abi_tag-0x3ff481>
     efb:	00 00                	add    BYTE PTR [rax],al
     efd:	00 00                	add    BYTE PTR [rax],al
     eff:	00 00                	add    BYTE PTR [rax],al
     f01:	01 00                	add    DWORD PTR [rax],eax
     f03:	51                   	push   rcx
     f04:	74 00                	je     f06 <__abi_tag-0x3ff476>
     f06:	00 00                	add    BYTE PTR [rax],al
     f08:	00 00                	add    BYTE PTR [rax],al
     f0a:	00 00                	add    BYTE PTR [rax],al
     f0c:	fc                   	cld    
     f0d:	00 00                	add    BYTE PTR [rax],al
     f0f:	00 00                	add    BYTE PTR [rax],al
     f11:	00 00                	add    BYTE PTR [rax],al
     f13:	00 01                	add    BYTE PTR [rcx],al
     f15:	00 5d fc             	add    BYTE PTR [rbp-0x4],bl
     f18:	00 00                	add    BYTE PTR [rax],al
     f1a:	00 00                	add    BYTE PTR [rax],al
     f1c:	00 00                	add    BYTE PTR [rax],al
     f1e:	00 02                	add    BYTE PTR [rdx],al
     f20:	01 00                	add    DWORD PTR [rax],eax
     f22:	00 00                	add    BYTE PTR [rax],al
     f24:	00 00                	add    BYTE PTR [rax],al
     f26:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     f29:	f3 01 51 9f          	repz add DWORD PTR [rcx-0x61],edx
	...
     f3d:	90                   	nop
     f3e:	00 00                	add    BYTE PTR [rax],al
     f40:	00 00                	add    BYTE PTR [rax],al
     f42:	00 00                	add    BYTE PTR [rax],al
     f44:	00 98 00 00 00 00    	add    BYTE PTR [rax+0x0],bl
     f4a:	00 00                	add    BYTE PTR [rax],al
     f4c:	00 01                	add    BYTE PTR [rcx],al
     f4e:	00 50 98             	add    BYTE PTR [rax-0x68],dl
     f51:	00 00                	add    BYTE PTR [rax],al
     f53:	00 00                	add    BYTE PTR [rax],al
     f55:	00 00                	add    BYTE PTR [rax],al
     f57:	00 cd                	add    ch,cl
     f59:	00 00                	add    BYTE PTR [rax],al
     f5b:	00 00                	add    BYTE PTR [rax],al
     f5d:	00 00                	add    BYTE PTR [rax],al
     f5f:	00 01                	add    BYTE PTR [rcx],al
     f61:	00 56 d3             	add    BYTE PTR [rsi-0x2d],dl
     f64:	00 00                	add    BYTE PTR [rax],al
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	00 00                	add    BYTE PTR [rax],al
     f6a:	00 d7                	add    bh,dl
     f6c:	00 00                	add    BYTE PTR [rax],al
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	00 00                	add    BYTE PTR [rax],al
     f72:	00 01                	add    BYTE PTR [rcx],al
     f74:	00 50 d7             	add    BYTE PTR [rax-0x29],dl
     f77:	00 00                	add    BYTE PTR [rax],al
     f79:	00 00                	add    BYTE PTR [rax],al
     f7b:	00 00                	add    BYTE PTR [rax],al
     f7d:	00 ee                	add    dh,ch
     f7f:	00 00                	add    BYTE PTR [rax],al
     f81:	00 00                	add    BYTE PTR [rax],al
     f83:	00 00                	add    BYTE PTR [rax],al
     f85:	00 01                	add    BYTE PTR [rcx],al
     f87:	00 56 00             	add    BYTE PTR [rsi+0x0],dl
	...
     f96:	00 00                	add    BYTE PTR [rax],al
     f98:	00 ad 00 00 00 00    	add    BYTE PTR [rbp+0x0],ch
     f9e:	00 00                	add    BYTE PTR [rax],al
     fa0:	00 bc 00 00 00 00 00 	add    BYTE PTR [rax+rax*1+0x0],bh
     fa7:	00 00                	add    BYTE PTR [rax],al
     fa9:	01 00                	add    DWORD PTR [rax],eax
     fab:	50                   	push   rax
     fac:	e1 00                	loope  fae <__abi_tag-0x3ff3ce>
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	00 00                	add    BYTE PTR [rax],al
     fb2:	00 00                	add    BYTE PTR [rax],al
     fb4:	e6 00                	out    0x0,al
     fb6:	00 00                	add    BYTE PTR [rax],al
     fb8:	00 00                	add    BYTE PTR [rax],al
     fba:	00 00                	add    BYTE PTR [rax],al
     fbc:	01 00                	add    DWORD PTR [rax],eax
     fbe:	50                   	push   rax
	...
     fcf:	10 01                	adc    BYTE PTR [rcx],al
     fd1:	00 00                	add    BYTE PTR [rax],al
     fd3:	00 00                	add    BYTE PTR [rax],al
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	16                   	(bad)  
     fd8:	01 00                	add    DWORD PTR [rax],eax
     fda:	00 00                	add    BYTE PTR [rax],al
     fdc:	00 00                	add    BYTE PTR [rax],al
     fde:	00 01                	add    BYTE PTR [rcx],al
     fe0:	00 55 16             	add    BYTE PTR [rbp+0x16],dl
     fe3:	01 00                	add    DWORD PTR [rax],eax
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	00 00                	add    BYTE PTR [rax],al
     fe9:	00 4e 01             	add    BYTE PTR [rsi+0x1],cl
     fec:	00 00                	add    BYTE PTR [rax],al
     fee:	00 00                	add    BYTE PTR [rax],al
     ff0:	00 00                	add    BYTE PTR [rax],al
     ff2:	01 00                	add    DWORD PTR [rax],eax
     ff4:	53                   	push   rbx
     ff5:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
     ff8:	00 00                	add    BYTE PTR [rax],al
     ffa:	00 00                	add    BYTE PTR [rax],al
     ffc:	00 50 01             	add    BYTE PTR [rax+0x1],dl
     fff:	00 00                	add    BYTE PTR [rax],al
    1001:	00 00                	add    BYTE PTR [rax],al
    1003:	00 00                	add    BYTE PTR [rax],al
    1005:	04 00                	add    al,0x0
    1007:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
    100b:	50                   	push   rax
    100c:	01 00                	add    DWORD PTR [rax],eax
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	00 00                	add    BYTE PTR [rax],al
    1012:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
    1015:	00 00                	add    BYTE PTR [rax],al
    1017:	00 00                	add    BYTE PTR [rax],al
    1019:	00 00                	add    BYTE PTR [rax],al
    101b:	01 00                	add    DWORD PTR [rax],eax
    101d:	53                   	push   rbx
    101e:	72 01                	jb     1021 <__abi_tag-0x3ff35b>
    1020:	00 00                	add    BYTE PTR [rax],al
    1022:	00 00                	add    BYTE PTR [rax],al
    1024:	00 00                	add    BYTE PTR [rax],al
    1026:	74 01                	je     1029 <__abi_tag-0x3ff353>
    1028:	00 00                	add    BYTE PTR [rax],al
    102a:	00 00                	add    BYTE PTR [rax],al
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	04 00                	add    al,0x0
    1030:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
	...
    1044:	24 01                	and    al,0x1
    1046:	00 00                	add    BYTE PTR [rax],al
    1048:	00 00                	add    BYTE PTR [rax],al
    104a:	00 00                	add    BYTE PTR [rax],al
    104c:	2b 01                	sub    eax,DWORD PTR [rcx]
    104e:	00 00                	add    BYTE PTR [rax],al
    1050:	00 00                	add    BYTE PTR [rax],al
    1052:	00 00                	add    BYTE PTR [rax],al
    1054:	01 00                	add    DWORD PTR [rax],eax
    1056:	50                   	push   rax
    1057:	2b 01                	sub    eax,DWORD PTR [rcx]
    1059:	00 00                	add    BYTE PTR [rax],al
    105b:	00 00                	add    BYTE PTR [rax],al
    105d:	00 00                	add    BYTE PTR [rax],al
    105f:	4f 01 00             	rex.WRXB add QWORD PTR [r8],r8
    1062:	00 00                	add    BYTE PTR [rax],al
    1064:	00 00                	add    BYTE PTR [rax],al
    1066:	00 01                	add    BYTE PTR [rcx],al
    1068:	00 56 50             	add    BYTE PTR [rsi+0x50],dl
    106b:	01 00                	add    DWORD PTR [rax],eax
    106d:	00 00                	add    BYTE PTR [rax],al
    106f:	00 00                	add    BYTE PTR [rax],al
    1071:	00 57 01             	add    BYTE PTR [rdi+0x1],dl
    1074:	00 00                	add    BYTE PTR [rax],al
    1076:	00 00                	add    BYTE PTR [rax],al
    1078:	00 00                	add    BYTE PTR [rax],al
    107a:	01 00                	add    DWORD PTR [rax],eax
    107c:	50                   	push   rax
    107d:	57                   	push   rdi
    107e:	01 00                	add    DWORD PTR [rax],eax
    1080:	00 00                	add    BYTE PTR [rax],al
    1082:	00 00                	add    BYTE PTR [rax],al
    1084:	00 5c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],bl
    1088:	00 00                	add    BYTE PTR [rax],al
    108a:	00 00                	add    BYTE PTR [rax],al
    108c:	00 01                	add    BYTE PTR [rcx],al
    108e:	00 56 00             	add    BYTE PTR [rsi+0x0],dl
	...
    10a5:	00 00                	add    BYTE PTR [rax],al
    10a7:	00 11                	add    BYTE PTR [rcx],dl
    10a9:	00 00                	add    BYTE PTR [rax],al
    10ab:	00 00                	add    BYTE PTR [rax],al
    10ad:	00 00                	add    BYTE PTR [rax],al
    10af:	00 01                	add    BYTE PTR [rcx],al
    10b1:	00 55 11             	add    BYTE PTR [rbp+0x11],dl
    10b4:	00 00                	add    BYTE PTR [rax],al
    10b6:	00 00                	add    BYTE PTR [rax],al
    10b8:	00 00                	add    BYTE PTR [rax],al
    10ba:	00 aa 00 00 00 00    	add    BYTE PTR [rdx+0x0],ch
    10c0:	00 00                	add    BYTE PTR [rax],al
    10c2:	00 01                	add    BYTE PTR [rcx],al
    10c4:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
	...
    10db:	00 00                	add    BYTE PTR [rax],al
    10dd:	00 11                	add    BYTE PTR [rcx],dl
    10df:	00 00                	add    BYTE PTR [rax],al
    10e1:	00 00                	add    BYTE PTR [rax],al
    10e3:	00 00                	add    BYTE PTR [rax],al
    10e5:	00 01                	add    BYTE PTR [rcx],al
    10e7:	00 54 11 00          	add    BYTE PTR [rcx+rdx*1+0x0],dl
    10eb:	00 00                	add    BYTE PTR [rax],al
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	00 00                	add    BYTE PTR [rax],al
    10f1:	a8 00                	test   al,0x0
    10f3:	00 00                	add    BYTE PTR [rax],al
    10f5:	00 00                	add    BYTE PTR [rax],al
    10f7:	00 00                	add    BYTE PTR [rax],al
    10f9:	01 00                	add    DWORD PTR [rax],eax
    10fb:	5d                   	pop    rbp
	...
    1114:	2b 00                	sub    eax,DWORD PTR [rax]
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	00 00                	add    BYTE PTR [rax],al
    111a:	00 00                	add    BYTE PTR [rax],al
    111c:	01 00                	add    DWORD PTR [rax],eax
    111e:	51                   	push   rcx
    111f:	62                   	(bad)  
    1120:	00 00                	add    BYTE PTR [rax],al
    1122:	00 00                	add    BYTE PTR [rax],al
    1124:	00 00                	add    BYTE PTR [rax],al
    1126:	00 67 00             	add    BYTE PTR [rdi+0x0],ah
    1129:	00 00                	add    BYTE PTR [rax],al
    112b:	00 00                	add    BYTE PTR [rax],al
    112d:	00 00                	add    BYTE PTR [rax],al
    112f:	04 00                	add    al,0x0
    1131:	f3 01 51 9f          	repz add DWORD PTR [rcx-0x61],edx
    1135:	75 00                	jne    1137 <__abi_tag-0x3ff245>
    1137:	00 00                	add    BYTE PTR [rax],al
    1139:	00 00                	add    BYTE PTR [rax],al
    113b:	00 00                	add    BYTE PTR [rax],al
    113d:	7c 00                	jl     113f <__abi_tag-0x3ff23d>
    113f:	00 00                	add    BYTE PTR [rax],al
    1141:	00 00                	add    BYTE PTR [rax],al
    1143:	00 00                	add    BYTE PTR [rax],al
    1145:	01 00                	add    DWORD PTR [rax],eax
    1147:	51                   	push   rcx
    1148:	91                   	xchg   ecx,eax
    1149:	00 00                	add    BYTE PTR [rax],al
    114b:	00 00                	add    BYTE PTR [rax],al
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	00 9a 00 00 00 00    	add    BYTE PTR [rdx+0x0],bl
    1155:	00 00                	add    BYTE PTR [rax],al
    1157:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    115a:	f3 01 51 9f          	repz add DWORD PTR [rcx-0x61],edx
	...
    116e:	18 00                	sbb    BYTE PTR [rax],al
    1170:	00 00                	add    BYTE PTR [rax],al
    1172:	00 00                	add    BYTE PTR [rax],al
    1174:	00 00                	add    BYTE PTR [rax],al
    1176:	2b 00                	sub    eax,DWORD PTR [rax]
    1178:	00 00                	add    BYTE PTR [rax],al
    117a:	00 00                	add    BYTE PTR [rax],al
    117c:	00 00                	add    BYTE PTR [rax],al
    117e:	02 00                	add    al,BYTE PTR [rax]
    1180:	30 9f 3a 00 00 00    	xor    BYTE PTR [rdi+0x3a],bl
    1186:	00 00                	add    BYTE PTR [rax],al
    1188:	00 00                	add    BYTE PTR [rax],al
    118a:	42 00 00             	rex.X add BYTE PTR [rax],al
    118d:	00 00                	add    BYTE PTR [rax],al
    118f:	00 00                	add    BYTE PTR [rax],al
    1191:	00 01                	add    BYTE PTR [rcx],al
    1193:	00 53 45             	add    BYTE PTR [rbx+0x45],dl
    1196:	00 00                	add    BYTE PTR [rax],al
    1198:	00 00                	add    BYTE PTR [rax],al
    119a:	00 00                	add    BYTE PTR [rax],al
    119c:	00 50 00             	add    BYTE PTR [rax+0x0],dl
    119f:	00 00                	add    BYTE PTR [rax],al
    11a1:	00 00                	add    BYTE PTR [rax],al
    11a3:	00 00                	add    BYTE PTR [rax],al
    11a5:	01 00                	add    DWORD PTR [rax],eax
    11a7:	50                   	push   rax
	...
    11b8:	45 00 00             	add    BYTE PTR [r8],r8b
    11bb:	00 00                	add    BYTE PTR [rax],al
    11bd:	00 00                	add    BYTE PTR [rax],al
    11bf:	00 50 00             	add    BYTE PTR [rax+0x0],dl
    11c2:	00 00                	add    BYTE PTR [rax],al
    11c4:	00 00                	add    BYTE PTR [rax],al
    11c6:	00 00                	add    BYTE PTR [rax],al
    11c8:	01 00                	add    DWORD PTR [rax],eax
    11ca:	50                   	push   rax
    11cb:	62                   	(bad)  
    11cc:	00 00                	add    BYTE PTR [rax],al
    11ce:	00 00                	add    BYTE PTR [rax],al
    11d0:	00 00                	add    BYTE PTR [rax],al
    11d2:	00 71 00             	add    BYTE PTR [rcx+0x0],dh
    11d5:	00 00                	add    BYTE PTR [rax],al
    11d7:	00 00                	add    BYTE PTR [rax],al
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	01 00                	add    DWORD PTR [rax],eax
    11dd:	56                   	push   rsi
	...
    11ee:	78 00                	js     11f0 <__abi_tag-0x3ff18c>
    11f0:	00 00                	add    BYTE PTR [rax],al
    11f2:	00 00                	add    BYTE PTR [rax],al
    11f4:	00 00                	add    BYTE PTR [rax],al
    11f6:	7c 00                	jl     11f8 <__abi_tag-0x3ff184>
    11f8:	00 00                	add    BYTE PTR [rax],al
    11fa:	00 00                	add    BYTE PTR [rax],al
    11fc:	00 00                	add    BYTE PTR [rax],al
    11fe:	02 00                	add    al,BYTE PTR [rax]
    1200:	30 9f 7c 00 00 00    	xor    BYTE PTR [rdi+0x7c],bl
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	00 00                	add    BYTE PTR [rax],al
    120a:	9a                   	(bad)  
    120b:	00 00                	add    BYTE PTR [rax],al
    120d:	00 00                	add    BYTE PTR [rax],al
    120f:	00 00                	add    BYTE PTR [rax],al
    1211:	00 01                	add    BYTE PTR [rcx],al
    1213:	00 53 00             	add    BYTE PTR [rbx+0x0],dl
	...
    1222:	00 00                	add    BYTE PTR [rax],al
    1224:	00 c0                	add    al,al
    1226:	00 00                	add    BYTE PTR [rax],al
    1228:	00 00                	add    BYTE PTR [rax],al
    122a:	00 00                	add    BYTE PTR [rax],al
    122c:	00 d1                	add    cl,dl
    122e:	00 00                	add    BYTE PTR [rax],al
    1230:	00 00                	add    BYTE PTR [rax],al
    1232:	00 00                	add    BYTE PTR [rax],al
    1234:	00 01                	add    BYTE PTR [rcx],al
    1236:	00 55 d1             	add    BYTE PTR [rbp-0x2f],dl
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 00                	add    BYTE PTR [rax],al
    123d:	00 00                	add    BYTE PTR [rax],al
    123f:	00 d7                	add    bh,dl
    1241:	01 00                	add    DWORD PTR [rax],eax
    1243:	00 00                	add    BYTE PTR [rax],al
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	00 01                	add    BYTE PTR [rcx],al
    1249:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
	...
    1258:	00 00                	add    BYTE PTR [rax],al
    125a:	00 c0                	add    al,al
    125c:	00 00                	add    BYTE PTR [rax],al
    125e:	00 00                	add    BYTE PTR [rax],al
    1260:	00 00                	add    BYTE PTR [rax],al
    1262:	00 d1                	add    cl,dl
    1264:	00 00                	add    BYTE PTR [rax],al
    1266:	00 00                	add    BYTE PTR [rax],al
    1268:	00 00                	add    BYTE PTR [rax],al
    126a:	00 01                	add    BYTE PTR [rcx],al
    126c:	00 54 d1 00          	add    BYTE PTR [rcx+rdx*8+0x0],dl
    1270:	00 00                	add    BYTE PTR [rax],al
    1272:	00 00                	add    BYTE PTR [rax],al
    1274:	00 00                	add    BYTE PTR [rax],al
    1276:	d5                   	(bad)  
    1277:	01 00                	add    DWORD PTR [rax],eax
    1279:	00 00                	add    BYTE PTR [rax],al
    127b:	00 00                	add    BYTE PTR [rax],al
    127d:	00 01                	add    BYTE PTR [rcx],al
    127f:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
	...
    128e:	00 00                	add    BYTE PTR [rax],al
    1290:	00 c0                	add    al,al
    1292:	00 00                	add    BYTE PTR [rax],al
    1294:	00 00                	add    BYTE PTR [rax],al
    1296:	00 00                	add    BYTE PTR [rax],al
    1298:	00 e5                	add    ch,ah
    129a:	00 00                	add    BYTE PTR [rax],al
    129c:	00 00                	add    BYTE PTR [rax],al
    129e:	00 00                	add    BYTE PTR [rax],al
    12a0:	00 01                	add    BYTE PTR [rcx],al
    12a2:	00 51 e5             	add    BYTE PTR [rcx-0x1b],dl
    12a5:	00 00                	add    BYTE PTR [rax],al
    12a7:	00 00                	add    BYTE PTR [rax],al
    12a9:	00 00                	add    BYTE PTR [rax],al
    12ab:	00 77 01             	add    BYTE PTR [rdi+0x1],dh
    12ae:	00 00                	add    BYTE PTR [rax],al
    12b0:	00 00                	add    BYTE PTR [rax],al
    12b2:	00 00                	add    BYTE PTR [rax],al
    12b4:	01 00                	add    DWORD PTR [rax],eax
    12b6:	5f                   	pop    rdi
    12b7:	77 01                	ja     12ba <__abi_tag-0x3ff0c2>
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 00                	add    BYTE PTR [rax],al
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	80 01 00             	add    BYTE PTR [rcx],0x0
    12c2:	00 00                	add    BYTE PTR [rax],al
    12c4:	00 00                	add    BYTE PTR [rax],al
    12c6:	00 01                	add    BYTE PTR [rcx],al
    12c8:	00 51 9f             	add    BYTE PTR [rcx-0x61],dl
    12cb:	01 00                	add    DWORD PTR [rax],eax
    12cd:	00 00                	add    BYTE PTR [rax],al
    12cf:	00 00                	add    BYTE PTR [rax],al
    12d1:	00 a6 01 00 00 00    	add    BYTE PTR [rsi+0x1],ah
    12d7:	00 00                	add    BYTE PTR [rax],al
    12d9:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    12dc:	f3 01 51 9f          	repz add DWORD PTR [rcx-0x61],edx
	...
    12f0:	dc 00                	fadd   QWORD PTR [rax]
    12f2:	00 00                	add    BYTE PTR [rax],al
    12f4:	00 00                	add    BYTE PTR [rax],al
    12f6:	00 00                	add    BYTE PTR [rax],al
    12f8:	ef                   	out    dx,eax
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 00                	add    BYTE PTR [rax],al
    12fd:	00 00                	add    BYTE PTR [rax],al
    12ff:	00 02                	add    BYTE PTR [rdx],al
    1301:	00 30                	add    BYTE PTR [rax],dh
    1303:	9f                   	lahf   
    1304:	01 01                	add    DWORD PTR [rcx],eax
    1306:	00 00                	add    BYTE PTR [rax],al
    1308:	00 00                	add    BYTE PTR [rax],al
    130a:	00 00                	add    BYTE PTR [rax],al
    130c:	0d 01 00 00 00       	or     eax,0x1
    1311:	00 00                	add    BYTE PTR [rax],al
    1313:	00 01                	add    BYTE PTR [rcx],al
    1315:	00 53 10             	add    BYTE PTR [rbx+0x10],dl
    1318:	01 00                	add    DWORD PTR [rax],eax
    131a:	00 00                	add    BYTE PTR [rax],al
    131c:	00 00                	add    BYTE PTR [rax],al
    131e:	00 1b                	add    BYTE PTR [rbx],bl
    1320:	01 00                	add    DWORD PTR [rax],eax
    1322:	00 00                	add    BYTE PTR [rax],al
    1324:	00 00                	add    BYTE PTR [rax],al
    1326:	00 01                	add    BYTE PTR [rcx],al
    1328:	00 50 00             	add    BYTE PTR [rax+0x0],dl
	...
    1337:	00 00                	add    BYTE PTR [rax],al
    1339:	00 10                	add    BYTE PTR [rax],dl
    133b:	01 00                	add    DWORD PTR [rax],eax
    133d:	00 00                	add    BYTE PTR [rax],al
    133f:	00 00                	add    BYTE PTR [rax],al
    1341:	00 1b                	add    BYTE PTR [rbx],bl
    1343:	01 00                	add    DWORD PTR [rax],eax
    1345:	00 00                	add    BYTE PTR [rax],al
    1347:	00 00                	add    BYTE PTR [rax],al
    1349:	00 01                	add    BYTE PTR [rcx],al
    134b:	00 50 3e             	add    BYTE PTR [rax+0x3e],dl
    134e:	01 00                	add    DWORD PTR [rax],eax
    1350:	00 00                	add    BYTE PTR [rax],al
    1352:	00 00                	add    BYTE PTR [rax],al
    1354:	00 45 01             	add    BYTE PTR [rbp+0x1],al
    1357:	00 00                	add    BYTE PTR [rax],al
    1359:	00 00                	add    BYTE PTR [rax],al
    135b:	00 00                	add    BYTE PTR [rax],al
    135d:	01 00                	add    DWORD PTR [rax],eax
    135f:	56                   	push   rsi
    1360:	61                   	(bad)  
    1361:	01 00                	add    DWORD PTR [rax],eax
    1363:	00 00                	add    BYTE PTR [rax],al
    1365:	00 00                	add    BYTE PTR [rax],al
    1367:	00 70 01             	add    BYTE PTR [rax+0x1],dh
    136a:	00 00                	add    BYTE PTR [rax],al
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	00 00                	add    BYTE PTR [rax],al
    1370:	01 00                	add    DWORD PTR [rax],eax
    1372:	56                   	push   rsi
	...
    1383:	7a 01                	jp     1386 <__abi_tag-0x3feff6>
    1385:	00 00                	add    BYTE PTR [rax],al
    1387:	00 00                	add    BYTE PTR [rax],al
    1389:	00 00                	add    BYTE PTR [rax],al
    138b:	80 01 00             	add    BYTE PTR [rcx],0x0
    138e:	00 00                	add    BYTE PTR [rax],al
    1390:	00 00                	add    BYTE PTR [rax],al
    1392:	00 02                	add    BYTE PTR [rdx],al
    1394:	00 30                	add    BYTE PTR [rax],dh
    1396:	9f                   	lahf   
    1397:	80 01 00             	add    BYTE PTR [rcx],0x0
    139a:	00 00                	add    BYTE PTR [rax],al
    139c:	00 00                	add    BYTE PTR [rax],al
    139e:	00 c0                	add    al,al
    13a0:	01 00                	add    DWORD PTR [rax],eax
    13a2:	00 00                	add    BYTE PTR [rax],al
    13a4:	00 00                	add    BYTE PTR [rax],al
    13a6:	00 01                	add    BYTE PTR [rcx],al
    13a8:	00 53 00             	add    BYTE PTR [rbx+0x0],dl
	...
    13b7:	00 00                	add    BYTE PTR [rax],al
    13b9:	00 e0                	add    al,ah
    13bb:	01 00                	add    DWORD PTR [rax],eax
    13bd:	00 00                	add    BYTE PTR [rax],al
    13bf:	00 00                	add    BYTE PTR [rax],al
    13c1:	00 e7                	add    bh,ah
    13c3:	01 00                	add    DWORD PTR [rax],eax
    13c5:	00 00                	add    BYTE PTR [rax],al
    13c7:	00 00                	add    BYTE PTR [rax],al
    13c9:	00 01                	add    BYTE PTR [rcx],al
    13cb:	00 55 e7             	add    BYTE PTR [rbp-0x19],dl
    13ce:	01 00                	add    DWORD PTR [rax],eax
    13d0:	00 00                	add    BYTE PTR [rax],al
    13d2:	00 00                	add    BYTE PTR [rax],al
    13d4:	00 52 03             	add    BYTE PTR [rdx+0x3],dl
    13d7:	00 00                	add    BYTE PTR [rax],al
    13d9:	00 00                	add    BYTE PTR [rax],al
    13db:	00 00                	add    BYTE PTR [rax],al
    13dd:	01 00                	add    DWORD PTR [rax],eax
    13df:	53                   	push   rbx
    13e0:	52                   	push   rdx
    13e1:	03 00                	add    eax,DWORD PTR [rax]
    13e3:	00 00                	add    BYTE PTR [rax],al
    13e5:	00 00                	add    BYTE PTR [rax],al
    13e7:	00 59 03             	add    BYTE PTR [rcx+0x3],bl
    13ea:	00 00                	add    BYTE PTR [rax],al
    13ec:	00 00                	add    BYTE PTR [rax],al
    13ee:	00 00                	add    BYTE PTR [rax],al
    13f0:	04 00                	add    al,0x0
    13f2:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
	...
    1406:	10 04 00             	adc    BYTE PTR [rax+rax*1],al
    1409:	00 00                	add    BYTE PTR [rax],al
    140b:	00 00                	add    BYTE PTR [rax],al
    140d:	00 1d 04 00 00 00    	add    BYTE PTR [rip+0x4],bl        # 1417 <__abi_tag-0x3fef65>
    1413:	00 00                	add    BYTE PTR [rax],al
    1415:	00 01                	add    BYTE PTR [rcx],al
    1417:	00 55 1d             	add    BYTE PTR [rbp+0x1d],dl
    141a:	04 00                	add    al,0x0
    141c:	00 00                	add    BYTE PTR [rax],al
    141e:	00 00                	add    BYTE PTR [rax],al
    1420:	00 22                	add    BYTE PTR [rdx],ah
    1422:	04 00                	add    al,0x0
    1424:	00 00                	add    BYTE PTR [rax],al
    1426:	00 00                	add    BYTE PTR [rax],al
    1428:	00 01                	add    BYTE PTR [rcx],al
    142a:	00 53 a7             	add    BYTE PTR [rbx-0x59],dl
    142d:	04 00                	add    al,0x0
    142f:	00 00                	add    BYTE PTR [rax],al
    1431:	00 00                	add    BYTE PTR [rax],al
    1433:	00 b0 04 00 00 00    	add    BYTE PTR [rax+0x4],dh
    1439:	00 00                	add    BYTE PTR [rax],al
    143b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    143e:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
	...
    1452:	11 04 00             	adc    DWORD PTR [rax+rax*1],eax
    1455:	00 00                	add    BYTE PTR [rax],al
    1457:	00 00                	add    BYTE PTR [rax],al
    1459:	00 1d 04 00 00 00    	add    BYTE PTR [rip+0x4],bl        # 1463 <__abi_tag-0x3fef19>
    145f:	00 00                	add    BYTE PTR [rax],al
    1461:	00 01                	add    BYTE PTR [rcx],al
    1463:	00 55 1d             	add    BYTE PTR [rbp+0x1d],dl
    1466:	04 00                	add    al,0x0
    1468:	00 00                	add    BYTE PTR [rax],al
    146a:	00 00                	add    BYTE PTR [rax],al
    146c:	00 e1                	add    cl,ah
    146e:	05 00 00 00 00       	add    eax,0x0
    1473:	00 00                	add    BYTE PTR [rax],al
    1475:	01 00                	add    DWORD PTR [rax],eax
    1477:	53                   	push   rbx
	...
    1488:	ea                   	(bad)  
    1489:	04 00                	add    al,0x0
    148b:	00 00                	add    BYTE PTR [rax],al
    148d:	00 00                	add    BYTE PTR [rax],al
    148f:	00 10                	add    BYTE PTR [rax],dl
    1491:	05 00 00 00 00       	add    eax,0x0
    1496:	00 00                	add    BYTE PTR [rax],al
    1498:	01 00                	add    DWORD PTR [rax],eax
    149a:	50                   	push   rax
	...
    14b3:	0c 00                	or     al,0x0
    14b5:	00 00                	add    BYTE PTR [rax],al
    14b7:	00 00                	add    BYTE PTR [rax],al
    14b9:	00 00                	add    BYTE PTR [rax],al
    14bb:	01 00                	add    DWORD PTR [rax],eax
    14bd:	55                   	push   rbp
    14be:	0c 00                	or     al,0x0
    14c0:	00 00                	add    BYTE PTR [rax],al
    14c2:	00 00                	add    BYTE PTR [rax],al
    14c4:	00 00                	add    BYTE PTR [rax],al
    14c6:	fd                   	std    
    14c7:	00 00                	add    BYTE PTR [rax],al
    14c9:	00 00                	add    BYTE PTR [rax],al
    14cb:	00 00                	add    BYTE PTR [rax],al
    14cd:	00 01                	add    BYTE PTR [rcx],al
    14cf:	00 5f fd             	add    BYTE PTR [rdi-0x3],bl
    14d2:	00 00                	add    BYTE PTR [rax],al
    14d4:	00 00                	add    BYTE PTR [rax],al
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	00 fe                	add    dh,bh
    14da:	00 00                	add    BYTE PTR [rax],al
    14dc:	00 00                	add    BYTE PTR [rax],al
    14de:	00 00                	add    BYTE PTR [rax],al
    14e0:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    14e3:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
	...
    14f7:	1d 00 00 00 00       	sbb    eax,0x0
    14fc:	00 00                	add    BYTE PTR [rax],al
    14fe:	00 fb                	add    bl,bh
    1500:	00 00                	add    BYTE PTR [rax],al
    1502:	00 00                	add    BYTE PTR [rax],al
    1504:	00 00                	add    BYTE PTR [rax],al
    1506:	00 01                	add    BYTE PTR [rcx],al
    1508:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
	...
    151b:	01 00                	add    DWORD PTR [rax],eax
    151d:	00 00                	add    BYTE PTR [rax],al
    151f:	00 00                	add    BYTE PTR [rax],al
    1521:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
    1524:	00 00                	add    BYTE PTR [rax],al
    1526:	00 00                	add    BYTE PTR [rax],al
    1528:	00 00                	add    BYTE PTR [rax],al
    152a:	01 00                	add    DWORD PTR [rax],eax
    152c:	55                   	push   rbp
    152d:	04 01                	add    al,0x1
    152f:	00 00                	add    BYTE PTR [rax],al
    1531:	00 00                	add    BYTE PTR [rax],al
    1533:	00 00                	add    BYTE PTR [rax],al
    1535:	02 02                	add    al,BYTE PTR [rdx]
    1537:	00 00                	add    BYTE PTR [rax],al
    1539:	00 00                	add    BYTE PTR [rax],al
    153b:	00 00                	add    BYTE PTR [rax],al
    153d:	01 00                	add    DWORD PTR [rax],eax
    153f:	53                   	push   rbx
    1540:	02 02                	add    al,BYTE PTR [rdx]
    1542:	00 00                	add    BYTE PTR [rax],al
    1544:	00 00                	add    BYTE PTR [rax],al
    1546:	00 00                	add    BYTE PTR [rax],al
    1548:	07                   	(bad)  
    1549:	02 00                	add    al,BYTE PTR [rax]
    154b:	00 00                	add    BYTE PTR [rax],al
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1552:	f3 01 55 9f          	repz add DWORD PTR [rbp-0x61],edx
	...

Disassembly of section .debug_ranges:

0000000000000000 <.debug_ranges>:
   0:	f0 00 00             	lock add BYTE PTR [rax],al
   3:	00 00                	add    BYTE PTR [rax],al
   5:	00 00                	add    BYTE PTR [rax],al
   7:	00 1e                	add    BYTE PTR [rsi],bl
   9:	01 00                	add    DWORD PTR [rax],eax
   b:	00 00                	add    BYTE PTR [rax],al
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 25 01 00 00 00    	add    BYTE PTR [rip+0x1],ah        # 16 <__abi_tag-0x400366>
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 2f                	add    BYTE PTR [rdi],ch
  19:	01 00                	add    DWORD PTR [rax],eax
  1b:	00 00                	add    BYTE PTR [rax],al
  1d:	00 00                	add    BYTE PTR [rax],al
  1f:	00 44 01 00          	add    BYTE PTR [rcx+rax*1+0x0],al
  23:	00 00                	add    BYTE PTR [rax],al
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 4b 01             	add    BYTE PTR [rbx+0x1],cl
	...
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	02 01                	add    al,BYTE PTR [rcx]
  42:	00 00                	add    BYTE PTR [rax],al
  44:	00 00                	add    BYTE PTR [rax],al
  46:	00 00                	add    BYTE PTR [rax],al
  48:	3b 01                	cmp    eax,DWORD PTR [rcx]
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	00 00                	add    BYTE PTR [rax],al
  4e:	00 00                	add    BYTE PTR [rax],al
  50:	4c 01 00             	add    QWORD PTR [rax],r8
  53:	00 00                	add    BYTE PTR [rax],al
  55:	00 00                	add    BYTE PTR [rax],al
  57:	00 5e 01             	add    BYTE PTR [rsi+0x1],bl
	...
  6e:	00 00                	add    BYTE PTR [rax],al
  70:	75 01                	jne    73 <__abi_tag-0x400309>
  72:	00 00                	add    BYTE PTR [rax],al
  74:	00 00                	add    BYTE PTR [rax],al
  76:	00 00                	add    BYTE PTR [rax],al
  78:	f1                   	int1   
  79:	01 00                	add    DWORD PTR [rax],eax
  7b:	00 00                	add    BYTE PTR [rax],al
  7d:	00 00                	add    BYTE PTR [rax],al
  7f:	00 3d 02 00 00 00    	add    BYTE PTR [rip+0x2],bh        # 87 <__abi_tag-0x4002f5>
  85:	00 00                	add    BYTE PTR [rax],al
  87:	00 47 02             	add    BYTE PTR [rdi+0x2],al
	...
  9e:	00 00                	add    BYTE PTR [rax],al
  a0:	94                   	xchg   esp,eax
  a1:	00 00                	add    BYTE PTR [rax],al
  a3:	00 00                	add    BYTE PTR [rax],al
  a5:	00 00                	add    BYTE PTR [rax],al
  a7:	00 97 00 00 00 00    	add    BYTE PTR [rdi+0x0],dl
  ad:	00 00                	add    BYTE PTR [rax],al
  af:	00 a8 00 00 00 00    	add    BYTE PTR [rax+0x0],ch
  b5:	00 00                	add    BYTE PTR [rax],al
  b7:	00 e2                	add    dl,ah
	...
  cd:	00 00                	add    BYTE PTR [rax],al
  cf:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
  d2:	00 00                	add    BYTE PTR [rax],al
  d4:	00 00                	add    BYTE PTR [rax],al
  d6:	00 00                	add    BYTE PTR [rax],al
  d8:	75 00                	jne    da <__abi_tag-0x4002a2>
  da:	00 00                	add    BYTE PTR [rax],al
  dc:	00 00                	add    BYTE PTR [rax],al
  de:	00 00                	add    BYTE PTR [rax],al
  e0:	87 00                	xchg   DWORD PTR [rax],eax
  e2:	00 00                	add    BYTE PTR [rax],al
  e4:	00 00                	add    BYTE PTR [rax],al
  e6:	00 00                	add    BYTE PTR [rax],al
  e8:	e2 00                	loop   ea <__abi_tag-0x400292>
	...
