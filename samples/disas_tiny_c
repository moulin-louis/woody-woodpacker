
tiny_c:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <__abi_tag-0x37>
 328:	78 38                	js     362 <__abi_tag-0x2a>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	20 00                	and    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	00 00                	add    BYTE PTR [rax],al
 34b:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 34f:	00 03                	add    BYTE PTR [rbx],al
 351:	00 00                	add    BYTE PTR [rax],al
 353:	00 00                	add    BYTE PTR [rax],al
 355:	00 00                	add    BYTE PTR [rax],al
 357:	00 02                	add    BYTE PTR [rdx],al
 359:	80 00 c0             	add    BYTE PTR [rax],0xc0
 35c:	04 00                	add    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	01 00                	add    DWORD PTR [rax],eax
 362:	00 00                	add    BYTE PTR [rax],al
 364:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    al,0x0
 36a:	00 00                	add    BYTE PTR [rax],al
 36c:	14 00                	adc    al,0x0
 36e:	00 00                	add    BYTE PTR [rax],al
 370:	03 00                	add    eax,DWORD PTR [rax]
 372:	00 00                	add    BYTE PTR [rax],al
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push rbp
 377:	00 0b                	add    BYTE PTR [rbx],cl
 379:	fb                   	sti    
 37a:	c7                   	(bad)  
 37b:	93                   	xchg   ebx,eax
 37c:	f2 00 98 8a 70 e5 44 	repnz add BYTE PTR [rax+0x44e5708a],bl
 383:	e0 20                	loopne 3a5 <__abi_tag+0x19>
 385:	de 54 74 c1          	ficom  WORD PTR [rsp+rsi*2-0x3f]
 389:	85 fa                	test   edx,edi
 38b:	59                   	pop    rcx

Disassembly of section .note.ABI-tag:

000000000000038c <__abi_tag>:
 38c:	04 00                	add    al,0x0
 38e:	00 00                	add    BYTE PTR [rax],al
 390:	10 00                	adc    BYTE PTR [rax],al
 392:	00 00                	add    BYTE PTR [rax],al
 394:	01 00                	add    DWORD PTR [rax],eax
 396:	00 00                	add    BYTE PTR [rax],al
 398:	47                   	rex.RXB
 399:	4e 55                	rex.WRX push rbp
 39b:	00 00                	add    BYTE PTR [rax],al
 39d:	00 00                	add    BYTE PTR [rax],al
 39f:	00 03                	add    BYTE PTR [rbx],al
 3a1:	00 00                	add    BYTE PTR [rax],al
 3a3:	00 02                	add    BYTE PTR [rdx],al
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 00                	add    BYTE PTR [rax],al
 3a9:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    al,BYTE PTR [rax]
 3b2:	00 00                	add    BYTE PTR [rax],al
 3b4:	07                   	(bad)  
 3b5:	00 00                	add    BYTE PTR [rax],al
 3b7:	00 01                	add    BYTE PTR [rcx],al
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 06                	add    BYTE PTR [rsi],al
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 00                	add    BYTE PTR [rax],al
 3c1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3c7:	00 07                	add    BYTE PTR [rdi],al
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	00 00                	add    BYTE PTR [rax],al
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 d1                	add    cl,dl
 3d1:	65 ce                	gs (bad) 
 3d3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	10 00                	adc    BYTE PTR [rax],al
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 406:	00 00                	add    BYTE PTR [rax],al
 408:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
 40b:	00 20                	add    BYTE PTR [rax],ah
	...
 41d:	00 00                	add    BYTE PTR [rax],al
 41f:	00 22                	add    BYTE PTR [rdx],ah
 421:	00 00                	add    BYTE PTR [rax],al
 423:	00 12                	add    BYTE PTR [rdx],dl
	...
 435:	00 00                	add    BYTE PTR [rax],al
 437:	00 27                	add    BYTE PTR [rdi],ah
 439:	00 00                	add    BYTE PTR [rax],al
 43b:	00 12                	add    BYTE PTR [rdx],dl
	...
 44d:	00 00                	add    BYTE PTR [rax],al
 44f:	00 6b 00             	add    BYTE PTR [rbx+0x0],ch
 452:	00 00                	add    BYTE PTR [rax],al
 454:	20 00                	and    BYTE PTR [rax],al
	...
 466:	00 00                	add    BYTE PTR [rax],al
 468:	7a 00                	jp     46a <__abi_tag+0xde>
 46a:	00 00                	add    BYTE PTR [rax],al
 46c:	20 00                	and    BYTE PTR [rax],al
	...
 47e:	00 00                	add    BYTE PTR [rax],al
 480:	01 00                	add    DWORD PTR [rax],eax
 482:	00 00                	add    BYTE PTR [rax],al
 484:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000000498 <.dynstr>:
 498:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 49b:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 49e:	5f                   	pop    rdi
 49f:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 4a5:	7a 65                	jp     50c <__abi_tag+0x180>
 4a7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 4aa:	6c                   	ins    BYTE PTR es:[rdi],dx
 4ab:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 4b2:	72 74                	jb     528 <__abi_tag+0x19c>
 4b4:	5f                   	pop    rdi
 4b5:	6d                   	ins    DWORD PTR es:[rdi],dx
 4b6:	61                   	(bad)  
 4b7:	69 6e 00 70 75 74 73 	imul   ebp,DWORD PTR [rsi+0x0],0x73747570
 4be:	00 70 72             	add    BYTE PTR [rax+0x72],dh
 4c1:	69 6e 74 66 00 6c 69 	imul   ebp,DWORD PTR [rsi+0x74],0x696c0066
 4c8:	62 63 2e 73 6f       	(bad)
 4cd:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
 4d2:	49                   	rex.WB
 4d3:	42                   	rex.X
 4d4:	43 5f                	rex.XB pop r15
 4d6:	32 2e                	xor    ch,BYTE PTR [rsi]
 4d8:	32 2e                	xor    ch,BYTE PTR [rsi]
 4da:	35 00 47 4c 49       	xor    eax,0x494c4700
 4df:	42                   	rex.X
 4e0:	43 5f                	rex.XB pop r15
 4e2:	32 2e                	xor    ch,BYTE PTR [rsi]
 4e4:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 4e7:	5f                   	pop    rdi
 4e8:	49 54                	rex.WB push r12
 4ea:	4d 5f                	rex.WRB pop r15
 4ec:	64 65 72 65          	fs gs jb 555 <__abi_tag+0x1c9>
 4f0:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 4f7:	4d 
 4f8:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 4fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4fc:	65 54                	gs push rsp
 4fe:	61                   	(bad)  
 4ff:	62                   	(bad)  
 500:	6c                   	ins    BYTE PTR es:[rdi],dx
 501:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 505:	67 6d                	ins    DWORD PTR es:[edi],dx
 507:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 508:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 509:	5f                   	pop    rdi
 50a:	73 74                	jae    580 <__abi_tag+0x1f4>
 50c:	61                   	(bad)  
 50d:	72 74                	jb     583 <__abi_tag+0x1f7>
 50f:	5f                   	pop    rdi
 510:	5f                   	pop    rdi
 511:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 514:	54                   	push   rsp
 515:	4d 5f                	rex.WRB pop r15
 517:	72 65                	jb     57e <__abi_tag+0x1f2>
 519:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 520:	4d 
 521:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 523:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 524:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 525:	65 54                	gs push rsp
 527:	61                   	(bad)  
 528:	62                   	.byte 0x62
 529:	6c                   	ins    BYTE PTR es:[rdi],dx
 52a:	65                   	gs
	...

Disassembly of section .gnu.version:

000000000000052c <.gnu.version>:
 52c:	00 00                	add    BYTE PTR [rax],al
 52e:	02 00                	add    al,BYTE PTR [rax]
 530:	01 00                	add    DWORD PTR [rax],eax
 532:	03 00                	add    eax,DWORD PTR [rax]
 534:	03 00                	add    eax,DWORD PTR [rax]
 536:	01 00                	add    DWORD PTR [rax],eax
 538:	01 00                	add    DWORD PTR [rax],eax
 53a:	03 00                	add    eax,DWORD PTR [rax]

Disassembly of section .gnu.version_r:

0000000000000540 <.gnu.version_r>:
 540:	01 00                	add    DWORD PTR [rax],eax
 542:	02 00                	add    al,BYTE PTR [rax]
 544:	2e 00 00             	cs add BYTE PTR [rax],al
 547:	00 10                	add    BYTE PTR [rax],dl
 549:	00 00                	add    BYTE PTR [rax],al
 54b:	00 00                	add    BYTE PTR [rax],al
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 552:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 558:	38 00                	cmp    BYTE PTR [rax],al
 55a:	00 00                	add    BYTE PTR [rax],al
 55c:	10 00                	adc    BYTE PTR [rax],al
 55e:	00 00                	add    BYTE PTR [rax],al
 560:	b4 91                	mov    ah,0x91
 562:	96                   	xchg   esi,eax
 563:	06                   	(bad)  
 564:	00 00                	add    BYTE PTR [rax],al
 566:	02 00                	add    al,BYTE PTR [rax]
 568:	44 00 00             	add    BYTE PTR [rax],r8b
 56b:	00 00                	add    BYTE PTR [rax],al
 56d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000570 <.rela.dyn>:
 570:	b0 3d                	mov    al,0x3d
 572:	00 00                	add    BYTE PTR [rax],al
 574:	00 00                	add    BYTE PTR [rax],al
 576:	00 00                	add    BYTE PTR [rax],al
 578:	08 00                	or     BYTE PTR [rax],al
 57a:	00 00                	add    BYTE PTR [rax],al
 57c:	00 00                	add    BYTE PTR [rax],al
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	60                   	(bad)  
 581:	11 00                	adc    DWORD PTR [rax],eax
 583:	00 00                	add    BYTE PTR [rax],al
 585:	00 00                	add    BYTE PTR [rax],al
 587:	00 b8 3d 00 00 00    	add    BYTE PTR [rax+0x3d],bh
 58d:	00 00                	add    BYTE PTR [rax],al
 58f:	00 08                	add    BYTE PTR [rax],cl
 591:	00 00                	add    BYTE PTR [rax],al
 593:	00 00                	add    BYTE PTR [rax],al
 595:	00 00                	add    BYTE PTR [rax],al
 597:	00 20                	add    BYTE PTR [rax],ah
 599:	11 00                	adc    DWORD PTR [rax],eax
 59b:	00 00                	add    BYTE PTR [rax],al
 59d:	00 00                	add    BYTE PTR [rax],al
 59f:	00 08                	add    BYTE PTR [rax],cl
 5a1:	40 00 00             	rex add BYTE PTR [rax],al
 5a4:	00 00                	add    BYTE PTR [rax],al
 5a6:	00 00                	add    BYTE PTR [rax],al
 5a8:	08 00                	or     BYTE PTR [rax],al
 5aa:	00 00                	add    BYTE PTR [rax],al
 5ac:	00 00                	add    BYTE PTR [rax],al
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	08 40 00             	or     BYTE PTR [rax+0x0],al
 5b3:	00 00                	add    BYTE PTR [rax],al
 5b5:	00 00                	add    BYTE PTR [rax],al
 5b7:	00 d8                	add    al,bl
 5b9:	3f                   	(bad)  
 5ba:	00 00                	add    BYTE PTR [rax],al
 5bc:	00 00                	add    BYTE PTR [rax],al
 5be:	00 00                	add    BYTE PTR [rax],al
 5c0:	06                   	(bad)  
 5c1:	00 00                	add    BYTE PTR [rax],al
 5c3:	00 01                	add    BYTE PTR [rcx],al
	...
 5cd:	00 00                	add    BYTE PTR [rax],al
 5cf:	00 e0                	add    al,ah
 5d1:	3f                   	(bad)  
 5d2:	00 00                	add    BYTE PTR [rax],al
 5d4:	00 00                	add    BYTE PTR [rax],al
 5d6:	00 00                	add    BYTE PTR [rax],al
 5d8:	06                   	(bad)  
 5d9:	00 00                	add    BYTE PTR [rax],al
 5db:	00 02                	add    BYTE PTR [rdx],al
	...
 5e5:	00 00                	add    BYTE PTR [rax],al
 5e7:	00 e8                	add    al,ch
 5e9:	3f                   	(bad)  
 5ea:	00 00                	add    BYTE PTR [rax],al
 5ec:	00 00                	add    BYTE PTR [rax],al
 5ee:	00 00                	add    BYTE PTR [rax],al
 5f0:	06                   	(bad)  
 5f1:	00 00                	add    BYTE PTR [rax],al
 5f3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5f9 <__abi_tag+0x26d>
 5f9:	00 00                	add    BYTE PTR [rax],al
 5fb:	00 00                	add    BYTE PTR [rax],al
 5fd:	00 00                	add    BYTE PTR [rax],al
 5ff:	00 f0                	add    al,dh
 601:	3f                   	(bad)  
 602:	00 00                	add    BYTE PTR [rax],al
 604:	00 00                	add    BYTE PTR [rax],al
 606:	00 00                	add    BYTE PTR [rax],al
 608:	06                   	(bad)  
 609:	00 00                	add    BYTE PTR [rax],al
 60b:	00 06                	add    BYTE PTR [rsi],al
	...
 615:	00 00                	add    BYTE PTR [rax],al
 617:	00 f8                	add    al,bh
 619:	3f                   	(bad)  
 61a:	00 00                	add    BYTE PTR [rax],al
 61c:	00 00                	add    BYTE PTR [rax],al
 61e:	00 00                	add    BYTE PTR [rax],al
 620:	06                   	(bad)  
 621:	00 00                	add    BYTE PTR [rax],al
 623:	00 07                	add    BYTE PTR [rdi],al
	...

Disassembly of section .rela.plt:

0000000000000630 <.rela.plt>:
 630:	c8 3f 00 00          	enter  0x3f,0x0
 634:	00 00                	add    BYTE PTR [rax],al
 636:	00 00                	add    BYTE PTR [rax],al
 638:	07                   	(bad)  
 639:	00 00                	add    BYTE PTR [rax],al
 63b:	00 03                	add    BYTE PTR [rbx],al
	...
 645:	00 00                	add    BYTE PTR [rax],al
 647:	00 d0                	add    al,dl
 649:	3f                   	(bad)  
 64a:	00 00                	add    BYTE PTR [rax],al
 64c:	00 00                	add    BYTE PTR [rax],al
 64e:	00 00                	add    BYTE PTR [rax],al
 650:	07                   	(bad)  
 651:	00 00                	add    BYTE PTR [rax],al
 653:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 92 2f 00 00    	push   QWORD PTR [rip+0x2f92]        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 93 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f93]        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 9d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f9d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001060 <puts@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 5d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f5d]        # 3fc8 <puts@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001070 <printf@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 55 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f55]        # 3fd0 <printf@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	31 ed                	xor    ebp,ebp
    1086:	49 89 d1             	mov    r9,rdx
    1089:	5e                   	pop    rsi
    108a:	48 89 e2             	mov    rdx,rsp
    108d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1091:	50                   	push   rax
    1092:	54                   	push   rsp
    1093:	45 31 c0             	xor    r8d,r8d
    1096:	31 c9                	xor    ecx,ecx
    1098:	48 8d 3d ca 00 00 00 	lea    rdi,[rip+0xca]        # 1169 <main>
    109f:	ff 15 33 2f 00 00    	call   QWORD PTR [rip+0x2f33]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10a5:	f4                   	hlt    
    10a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    10ad:	00 00 00 

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    rdi,[rip+0x2f59]        # 4010 <__TMC_END__>
    10b7:	48 8d 05 52 2f 00 00 	lea    rax,[rip+0x2f52]        # 4010 <__TMC_END__>
    10be:	48 39 f8             	cmp    rax,rdi
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 16 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f16]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ca:	48 85 c0             	test   rax,rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmp    rax
    10d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    10d8:	c3                   	ret    
    10d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    rdi,[rip+0x2f29]        # 4010 <__TMC_END__>
    10e7:	48 8d 35 22 2f 00 00 	lea    rsi,[rip+0x2f22]        # 4010 <__TMC_END__>
    10ee:	48 29 fe             	sub    rsi,rdi
    10f1:	48 89 f0             	mov    rax,rsi
    10f4:	48 c1 ee 3f          	shr    rsi,0x3f
    10f8:	48 c1 f8 03          	sar    rax,0x3
    10fc:	48 01 c6             	add    rsi,rax
    10ff:	48 d1 fe             	sar    rsi,1
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ee5]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    110b:	48 85 c0             	test   rax,rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmp    rax
    1112:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	80 3d e5 2e 00 00 00 	cmp    BYTE PTR [rip+0x2ee5],0x0        # 4010 <__TMC_END__>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   rbp
    112e:	48 83 3d c2 2e 00 00 	cmp    QWORD PTR [rip+0x2ec2],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    rbp,rsp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2ec6]        # 4008 <__dso_handle>
    1142:	e8 09 ff ff ff       	call   1050 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	call   10b0 <deregister_tm_clones>
    114c:	c6 05 bd 2e 00 00 01 	mov    BYTE PTR [rip+0x2ebd],0x1        # 4010 <__TMC_END__>
    1153:	5d                   	pop    rbp
    1154:	c3                   	ret    
    1155:	0f 1f 00             	nop    DWORD PTR [rax]
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	e9 77 ff ff ff       	jmp    10e0 <register_tm_clones>

0000000000001169 <main>:
    1169:	f3 0f 1e fa          	endbr64 
    116d:	55                   	push   rbp
    116e:	48 89 e5             	mov    rbp,rsp
    1171:	48 83 ec 10          	sub    rsp,0x10
    1175:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    1178:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    117c:	48 8d 05 81 0e 00 00 	lea    rax,[rip+0xe81]        # 2004 <_IO_stdin_used+0x4>
    1183:	48 89 c7             	mov    rdi,rax
    1186:	e8 d5 fe ff ff       	call   1060 <puts@plt>
    118b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    118e:	89 c6                	mov    esi,eax
    1190:	48 8d 05 7b 0e 00 00 	lea    rax,[rip+0xe7b]        # 2012 <_IO_stdin_used+0x12>
    1197:	48 89 c7             	mov    rdi,rax
    119a:	b8 00 00 00 00       	mov    eax,0x0
    119f:	e8 cc fe ff ff       	call   1070 <printf@plt>
    11a4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    11a8:	48 89 c6             	mov    rsi,rax
    11ab:	48 8d 05 68 0e 00 00 	lea    rax,[rip+0xe68]        # 201a <_IO_stdin_used+0x1a>
    11b2:	48 89 c7             	mov    rdi,rax
    11b5:	b8 00 00 00 00       	mov    eax,0x0
    11ba:	e8 b1 fe ff ff       	call   1070 <printf@plt>
    11bf:	b8 00 00 00 00       	mov    eax,0x0
    11c4:	c9                   	leave  
    11c5:	c3                   	ret    

Disassembly of section .fini:

00000000000011c8 <_fini>:
    11c8:	f3 0f 1e fa          	endbr64 
    11cc:	48 83 ec 08          	sub    rsp,0x8
    11d0:	48 83 c4 08          	add    rsp,0x8
    11d4:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    DWORD PTR [rax],eax
    2002:	02 00                	add    al,BYTE PTR [rax]
    2004:	48                   	rex.W
    2005:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2007:	6c                   	ins    BYTE PTR es:[rdi],dx
    2008:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2009:	2c 20                	sub    al,0x20
    200b:	57                   	push   rdi
    200c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    200d:	72 6c                	jb     207b <__GNU_EH_FRAME_HDR+0x57>
    200f:	64 21 00             	and    DWORD PTR fs:[rax],eax
    2012:	61                   	(bad)  
    2013:	63 3a                	movsxd edi,DWORD PTR [rdx]
    2015:	20 25 64 0a 00 61    	and    BYTE PTR [rip+0x61000a64],ah        # 61002a7f <_end+0x60ffea67>
    201b:	76 3a                	jbe    2057 <__GNU_EH_FRAME_HDR+0x33>
    201d:	20                   	.byte 0x20
    201e:	25                   	.byte 0x25
    201f:	70 0a                	jo     202b <__GNU_EH_FRAME_HDR+0x7>
	...

Disassembly of section .eh_frame_hdr:

0000000000002024 <__GNU_EH_FRAME_HDR>:
    2024:	01 1b                	add    DWORD PTR [rbx],ebx
    2026:	03 3b                	add    edi,DWORD PTR [rbx]
    2028:	30 00                	xor    BYTE PTR [rax],al
    202a:	00 00                	add    BYTE PTR [rax],al
    202c:	05 00 00 00 fc       	add    eax,0xfc000000
    2031:	ef                   	out    dx,eax
    2032:	ff                   	(bad)  
    2033:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    2037:	00 2c f0             	add    BYTE PTR [rax+rsi*8],ch
    203a:	ff                   	(bad)  
    203b:	ff 8c 00 00 00 3c f0 	dec    DWORD PTR [rax+rax*1-0xfc40000]
    2042:	ff                   	(bad)  
    2043:	ff a4 00 00 00 5c f0 	jmp    QWORD PTR [rax+rax*1-0xfa40000]
    204a:	ff                   	(bad)  
    204b:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
    204f:	00 45 f1             	add    BYTE PTR [rbp-0xf],al
    2052:	ff                   	(bad)  
    2053:	ff                   	(bad)  
    2054:	bc                   	.byte 0xbc
    2055:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame:

0000000000002058 <__FRAME_END__-0xa8>:
    2058:	14 00                	adc    al,0x0
    205a:	00 00                	add    BYTE PTR [rax],al
    205c:	00 00                	add    BYTE PTR [rax],al
    205e:	00 00                	add    BYTE PTR [rax],al
    2060:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    2063:	00 01                	add    BYTE PTR [rcx],al
    2065:	78 10                	js     2077 <__GNU_EH_FRAME_HDR+0x53>
    2067:	01 1b                	add    DWORD PTR [rbx],ebx
    2069:	0c 07                	or     al,0x7
    206b:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    2071:	00 00                	add    BYTE PTR [rax],al
    2073:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    2076:	00 00                	add    BYTE PTR [rax],al
    2078:	08 f0                	or     al,dh
    207a:	ff                   	(bad)  
    207b:	ff 26                	jmp    QWORD PTR [rsi]
    207d:	00 00                	add    BYTE PTR [rax],al
    207f:	00 00                	add    BYTE PTR [rax],al
    2081:	44 07                	rex.R (bad) 
    2083:	10 00                	adc    BYTE PTR [rax],al
    2085:	00 00                	add    BYTE PTR [rax],al
    2087:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    208a:	00 00                	add    BYTE PTR [rax],al
    208c:	34 00                	xor    al,0x0
    208e:	00 00                	add    BYTE PTR [rax],al
    2090:	90                   	nop
    2091:	ef                   	out    dx,eax
    2092:	ff                   	(bad)  
    2093:	ff 30                	push   QWORD PTR [rax]
    2095:	00 00                	add    BYTE PTR [rax],al
    2097:	00 00                	add    BYTE PTR [rax],al
    2099:	0e                   	(bad)  
    209a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    209d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    20a0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    20a3:	80 00 3f             	add    BYTE PTR [rax],0x3f
    20a6:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    20a8:	2a 33                	sub    dh,BYTE PTR [rbx]
    20aa:	24 22                	and    al,0x22
    20ac:	00 00                	add    BYTE PTR [rax],al
    20ae:	00 00                	add    BYTE PTR [rax],al
    20b0:	14 00                	adc    al,0x0
    20b2:	00 00                	add    BYTE PTR [rax],al
    20b4:	5c                   	pop    rsp
    20b5:	00 00                	add    BYTE PTR [rax],al
    20b7:	00 98 ef ff ff 10    	add    BYTE PTR [rax+0x10ffffef],bl
	...
    20c5:	00 00                	add    BYTE PTR [rax],al
    20c7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    20ca:	00 00                	add    BYTE PTR [rax],al
    20cc:	74 00                	je     20ce <__GNU_EH_FRAME_HDR+0xaa>
    20ce:	00 00                	add    BYTE PTR [rax],al
    20d0:	90                   	nop
    20d1:	ef                   	out    dx,eax
    20d2:	ff                   	(bad)  
    20d3:	ff 20                	jmp    QWORD PTR [rax]
	...
    20dd:	00 00                	add    BYTE PTR [rax],al
    20df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    20e2:	00 00                	add    BYTE PTR [rax],al
    20e4:	8c 00                	mov    WORD PTR [rax],es
    20e6:	00 00                	add    BYTE PTR [rax],al
    20e8:	81 f0 ff ff 5d 00    	xor    eax,0x5dffff
    20ee:	00 00                	add    BYTE PTR [rax],al
    20f0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    20f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    20f9:	02 54 0c 07          	add    dl,BYTE PTR [rsp+rcx*1+0x7]
    20fd:	08 00                	or     BYTE PTR [rax],al
	...

0000000000002100 <__FRAME_END__>:
    2100:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003db0 <__frame_dummy_init_array_entry>:
    3db0:	60                   	(bad)  
    3db1:	11 00                	adc    DWORD PTR [rax],eax
    3db3:	00 00                	add    BYTE PTR [rax],al
    3db5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000003db8 <__do_global_dtors_aux_fini_array_entry>:
    3db8:	20 11                	and    BYTE PTR [rcx],dl
    3dba:	00 00                	add    BYTE PTR [rax],al
    3dbc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003dc0 <_DYNAMIC>:
    3dc0:	01 00                	add    DWORD PTR [rax],eax
    3dc2:	00 00                	add    BYTE PTR [rax],al
    3dc4:	00 00                	add    BYTE PTR [rax],al
    3dc6:	00 00                	add    BYTE PTR [rax],al
    3dc8:	2e 00 00             	cs add BYTE PTR [rax],al
    3dcb:	00 00                	add    BYTE PTR [rax],al
    3dcd:	00 00                	add    BYTE PTR [rax],al
    3dcf:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    3dd2:	00 00                	add    BYTE PTR [rax],al
    3dd4:	00 00                	add    BYTE PTR [rax],al
    3dd6:	00 00                	add    BYTE PTR [rax],al
    3dd8:	00 10                	add    BYTE PTR [rax],dl
    3dda:	00 00                	add    BYTE PTR [rax],al
    3ddc:	00 00                	add    BYTE PTR [rax],al
    3dde:	00 00                	add    BYTE PTR [rax],al
    3de0:	0d 00 00 00 00       	or     eax,0x0
    3de5:	00 00                	add    BYTE PTR [rax],al
    3de7:	00 c8                	add    al,cl
    3de9:	11 00                	adc    DWORD PTR [rax],eax
    3deb:	00 00                	add    BYTE PTR [rax],al
    3ded:	00 00                	add    BYTE PTR [rax],al
    3def:	00 19                	add    BYTE PTR [rcx],bl
    3df1:	00 00                	add    BYTE PTR [rax],al
    3df3:	00 00                	add    BYTE PTR [rax],al
    3df5:	00 00                	add    BYTE PTR [rax],al
    3df7:	00 b0 3d 00 00 00    	add    BYTE PTR [rax+0x3d],dh
    3dfd:	00 00                	add    BYTE PTR [rax],al
    3dff:	00 1b                	add    BYTE PTR [rbx],bl
    3e01:	00 00                	add    BYTE PTR [rax],al
    3e03:	00 00                	add    BYTE PTR [rax],al
    3e05:	00 00                	add    BYTE PTR [rax],al
    3e07:	00 08                	add    BYTE PTR [rax],cl
    3e09:	00 00                	add    BYTE PTR [rax],al
    3e0b:	00 00                	add    BYTE PTR [rax],al
    3e0d:	00 00                	add    BYTE PTR [rax],al
    3e0f:	00 1a                	add    BYTE PTR [rdx],bl
    3e11:	00 00                	add    BYTE PTR [rax],al
    3e13:	00 00                	add    BYTE PTR [rax],al
    3e15:	00 00                	add    BYTE PTR [rax],al
    3e17:	00 b8 3d 00 00 00    	add    BYTE PTR [rax+0x3d],bh
    3e1d:	00 00                	add    BYTE PTR [rax],al
    3e1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    3e22:	00 00                	add    BYTE PTR [rax],al
    3e24:	00 00                	add    BYTE PTR [rax],al
    3e26:	00 00                	add    BYTE PTR [rax],al
    3e28:	08 00                	or     BYTE PTR [rax],al
    3e2a:	00 00                	add    BYTE PTR [rax],al
    3e2c:	00 00                	add    BYTE PTR [rax],al
    3e2e:	00 00                	add    BYTE PTR [rax],al
    3e30:	f5                   	cmc    
    3e31:	fe                   	(bad)  
    3e32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e35:	00 00                	add    BYTE PTR [rax],al
    3e37:	00 b0 03 00 00 00    	add    BYTE PTR [rax+0x3],dh
    3e3d:	00 00                	add    BYTE PTR [rax],al
    3e3f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e45 <_DYNAMIC+0x85>
    3e45:	00 00                	add    BYTE PTR [rax],al
    3e47:	00 98 04 00 00 00    	add    BYTE PTR [rax+0x4],bl
    3e4d:	00 00                	add    BYTE PTR [rax],al
    3e4f:	00 06                	add    BYTE PTR [rsi],al
    3e51:	00 00                	add    BYTE PTR [rax],al
    3e53:	00 00                	add    BYTE PTR [rax],al
    3e55:	00 00                	add    BYTE PTR [rax],al
    3e57:	00 d8                	add    al,bl
    3e59:	03 00                	add    eax,DWORD PTR [rax]
    3e5b:	00 00                	add    BYTE PTR [rax],al
    3e5d:	00 00                	add    BYTE PTR [rax],al
    3e5f:	00 0a                	add    BYTE PTR [rdx],cl
    3e61:	00 00                	add    BYTE PTR [rax],al
    3e63:	00 00                	add    BYTE PTR [rax],al
    3e65:	00 00                	add    BYTE PTR [rax],al
    3e67:	00 94 00 00 00 00 00 	add    BYTE PTR [rax+rax*1+0x0],dl
    3e6e:	00 00                	add    BYTE PTR [rax],al
    3e70:	0b 00                	or     eax,DWORD PTR [rax]
    3e72:	00 00                	add    BYTE PTR [rax],al
    3e74:	00 00                	add    BYTE PTR [rax],al
    3e76:	00 00                	add    BYTE PTR [rax],al
    3e78:	18 00                	sbb    BYTE PTR [rax],al
    3e7a:	00 00                	add    BYTE PTR [rax],al
    3e7c:	00 00                	add    BYTE PTR [rax],al
    3e7e:	00 00                	add    BYTE PTR [rax],al
    3e80:	15 00 00 00 00       	adc    eax,0x0
	...
    3e8d:	00 00                	add    BYTE PTR [rax],al
    3e8f:	00 03                	add    BYTE PTR [rbx],al
    3e91:	00 00                	add    BYTE PTR [rax],al
    3e93:	00 00                	add    BYTE PTR [rax],al
    3e95:	00 00                	add    BYTE PTR [rax],al
    3e97:	00 b0 3f 00 00 00    	add    BYTE PTR [rax+0x3f],dh
    3e9d:	00 00                	add    BYTE PTR [rax],al
    3e9f:	00 02                	add    BYTE PTR [rdx],al
    3ea1:	00 00                	add    BYTE PTR [rax],al
    3ea3:	00 00                	add    BYTE PTR [rax],al
    3ea5:	00 00                	add    BYTE PTR [rax],al
    3ea7:	00 30                	add    BYTE PTR [rax],dh
    3ea9:	00 00                	add    BYTE PTR [rax],al
    3eab:	00 00                	add    BYTE PTR [rax],al
    3ead:	00 00                	add    BYTE PTR [rax],al
    3eaf:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    3eb2:	00 00                	add    BYTE PTR [rax],al
    3eb4:	00 00                	add    BYTE PTR [rax],al
    3eb6:	00 00                	add    BYTE PTR [rax],al
    3eb8:	07                   	(bad)  
    3eb9:	00 00                	add    BYTE PTR [rax],al
    3ebb:	00 00                	add    BYTE PTR [rax],al
    3ebd:	00 00                	add    BYTE PTR [rax],al
    3ebf:	00 17                	add    BYTE PTR [rdi],dl
    3ec1:	00 00                	add    BYTE PTR [rax],al
    3ec3:	00 00                	add    BYTE PTR [rax],al
    3ec5:	00 00                	add    BYTE PTR [rax],al
    3ec7:	00 30                	add    BYTE PTR [rax],dh
    3ec9:	06                   	(bad)  
    3eca:	00 00                	add    BYTE PTR [rax],al
    3ecc:	00 00                	add    BYTE PTR [rax],al
    3ece:	00 00                	add    BYTE PTR [rax],al
    3ed0:	07                   	(bad)  
    3ed1:	00 00                	add    BYTE PTR [rax],al
    3ed3:	00 00                	add    BYTE PTR [rax],al
    3ed5:	00 00                	add    BYTE PTR [rax],al
    3ed7:	00 70 05             	add    BYTE PTR [rax+0x5],dh
    3eda:	00 00                	add    BYTE PTR [rax],al
    3edc:	00 00                	add    BYTE PTR [rax],al
    3ede:	00 00                	add    BYTE PTR [rax],al
    3ee0:	08 00                	or     BYTE PTR [rax],al
    3ee2:	00 00                	add    BYTE PTR [rax],al
    3ee4:	00 00                	add    BYTE PTR [rax],al
    3ee6:	00 00                	add    BYTE PTR [rax],al
    3ee8:	c0 00 00             	rol    BYTE PTR [rax],0x0
    3eeb:	00 00                	add    BYTE PTR [rax],al
    3eed:	00 00                	add    BYTE PTR [rax],al
    3eef:	00 09                	add    BYTE PTR [rcx],cl
    3ef1:	00 00                	add    BYTE PTR [rax],al
    3ef3:	00 00                	add    BYTE PTR [rax],al
    3ef5:	00 00                	add    BYTE PTR [rax],al
    3ef7:	00 18                	add    BYTE PTR [rax],bl
    3ef9:	00 00                	add    BYTE PTR [rax],al
    3efb:	00 00                	add    BYTE PTR [rax],al
    3efd:	00 00                	add    BYTE PTR [rax],al
    3eff:	00 1e                	add    BYTE PTR [rsi],bl
    3f01:	00 00                	add    BYTE PTR [rax],al
    3f03:	00 00                	add    BYTE PTR [rax],al
    3f05:	00 00                	add    BYTE PTR [rax],al
    3f07:	00 08                	add    BYTE PTR [rax],cl
    3f09:	00 00                	add    BYTE PTR [rax],al
    3f0b:	00 00                	add    BYTE PTR [rax],al
    3f0d:	00 00                	add    BYTE PTR [rax],al
    3f0f:	00 fb                	add    bl,bh
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f15:	00 00                	add    BYTE PTR [rax],al
    3f17:	00 01                	add    BYTE PTR [rcx],al
    3f19:	00 00                	add    BYTE PTR [rax],al
    3f1b:	08 00                	or     BYTE PTR [rax],al
    3f1d:	00 00                	add    BYTE PTR [rax],al
    3f1f:	00 fe                	add    dh,bh
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f25:	00 00                	add    BYTE PTR [rax],al
    3f27:	00 40 05             	add    BYTE PTR [rax+0x5],al
    3f2a:	00 00                	add    BYTE PTR [rax],al
    3f2c:	00 00                	add    BYTE PTR [rax],al
    3f2e:	00 00                	add    BYTE PTR [rax],al
    3f30:	ff                   	(bad)  
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f35:	00 00                	add    BYTE PTR [rax],al
    3f37:	00 01                	add    BYTE PTR [rcx],al
    3f39:	00 00                	add    BYTE PTR [rax],al
    3f3b:	00 00                	add    BYTE PTR [rax],al
    3f3d:	00 00                	add    BYTE PTR [rax],al
    3f3f:	00 f0                	add    al,dh
    3f41:	ff                   	(bad)  
    3f42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f45:	00 00                	add    BYTE PTR [rax],al
    3f47:	00 2c 05 00 00 00 00 	add    BYTE PTR [rax*1+0x0],ch
    3f4e:	00 00                	add    BYTE PTR [rax],al
    3f50:	f9                   	stc    
    3f51:	ff                   	(bad)  
    3f52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f55:	00 00                	add    BYTE PTR [rax],al
    3f57:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000003fb0 <_GLOBAL_OFFSET_TABLE_>:
    3fb0:	c0 3d 00 00 00 00 00 	sar    BYTE PTR [rip+0x0],0x0        # 3fb7 <_GLOBAL_OFFSET_TABLE_+0x7>
	...
    3fc7:	00 30                	add    BYTE PTR [rax],dh
    3fc9:	10 00                	adc    BYTE PTR [rax],al
    3fcb:	00 00                	add    BYTE PTR [rax],al
    3fcd:	00 00                	add    BYTE PTR [rax],al
    3fcf:	00 40 10             	add    BYTE PTR [rax+0x10],al
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     BYTE PTR [rax+0x0],al
    400b:	00 00                	add    BYTE PTR [rax],al
    400d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000004010 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__abi_tag-0x314>
   a:	74 75                	je     81 <__abi_tag-0x30b>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	31 2e                	xor    DWORD PTR [rsi],ebp
  10:	34 2e                	xor    al,0x2e
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x75623531>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <__abi_tag-0x2fc>
  1b:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1e:	32 2e                	xor    ch,BYTE PTR [rsi]
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 31                	and    BYTE PTR [rcx],dh
  25:	31 2e                	xor    DWORD PTR [rsi],ebp
  27:	34 2e                	xor    al,0x2e
  29:	30 00                	xor    BYTE PTR [rax],al
